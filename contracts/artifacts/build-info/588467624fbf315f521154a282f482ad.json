{
	"id": "588467624fbf315f521154a282f482ad",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StakingReward.sol": {
				"content": "pragma solidity ^0.5.9;\r\n\r\nimport \"./SafeMath.sol\";\r\nimport \"./ERC20Detailed.sol\";\r\nimport \"./SafeERC20.sol\";\r\nimport \"./ReentrancyGuard.sol\";\r\n\r\n// Inheritance\r\nimport \"./interfaces/IStakingRewards.sol\";\r\nimport \"./RewardsDistributionRecipient.sol\";\r\nimport \"./Pausable.sol\";\r\n\r\n// https://docs.synthetix.io/contracts/source/contracts/stakingrewards\r\ncontract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard, Pausable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    /* ========== STATE VARIABLES ========== */\r\n\r\n    IERC20 public rewardsToken;\r\n    IERC20 public stakingToken;\r\n    uint256 public periodFinish = 0;\r\n    uint256 public rewardRate = 0;\r\n    uint256 public rewardsDuration = 7 days;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    uint256 private _totalSupply;\r\n    mapping(address => uint256) private _balances;\r\n\r\n    /* ========== CONSTRUCTOR ========== */\r\n\r\n    constructor(\r\n        address _owner,\r\n        address _rewardsDistribution,\r\n        address _rewardsToken,\r\n        address _stakingToken\r\n    ) public Owned(_owner) {\r\n        rewardsToken = IERC20(_rewardsToken);\r\n        stakingToken = IERC20(_stakingToken);\r\n        rewardsDistribution = _rewardsDistribution;\r\n    }\r\n\r\n    /* ========== VIEWS ========== */\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function lastTimeRewardApplicable() public view returns (uint256) {\r\n        return block.timestamp < periodFinish ? block.timestamp : periodFinish;\r\n    }\r\n\r\n    function rewardPerToken() public view returns (uint256) {\r\n        if (_totalSupply == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n            rewardPerTokenStored.add(\r\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply)\r\n            );\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256) {\r\n        return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\r\n    }\r\n\r\n    function getRewardForDuration() external view returns (uint256) {\r\n        return rewardRate.mul(rewardsDuration);\r\n    }\r\n\r\n    /* ========== MUTATIVE FUNCTIONS ========== */\r\n\r\n    function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\r\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot withdraw 0\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\r\n        stakingToken.safeTransfer(msg.sender, amount);\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n\r\n    function getReward() public nonReentrant updateReward(msg.sender) {\r\n        uint256 reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.safeTransfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n    function exit() external {\r\n        withdraw(_balances[msg.sender]);\r\n        getReward();\r\n    }\r\n\r\n    /* ========== RESTRICTED FUNCTIONS ========== */\r\n\r\n    function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r\n        if (block.timestamp >= periodFinish) {\r\n            rewardRate = reward.div(rewardsDuration);\r\n        } else {\r\n            uint256 remaining = periodFinish.sub(block.timestamp);\r\n            uint256 leftover = remaining.mul(rewardRate);\r\n            rewardRate = reward.add(leftover).div(rewardsDuration);\r\n        }\r\n\r\n        // Ensure the provided reward amount is not more than the balance in the contract.\r\n        // This keeps the reward rate in the right range, preventing overflows due to\r\n        // very high values of rewardRate in the earned and rewardsPerToken functions;\r\n        // Reward + leftover must be less than 2^256 / 10^18 to avoid overflow.\r\n        uint balance = rewardsToken.balanceOf(address(this));\r\n        require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\");\r\n\r\n        lastUpdateTime = block.timestamp;\r\n        periodFinish = block.timestamp.add(rewardsDuration);\r\n        emit RewardAdded(reward);\r\n    }\r\n\r\n    // Added to support recovering LP Rewards from other systems such as BAL to be distributed to holders\r\n    function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\r\n        require(tokenAddress != address(stakingToken), \"Cannot withdraw the staking token\");\r\n        IERC20(tokenAddress).safeTransfer(owner, tokenAmount);\r\n        emit Recovered(tokenAddress, tokenAmount);\r\n    }\r\n\r\n    function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\r\n        require(\r\n            block.timestamp > periodFinish,\r\n            \"Previous rewards period must be complete before changing the duration for the new period\"\r\n        );\r\n        rewardsDuration = _rewardsDuration;\r\n        emit RewardsDurationUpdated(rewardsDuration);\r\n    }\r\n\r\n    /* ========== MODIFIERS ========== */\r\n\r\n    modifier updateReward(address account) {\r\n        rewardPerTokenStored = rewardPerToken();\r\n        lastUpdateTime = lastTimeRewardApplicable();\r\n        if (account != address(0)) {\r\n            rewards[account] = earned(account);\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n        }\r\n        _;\r\n    }\r\n\r\n    /* ========== EVENTS ========== */\r\n\r\n    event RewardAdded(uint256 reward);\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n    event RewardsDurationUpdated(uint256 newDuration);\r\n    event Recovered(address token, uint256 amount);\r\n}\r\n"
			},
			"contracts/Pausable.sol": {
				"content": "pragma solidity ^0.5.9;\n\n// Inheritance\nimport \"./Owned.sol\";\n\n// https://docs.synthetix.io/contracts/source/contracts/pausable\ncontract Pausable is Owned {\n    uint public lastPauseTime;\n    bool public paused;\n\n    constructor() internal {\n        // This contract is abstract, and thus cannot be instantiated directly\n        require(owner != address(0), \"Owner must be set\");\n        // Paused will be false, and lastPauseTime will be 0 upon initialisation\n    }\n\n    /**\n     * @notice Change the paused state of the contract\n     * @dev Only the contract owner may call this.\n     */\n    function setPaused(bool _paused) external onlyOwner {\n        // Ensure we're actually changing the state before we do anything\n        if (_paused == paused) {\n            return;\n        }\n\n        // Set our paused state.\n        paused = _paused;\n\n        // If applicable, set the last pause time.\n        if (paused) {\n            lastPauseTime = now;\n        }\n\n        // Let everyone know that our pause state has changed.\n        emit PauseChanged(paused);\n    }\n\n    event PauseChanged(bool isPaused);\n\n    modifier notPaused {\n        require(!paused, \"This action cannot be performed while the contract is paused\");\n        _;\n    }\n}\n"
			},
			"contracts/RewardsDistributionRecipient.sol": {
				"content": "pragma solidity ^0.5.9;\n\n// Inheritance\nimport \"./Owned.sol\";\n\n// https://docs.synthetix.io/contracts/source/contracts/rewardsdistributionrecipient\ncontract RewardsDistributionRecipient is Owned {\n    address public rewardsDistribution;\n\n    function notifyRewardAmount(uint256 reward) external;\n\n    modifier onlyRewardsDistribution() {\n        require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\");\n        _;\n    }\n\n    function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {\n        rewardsDistribution = _rewardsDistribution;\n    }\n}\n"
			},
			"contracts/interfaces/IStakingRewards.sol": {
				"content": "pragma solidity >=0.4.24;\n\n// https://docs.synthetix.io/contracts/source/interfaces/istakingrewards\ninterface IStakingRewards {\n    // Views\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function earned(address account) external view returns (uint256);\n\n    function getRewardForDuration() external view returns (uint256);\n\n    function lastTimeRewardApplicable() external view returns (uint256);\n\n    function rewardPerToken() external view returns (uint256);\n\n    function rewardsDistribution() external view returns (address);\n\n    function rewardsToken() external view returns (address);\n\n    function totalSupply() external view returns (uint256);\n\n    // Mutative\n\n    function exit() external;\n\n    function getReward() external;\n\n    function stake(uint256 amount) external;\n\n    function withdraw(uint256 amount) external;\n}\n"
			},
			"contracts/ReentrancyGuard.sol": {
				"content": "pragma solidity ^0.5.2;\n\n/**\n * @title Helps contracts guard against reentrancy attacks.\n * @author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\n * @dev If you mark a function `nonReentrant`, you should also\n * mark it `external`.\n */\ncontract ReentrancyGuard {\n    /// @dev counter to allow mutex lock with only one SSTORE operation\n    uint256 private _guardCounter;\n\n    constructor () internal {\n        // The counter starts at one to prevent changing it from zero to a non-zero\n        // value, which is a more expensive operation.\n        _guardCounter = 1;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _guardCounter += 1;\n        uint256 localCounter = _guardCounter;\n        _;\n        require(localCounter == _guardCounter);\n    }\n}\n"
			},
			"contracts/SafeERC20.sol": {
				"content": "pragma solidity ^0.5.2;\n\nimport \"./IERC20.sol\";\nimport \"./SafeMath.sol\";\nimport \"./Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require((value == 0) || (token.allowance(address(this), spender) == 0));\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n\n        require(address(token).isContract());\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success);\n\n        if (returndata.length > 0) { // Return data is optional\n            require(abi.decode(returndata, (bool)));\n        }\n    }\n}\n"
			},
			"contracts/ERC20Detailed.sol": {
				"content": "pragma solidity ^0.5.2;\n\nimport \"./IERC20.sol\";\n\n/**\n * @title ERC20Detailed token\n * @dev The decimals are only for visualization purposes.\n * All the operations are done using the smallest and indivisible token unit,\n * just as on Ethereum all the operations are done in wei.\n */\ncontract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\n\n    /**\n     * @return the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @return the symbol of the token.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @return the number of decimals of the token.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n}\n"
			},
			"contracts/SafeMath.sol": {
				"content": "pragma solidity ^0.5.9;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"contracts/Address.sol": {
				"content": "pragma solidity ^0.5.2;\n\n/**\n * Utility library of inline functions on addresses\n */\nlibrary Address {\n    /**\n     * Returns whether the target address is a contract\n     * @dev This function will return false if invoked during the constructor of a contract,\n     * as the code is not actually created until after the constructor finishes.\n     * @param account address of the account to check\n     * @return whether the target address is a contract\n     */\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        // XXX Currently there is no better way to check if there is a contract in an address\n        // than to check the size of the code at that address.\n        // See https://ethereum.stackexchange.com/a/14016/36603\n        // for more details about how this works.\n        // TODO Check this again before the Serenity release, because all addresses will be\n        // contracts then.\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}\n"
			},
			"contracts/IERC20.sol": {
				"content": "pragma solidity ^0.5.2;\n\n/**\n * @title ERC20 interface\n * @dev see https://eips.ethereum.org/EIPS/eip-20\n */\ninterface IERC20 {\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address who) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/Owned.sol": {
				"content": "pragma solidity ^0.5.9;\n\n// https://docs.synthetix.io/contracts/source/contracts/owned\ncontract Owned {\n    address public owner;\n    address public nominatedOwner;\n\n    constructor(address _owner) public {\n        require(_owner != address(0), \"Owner address cannot be 0\");\n        owner = _owner;\n        emit OwnerChanged(address(0), _owner);\n    }\n\n    function nominateNewOwner(address _owner) external onlyOwner {\n        nominatedOwner = _owner;\n        emit OwnerNominated(_owner);\n    }\n\n    function acceptOwnership() external {\n        require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\");\n        emit OwnerChanged(owner, nominatedOwner);\n        owner = nominatedOwner;\n        nominatedOwner = address(0);\n    }\n\n    modifier onlyOwner {\n        _onlyOwner();\n        _;\n    }\n\n    function _onlyOwner() private view {\n        require(msg.sender == owner, \"Only the contract owner may perform this action\");\n    }\n\n    event OwnerNominated(address newOwner);\n    event OwnerChanged(address oldOwner, address newOwner);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Address.sol\":85:1081  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Address.sol\":85:1081  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820cd4bd1f3d1072f5686b2068831f3f10d5ebe91baf8aa144c4442f3b4ad9ed71564736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820cd4bd1f3d1072f5686b2068831f3f10d5ebe91baf8aa144c4442f3b4ad9ed71564736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCD 0x4B 0xD1 RETURN 0xD1 SMOD 0x2F JUMP DUP7 0xB2 MOD DUP9 BALANCE RETURN CALL 0xD 0x5E 0xBE SWAP2 0xBA 0xF8 0xAA EQ 0x4C DIFFICULTY TIMESTAMP RETURN 0xB4 0xAD SWAP15 0xD7 ISZERO PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "85:996:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820cd4bd1f3d1072f5686b2068831f3f10d5ebe91baf8aa144c4442f3b4ad9ed71564736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCD 0x4B 0xD1 RETURN 0xD1 SMOD 0x2F JUMP DUP7 0xB2 MOD DUP9 BALANCE RETURN CALL 0xD 0x5E 0xBE SWAP2 0xBA 0xF8 0xAA EQ 0x4C DIFFICULTY TIMESTAMP RETURN 0xB4 0xAD SWAP15 0xD7 ISZERO PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "85:996:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 85,
									"end": 1081,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 85,
									"end": 1081,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820cd4bd1f3d1072f5686b2068831f3f10d5ebe91baf8aa144c4442f3b4ad9ed71564736f6c63430005110032",
									".code": [
										{
											"begin": 85,
											"end": 1081,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "ADDRESS"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "EQ"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "MSTORE"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "DUP1"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Utility library of inline functions on addresses\"}},\"settings\":{\"compilationTarget\":{\"contracts/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzz-raw://95b3b4b5c8008b6d8a862a797bf2550e8017cbff25d0e36be86cff48b1a9bbf2\",\"dweb:/ipfs/QmZWK9sD6V3jwSarEyheM8PjHFVcuA11W65FgAZ2fsu9sq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {},
						"notice": "Utility library of inline functions on addresses"
					}
				}
			},
			"contracts/ERC20Detailed.sol": {
				"ERC20Detailed": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The decimals are only for visualization purposes. All the operations are done using the smallest and indivisible token unit, just as on Ethereum all the operations are done in wei.",
						"methods": {
							"decimals()": {
								"return": "the number of decimals of the token."
							},
							"name()": {
								"return": "the name of the token."
							},
							"symbol()": {
								"return": "the symbol of the token."
							}
						},
						"title": "ERC20Detailed token"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The decimals are only for visualization purposes. All the operations are done using the smallest and indivisible token unit, just as on Ethereum all the operations are done in wei.\",\"methods\":{\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"name()\":{\"return\":\"the name of the token.\"},\"symbol()\":{\"return\":\"the symbol of the token.\"}},\"title\":\"ERC20Detailed token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20Detailed.sol\":{\"keccak256\":\"0xa60f7f7ce98ca2d75c8e02da982d3fe91176269fdab2589bbbb7cc65f2d7c9d3\",\"urls\":[\"bzz-raw://474ed670385e8330760b0d43d630d26a325ab35a26833f57017293638b1cd203\",\"dweb:/ipfs/QmcH3d11kFcbYrJakfjdhLGakNG9hrWe9zYvTXhC7Kbb7D\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzz-raw://289216c82b0a5312ed8883e117d5dead4f62837b911df982a3e1a81cbb43aecf\",\"dweb:/ipfs/QmegSf8KXg7rFnEtQnu5XuTq6jYQXtge7UDCSZfhk7CkDq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "contracts/ERC20Detailed.sol:ERC20Detailed",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "contracts/ERC20Detailed.sol:ERC20Detailed",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 29,
								"contract": "contracts/ERC20Detailed.sol:ERC20Detailed",
								"label": "_decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-20",
						"methods": {},
						"title": "ERC20 interface"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-20\",\"methods\":{},\"title\":\"ERC20 interface\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzz-raw://289216c82b0a5312ed8883e117d5dead4f62837b911df982a3e1a81cbb43aecf\",\"dweb:/ipfs/QmegSf8KXg7rFnEtQnu5XuTq6jYQXtge7UDCSZfhk7CkDq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Owned.sol": {
				"Owned": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Owned.sol\":87:1076  contract Owned {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Owned.sol\":170:351  constructor(address _owner) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Owned.sol\":170:351  constructor(address _owner) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/Owned.sol\":170:351  constructor(address _owner) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/Owned.sol\":241:242  0 */\n  0x00\n    /* \"contracts/Owned.sol\":223:243  _owner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Owned.sol\":223:229  _owner */\n  dup2\n    /* \"contracts/Owned.sol\":223:243  _owner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Owned.sol\":215:273  require(_owner != address(0), \"Owner address cannot be 0\") */\n  tag_5\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x19\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x4f776e657220616464726573732063616e6e6f74206265203000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_5:\n    /* \"contracts/Owned.sol\":291:297  _owner */\n  dup1\n    /* \"contracts/Owned.sol\":283:288  owner */\n  0x00\n  dup1\n    /* \"contracts/Owned.sol\":283:297  owner = _owner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Owned.sol\":312:344  OwnerChanged(address(0), _owner) */\n  0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n    /* \"contracts/Owned.sol\":333:334  0 */\n  0x00\n    /* \"contracts/Owned.sol\":337:343  _owner */\n  dup3\n    /* \"contracts/Owned.sol\":312:344  OwnerChanged(address(0), _owner) */\n  mload(0x40)\n  dup1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/Owned.sol\":170:351  constructor(address _owner) public {... */\n  pop\n    /* \"contracts/Owned.sol\":87:1076  contract Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Owned.sol\":87:1076  contract Owned {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/Owned.sol\":87:1076  contract Owned {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1627540c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x53a47bb7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Owned.sol\":357:495  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"contracts/Owned.sol\":357:495  function nominateNewOwner(address _owner) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Owned.sol\":134:163  address public nominatedOwner */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":501:767  function acceptOwnership() external {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Owned.sol\":108:128  address public owner */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":357:495  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_9:\n        /* \"contracts/Owned.sol\":802:814  _onlyOwner() */\n      tag_17\n        /* \"contracts/Owned.sol\":802:812  _onlyOwner */\n      tag_18\n        /* \"contracts/Owned.sol\":802:814  _onlyOwner() */\n      jump\t// in\n    tag_17:\n        /* \"contracts/Owned.sol\":445:451  _owner */\n      dup1\n        /* \"contracts/Owned.sol\":428:442  nominatedOwner */\n      0x01\n      0x00\n        /* \"contracts/Owned.sol\":428:451  nominatedOwner = _owner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owned.sol\":466:488  OwnerNominated(_owner) */\n      0x906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22\n        /* \"contracts/Owned.sol\":481:487  _owner */\n      dup2\n        /* \"contracts/Owned.sol\":466:488  OwnerNominated(_owner) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":357:495  function nominateNewOwner(address _owner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Owned.sol\":134:163  address public nominatedOwner */\n    tag_11:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Owned.sol\":501:767  function acceptOwnership() external {... */\n    tag_13:\n        /* \"contracts/Owned.sol\":569:583  nominatedOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":555:583  msg.sender == nominatedOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":555:565  msg.sender */\n      caller\n        /* \"contracts/Owned.sol\":555:583  msg.sender == nominatedOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Owned.sol\":547:641  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x35\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b\n      0x35\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"contracts/Owned.sol\":656:691  OwnerChanged(owner, nominatedOwner) */\n      0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n        /* \"contracts/Owned.sol\":669:674  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":676:690  nominatedOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":656:691  OwnerChanged(owner, nominatedOwner) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":709:723  nominatedOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":701:706  owner */\n      0x00\n      dup1\n        /* \"contracts/Owned.sol\":701:723  owner = nominatedOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owned.sol\":758:759  0 */\n      0x00\n        /* \"contracts/Owned.sol\":733:747  nominatedOwner */\n      0x01\n      0x00\n        /* \"contracts/Owned.sol\":733:760  nominatedOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owned.sol\":501:767  function acceptOwnership() external {... */\n      jump\t// out\n        /* \"contracts/Owned.sol\":108:128  address public owner */\n    tag_15:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Owned.sol\":838:969  function _onlyOwner() private view {... */\n    tag_18:\n        /* \"contracts/Owned.sol\":905:910  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":891:910  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":891:901  msg.sender */\n      caller\n        /* \"contracts/Owned.sol\":891:910  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Owned.sol\":883:962  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"contracts/Owned.sol\":838:969  function _onlyOwner() private view {... */\n      jump\t// out\n    stop\n    data_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b 596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970\n    data_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a 4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e\n\n    auxdata: 0xa265627a7a72315820f920a52ee380856311d3897d6c11ddd7f33b0c9ee59be5c3da2ad64aab8526ca64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516107623803806107628339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4f776e657220616464726573732063616e6e6f7420626520300000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c600082604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150610593806101cf6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631627540c1461005157806353a47bb71461009557806379ba5097146100df5780638da5cb5b146100e9575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610133565b005b61009d6101e2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100e7610208565b005b6100f161042e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013b610453565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2281604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806104fb6035913960400191505060405180910390fd5b7fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610530602f913960400191505060405180910390fd5b56fe596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e6572736869704f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6ea265627a7a72315820f920a52ee380856311d3897d6c11ddd7f33b0c9ee59be5c3da2ad64aab8526ca64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x762 CODESIZE SUB DUP1 PUSH2 0x762 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E657220616464726573732063616E6E6F74206265203000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x593 DUP1 PUSH2 0x1CF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1627540C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x133 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x208 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF1 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x453 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4FB PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x530 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP INVALID MSIZE PUSH16 0x75206D757374206265206E6F6D696E61 PUSH21 0x6564206265666F726520796F752063616E20616363 PUSH6 0x7074206F776E PUSH6 0x72736869704F PUSH15 0x6C792074686520636F6E7472616374 KECCAK256 PUSH16 0x776E6572206D617920706572666F726D KECCAK256 PUSH21 0x68697320616374696F6EA265627A7A72315820F920 0xA5 0x2E 0xE3 DUP1 DUP6 PUSH4 0x11D3897D PUSH13 0x11DDD7F33B0C9EE59BE5C3DA2A 0xD6 0x4A 0xAB DUP6 0x26 0xCA PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "87:989:3:-;;;170:181;8:9:-1;5:2;;;30:1;27;20:12;5:2;170:181:3;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;170:181:3;;;;;;;;;;;;;;;;241:1;223:20;;:6;:20;;;;215:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;291:6;283:5;;:14;;;;;;;;;;;;;;;;;;312:32;333:1;337:6;312:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;170:181;87:989;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631627540c1461005157806353a47bb71461009557806379ba5097146100df5780638da5cb5b146100e9575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610133565b005b61009d6101e2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100e7610208565b005b6100f161042e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013b610453565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2281604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806104fb6035913960400191505060405180910390fd5b7fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610530602f913960400191505060405180910390fd5b56fe596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e6572736869704f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6ea265627a7a72315820f920a52ee380856311d3897d6c11ddd7f33b0c9ee59be5c3da2ad64aab8526ca64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1627540C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x133 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x208 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF1 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x453 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4FB PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x530 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP INVALID MSIZE PUSH16 0x75206D757374206265206E6F6D696E61 PUSH21 0x6564206265666F726520796F752063616E20616363 PUSH6 0x7074206F776E PUSH6 0x72736869704F PUSH15 0x6C792074686520636F6E7472616374 KECCAK256 PUSH16 0x776E6572206D617920706572666F726D KECCAK256 PUSH21 0x68697320616374696F6EA265627A7A72315820F920 0xA5 0x2E 0xE3 DUP1 DUP6 PUSH4 0x11D3897D PUSH13 0x11DDD7F33B0C9EE59BE5C3DA2A 0xD6 0x4A 0xAB DUP6 0x26 0xCA PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "87:989:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;87:989:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;357:138;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;357:138:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;134:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;501:266;;;:::i;:::-;;108:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;357:138;802:12;:10;:12::i;:::-;445:6;428:14;;:23;;;;;;;;;;;;;;;;;;466:22;481:6;466:22;;;;;;;;;;;;;;;;;;;;;;357:138;:::o;134:29::-;;;;;;;;;;;;;:::o;501:266::-;569:14;;;;;;;;;;;555:28;;:10;:28;;;547:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;656:35;669:5;;;;;;;;;;;676:14;;;;;;;;;;;656:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:14;;;;;;;;;;;701:5;;:22;;;;;;;;;;;;;;;;;;758:1;733:14;;:27;;;;;;;;;;;;;;;;;;501:266::o;108:20::-;;;;;;;;;;;;;:::o;838:131::-;905:5;;;;;;;;;;;891:19;;:10;:19;;;883:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:131::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "285400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "infinite",
								"nominateNewOwner(address)": "infinite",
								"nominatedOwner()": "1053",
								"owner()": "1097"
							},
							"internal": {
								"_onlyOwner()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 87,
									"end": 1076,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 87,
									"end": 1076,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 87,
									"end": 1076,
									"name": "MSTORE"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "POP"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "MLOAD"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "PUSHSIZE"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "CODESIZE"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "SUB"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "DUP1"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "PUSHSIZE"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "DUP4"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "CODECOPY"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "DUP2"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "DUP2"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "ADD"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "DUP2"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "ADD"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "SWAP1"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "DUP1"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "DUP1"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "MLOAD"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "SWAP1"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "ADD"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "SWAP1"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "SWAP3"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "SWAP2"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "SWAP1"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "POP"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "POP"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "POP"
								},
								{
									"begin": 241,
									"end": 242,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 223,
									"end": 243,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 223,
									"end": 243,
									"name": "AND"
								},
								{
									"begin": 223,
									"end": 229,
									"name": "DUP2"
								},
								{
									"begin": 223,
									"end": 243,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 223,
									"end": 243,
									"name": "AND"
								},
								{
									"begin": 223,
									"end": 243,
									"name": "EQ"
								},
								{
									"begin": 223,
									"end": 243,
									"name": "ISZERO"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "JUMPI"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "MLOAD"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP2"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "MSTORE"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "ADD"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP1"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP1"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "ADD"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP3"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP2"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "SUB"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP3"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "MSTORE"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "19"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP2"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "MSTORE"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "ADD"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP1"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "4F776E657220616464726573732063616E6E6F74206265203000000000000000"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP2"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "MSTORE"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "POP"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "ADD"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "SWAP2"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "POP"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "POP"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "MLOAD"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP1"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "SWAP2"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "SUB"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "SWAP1"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "REVERT"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "JUMPDEST"
								},
								{
									"begin": 291,
									"end": 297,
									"name": "DUP1"
								},
								{
									"begin": 283,
									"end": 288,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 288,
									"name": "DUP1"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "EXP"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "DUP2"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "SLOAD"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "DUP2"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "MUL"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "NOT"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "AND"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "SWAP1"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "DUP4"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "AND"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "MUL"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "OR"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "SWAP1"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "SSTORE"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "POP"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
								},
								{
									"begin": 333,
									"end": 334,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 337,
									"end": 343,
									"name": "DUP3"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "MLOAD"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "DUP1"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "DUP4"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "AND"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "AND"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "DUP2"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "MSTORE"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "ADD"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "DUP3"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "AND"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "AND"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "DUP2"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "MSTORE"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "ADD"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "SWAP3"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "POP"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "POP"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "POP"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "MLOAD"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "DUP1"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "SWAP2"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "SUB"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "SWAP1"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "LOG1"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "POP"
								},
								{
									"begin": 87,
									"end": 1076,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 87,
									"end": 1076,
									"name": "DUP1"
								},
								{
									"begin": 87,
									"end": 1076,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 87,
									"end": 1076,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 87,
									"end": 1076,
									"name": "CODECOPY"
								},
								{
									"begin": 87,
									"end": 1076,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 87,
									"end": 1076,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f920a52ee380856311d3897d6c11ddd7f33b0c9ee59be5c3da2ad64aab8526ca64736f6c63430005110032",
									".code": [
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "MSTORE"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "POP"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "LT"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "JUMPI"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "SHR"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "DUP1"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH",
											"value": "1627540C"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "EQ"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "JUMPI"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "DUP1"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH",
											"value": "53A47BB7"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "EQ"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "JUMPI"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "DUP1"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH",
											"value": "79BA5097"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "EQ"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "JUMPI"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "DUP1"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "EQ"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "JUMPI"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "JUMPDEST"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "DUP1"
										},
										{
											"begin": 87,
											"end": 1076,
											"name": "REVERT"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "AND"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SWAP3"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SWAP2"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "STOP"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "JUMPDEST"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "JUMPDEST"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "MLOAD"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "DUP1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "DUP3"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "AND"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "AND"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "DUP2"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "MSTORE"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "ADD"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SWAP2"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "MLOAD"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "DUP1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SWAP2"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SUB"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SWAP1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "RETURN"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "JUMPDEST"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "JUMPDEST"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "STOP"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "JUMPDEST"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "JUMPDEST"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "MLOAD"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DUP3"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "AND"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "AND"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DUP2"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "MSTORE"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "ADD"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SWAP2"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "POP"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "POP"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "MLOAD"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SWAP2"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SUB"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "RETURN"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 445,
											"end": 451,
											"name": "DUP1"
										},
										{
											"begin": 428,
											"end": 442,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 428,
											"end": 442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "EXP"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "DUP2"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "SLOAD"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "DUP2"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "MUL"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "NOT"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "AND"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "SWAP1"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "DUP4"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "AND"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "MUL"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "OR"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "SWAP1"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "SSTORE"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH",
											"value": "906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22"
										},
										{
											"begin": 481,
											"end": 487,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "MLOAD"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "DUP3"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "AND"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "AND"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "MSTORE"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "ADD"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "SWAP2"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "MLOAD"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "SWAP2"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "SUB"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "SWAP1"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "LOG1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "JUMPDEST"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SWAP1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SLOAD"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SWAP1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "EXP"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SWAP1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "DIV"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "AND"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "DUP2"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "JUMPDEST"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "SLOAD"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "EXP"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "DIV"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 555,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 555,
											"end": 565,
											"name": "CALLER"
										},
										{
											"begin": 555,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 555,
											"end": 583,
											"name": "EQ"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "JUMPI"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "MLOAD"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP2"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "MSTORE"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP3"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP2"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "SUB"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP3"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "MSTORE"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP2"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "MSTORE"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH data",
											"value": "1149E36CD24095BEBC9341EF03810E0E2A00039190624DF6F2D7934141E2233B"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "SWAP2"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "CODECOPY"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "SWAP2"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "POP"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "POP"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "MLOAD"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "SWAP2"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "SUB"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "SWAP1"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "REVERT"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "JUMPDEST"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "DUP1"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "SLOAD"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "EXP"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "DIV"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "AND"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SLOAD"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "EXP"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DIV"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "AND"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "MLOAD"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "DUP1"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "DUP4"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "AND"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "AND"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "DUP2"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "MSTORE"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "ADD"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "DUP3"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "AND"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "AND"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "DUP2"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "MSTORE"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "ADD"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "SWAP3"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "POP"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "POP"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "POP"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "MLOAD"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "DUP1"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "SWAP2"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "SUB"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "SWAP1"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "LOG1"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SWAP1"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SLOAD"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SWAP1"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "EXP"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SWAP1"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "DIV"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "AND"
										},
										{
											"begin": 701,
											"end": 706,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 701,
											"end": 706,
											"name": "DUP1"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "EXP"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "DUP2"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "SLOAD"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "DUP2"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "MUL"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "NOT"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "AND"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "SWAP1"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "DUP4"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "AND"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "MUL"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "OR"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "SWAP1"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "SSTORE"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "POP"
										},
										{
											"begin": 758,
											"end": 759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 733,
											"end": 747,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 733,
											"end": 747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "EXP"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "DUP2"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "SLOAD"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "DUP2"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "MUL"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "NOT"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "AND"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "DUP4"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "AND"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "MUL"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "OR"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "SSTORE"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "POP"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "JUMPDEST"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SLOAD"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "EXP"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DIV"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "AND"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DUP2"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 838,
											"end": 969,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 838,
											"end": 969,
											"name": "JUMPDEST"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "DUP1"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "SLOAD"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "EXP"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "DIV"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "AND"
										},
										{
											"begin": 891,
											"end": 910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 891,
											"end": 910,
											"name": "AND"
										},
										{
											"begin": 891,
											"end": 901,
											"name": "CALLER"
										},
										{
											"begin": 891,
											"end": 910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 891,
											"end": 910,
											"name": "AND"
										},
										{
											"begin": 891,
											"end": 910,
											"name": "EQ"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "JUMPI"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "MLOAD"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP2"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "MSTORE"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "ADD"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "ADD"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP3"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP2"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "SUB"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP3"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "MSTORE"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP2"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "MSTORE"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "ADD"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH data",
											"value": "873D2051B76E0142B287297AFDFC273BF1AB5C24EE229ED4EF117F1FF0679A4A"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "SWAP2"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "CODECOPY"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "ADD"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "SWAP2"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "POP"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "POP"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "MLOAD"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "SWAP2"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "SUB"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "SWAP1"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "REVERT"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "JUMPDEST"
										},
										{
											"begin": 838,
											"end": 969,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1149E36CD24095BEBC9341EF03810E0E2A00039190624DF6F2D7934141E2233B": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970",
										"873D2051B76E0142B287297AFDFC273BF1AB5C24EE229ED4EF117F1FF0679A4A": "4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Owned.sol\":\"Owned\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Owned.sol\":{\"keccak256\":\"0xc23b2f6e6f1ccfccd1b01fc93606d4ba7f64195df66205c98a2b3ec720460a09\",\"urls\":[\"bzz-raw://e9f9ad441799a1d3ed4ab6da804d939950c4ab16b677ca21cebdbe39b6a6ecaa\",\"dweb:/ipfs/QmYqjgBJvQteA4a9KYL7V23JsPxVVHfLYcTx862TzEmwoa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 149,
								"contract": "contracts/Owned.sol:Owned",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 151,
								"contract": "contracts/Owned.sol:Owned",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isPaused",
									"type": "bool"
								}
							],
							"name": "PauseChanged",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastPauseTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "bool",
									"name": "_paused",
									"type": "bool"
								}
							],
							"name": "setPaused",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"setPaused(bool)": {
								"details": "Only the contract owner may call this."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"lastPauseTime()": "91b4ded9",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"setPaused(bool)": "16c38b3c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseChanged\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastPauseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"setPaused(bool)\":{\"details\":\"Only the contract owner may call this.\"}}},\"userdoc\":{\"methods\":{\"setPaused(bool)\":{\"notice\":\"Change the paused state of the contract\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Owned.sol\":{\"keccak256\":\"0xc23b2f6e6f1ccfccd1b01fc93606d4ba7f64195df66205c98a2b3ec720460a09\",\"urls\":[\"bzz-raw://e9f9ad441799a1d3ed4ab6da804d939950c4ab16b677ca21cebdbe39b6a6ecaa\",\"dweb:/ipfs/QmYqjgBJvQteA4a9KYL7V23JsPxVVHfLYcTx862TzEmwoa\"]},\"contracts/Pausable.sol\":{\"keccak256\":\"0x6c65fd449670e73de471c36efc7f74738703df6ac1f6531982ed14f422d5d437\",\"urls\":[\"bzz-raw://f400d1ab41250418a1f860a1f0a7ba9f4c74af95b9f07e8fe58ca7b8c9101f0f\",\"dweb:/ipfs/QmRePpW4wisANQnZVGtTPUJdGBTe1DG5LfF7r1sbKSC1Rv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 149,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 151,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 257,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "lastPauseTime",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 259,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "paused",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"setPaused(bool)": {
								"notice": "Change the paused state of the contract"
							}
						}
					}
				}
			},
			"contracts/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"author": "Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>",
						"details": "If you mark a function `nonReentrant`, you should also mark it `external`.",
						"methods": {},
						"title": "Helps contracts guard against reentrancy attacks."
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"author\":\"Remco Bloemen <remco@2\\u03c0.com>, Eenae <alexey@mixbytes.io>\",\"details\":\"If you mark a function `nonReentrant`, you should also mark it `external`.\",\"methods\":{},\"title\":\"Helps contracts guard against reentrancy attacks.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125\",\"urls\":[\"bzz-raw://3a0d0d9fda879d3dbf20065ce1cb24188d1c66955b88b5b796584f9afc1c7600\",\"dweb:/ipfs/QmNTxvr3o1CNDvwrfD996h45RQMmJq9bmw2Adp6wGQNeXd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 320,
								"contract": "contracts/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_guardCounter",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/RewardsDistributionRecipient.sol": {
				"RewardsDistributionRecipient": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsDistribution",
									"type": "address"
								}
							],
							"name": "setRewardsDistribution",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"owner()": "8da5cb5b",
							"rewardsDistribution()": "3fc6df6e",
							"setRewardsDistribution(address)": "19762143"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsDistribution\",\"type\":\"address\"}],\"name\":\"setRewardsDistribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/RewardsDistributionRecipient.sol\":\"RewardsDistributionRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Owned.sol\":{\"keccak256\":\"0xc23b2f6e6f1ccfccd1b01fc93606d4ba7f64195df66205c98a2b3ec720460a09\",\"urls\":[\"bzz-raw://e9f9ad441799a1d3ed4ab6da804d939950c4ab16b677ca21cebdbe39b6a6ecaa\",\"dweb:/ipfs/QmYqjgBJvQteA4a9KYL7V23JsPxVVHfLYcTx862TzEmwoa\"]},\"contracts/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0x056a8d5170982ade44656c8a2b300f9a7818dd8ff8a59ea9bebbb2436067d6b1\",\"urls\":[\"bzz-raw://561272b2834502bdc5b290909e0d1589f202a478c10b48101c282e02082d3206\",\"dweb:/ipfs/QmUZZwrJmy4DobRSCpbCwCH8nbCcBBGaBXcy9HD5yGd91t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 149,
								"contract": "contracts/RewardsDistributionRecipient.sol:RewardsDistributionRecipient",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 151,
								"contract": "contracts/RewardsDistributionRecipient.sol:RewardsDistributionRecipient",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 354,
								"contract": "contracts/RewardsDistributionRecipient.sol:RewardsDistributionRecipient",
								"label": "rewardsDistribution",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"methods": {},
						"title": "SafeERC20"
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeERC20.sol\":555:3341  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeERC20.sol\":555:3341  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820e69b7ece5c4690bf4165a19b03adb730382d177a90320e1d40da14b2e36228b664736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e69b7ece5c4690bf4165a19b03adb730382d177a90320e1d40da14b2e36228b664736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE6 SWAP12 PUSH31 0xCE5C4690BF4165A19B03ADB730382D177A90320E1D40DA14B2E36228B66473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "555:2786:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e69b7ece5c4690bf4165a19b03adb730382d177a90320e1d40da14b2e36228b664736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE6 SWAP12 PUSH31 0xCE5C4690BF4165A19B03ADB730382D177A90320E1D40DA14B2E36228B66473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "555:2786:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 555,
									"end": 3341,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 3341,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820e69b7ece5c4690bf4165a19b03adb730382d177a90320e1d40da14b2e36228b664736f6c63430005110032",
									".code": [
										{
											"begin": 555,
											"end": 3341,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 555,
											"end": 3341,
											"name": "ADDRESS"
										},
										{
											"begin": 555,
											"end": 3341,
											"name": "EQ"
										},
										{
											"begin": 555,
											"end": 3341,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 555,
											"end": 3341,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 555,
											"end": 3341,
											"name": "MSTORE"
										},
										{
											"begin": 555,
											"end": 3341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 555,
											"end": 3341,
											"name": "DUP1"
										},
										{
											"begin": 555,
											"end": 3341,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzz-raw://95b3b4b5c8008b6d8a862a797bf2550e8017cbff25d0e36be86cff48b1a9bbf2\",\"dweb:/ipfs/QmZWK9sD6V3jwSarEyheM8PjHFVcuA11W65FgAZ2fsu9sq\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzz-raw://289216c82b0a5312ed8883e117d5dead4f62837b911df982a3e1a81cbb43aecf\",\"dweb:/ipfs/QmegSf8KXg7rFnEtQnu5XuTq6jYQXtge7UDCSZfhk7CkDq\"]},\"contracts/SafeERC20.sol\":{\"keccak256\":\"0xdd310d913b96bb29437abbb6e01d5f2f0c1a20dc79b65504990dab6f20848b7e\",\"urls\":[\"bzz-raw://c68f8e526799cd3908991608f36129721345350425e23a009845f915e30bc88f\",\"dweb:/ipfs/QmNT3Bdv8EASgSGgYUmz3QURe8YGU4Qch57XBKaQZLDGw5\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0xbd3766507e47157b50f655d7002fde93b02ddd79a1582e0cd289bfcab255b70e\",\"urls\":[\"bzz-raw://8ab0be9d810fb055a554c4cc16ca40eee565bd18fdb3a92d7b323a83037cc3c0\",\"dweb:/ipfs/QmPHHb6KHZRuKBvbAGRjEobfMngobNkMYGEzMzqNBwGNhZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":589:5167  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":589:5167  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158204edf5e4fedc4d323322c33d7c60d27c918b4f7586647371a5b8f85964b4b5b1764736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158204edf5e4fedc4d323322c33d7c60d27c918b4f7586647371a5b8f85964b4b5b1764736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x4E 0xDF 0x5E 0x4F 0xED 0xC4 0xD3 0x23 ORIGIN 0x2C CALLER 0xD7 0xC6 0xD 0x27 0xC9 XOR 0xB4 0xF7 PC PUSH7 0x47371A5B8F8596 0x4B 0x4B JUMPDEST OR PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:4578:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158204edf5e4fedc4d323322c33d7c60d27c918b4f7586647371a5b8f85964b4b5b1764736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x4E 0xDF 0x5E 0x4F 0xED 0xC4 0xD3 0x23 ORIGIN 0x2C CALLER 0xD7 0xC6 0xD 0x27 0xC9 XOR 0xB4 0xF7 PC PUSH7 0x47371A5B8F8596 0x4B 0x4B JUMPDEST OR PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:4578:8:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 5167,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5167,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158204edf5e4fedc4d323322c33d7c60d27c918b4f7586647371a5b8f85964b4b5b1764736f6c63430005110032",
									".code": [
										{
											"begin": 589,
											"end": 5167,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 5167,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 5167,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 5167,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 5167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 5167,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 5167,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 5167,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 5167,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0xbd3766507e47157b50f655d7002fde93b02ddd79a1582e0cd289bfcab255b70e\",\"urls\":[\"bzz-raw://8ab0be9d810fb055a554c4cc16ca40eee565bd18fdb3a92d7b323a83037cc3c0\",\"dweb:/ipfs/QmPHHb6KHZRuKBvbAGRjEobfMngobNkMYGEzMzqNBwGNhZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/StakingReward.sol": {
				"StakingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsDistribution",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isPaused",
									"type": "bool"
								}
							],
							"name": "PauseChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Recovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDuration",
									"type": "uint256"
								}
							],
							"name": "RewardsDurationUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastPauseTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "recoverERC20",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "bool",
									"name": "_paused",
									"type": "bool"
								}
							],
							"name": "setPaused",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsDistribution",
									"type": "address"
								}
							],
							"name": "setRewardsDistribution",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardsDuration",
									"type": "uint256"
								}
							],
							"name": "setRewardsDuration",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"setPaused(bool)": {
								"details": "Only the contract owner may call this."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingReward.sol\":352:6431  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard, Pausable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StakingReward.sol\":674:675  0 */\n  0x00\n    /* \"contracts/StakingReward.sol\":644:675  uint256 public periodFinish = 0 */\n  0x07\n  sstore\n    /* \"contracts/StakingReward.sol\":710:711  0 */\n  0x00\n    /* \"contracts/StakingReward.sol\":682:711  uint256 public rewardRate = 0 */\n  0x08\n  sstore\n    /* \"contracts/StakingReward.sol\":751:757  7 days */\n  0x093a80\n    /* \"contracts/StakingReward.sol\":718:757  uint256 public rewardsDuration = 7 days */\n  0x09\n  sstore\n    /* \"contracts/StakingReward.sol\":1095:1418  constructor(\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/StakingReward.sol\":1095:1418  constructor(\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:16   */\n  0x80\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:17   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/StakingReward.sol\":1095:1418  constructor(\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/StakingReward.sol\":1255:1261  _owner */\n  dup4\n    /* \"contracts/Owned.sol\":241:242  0 */\n  0x00\n    /* \"contracts/Owned.sol\":223:243  _owner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Owned.sol\":223:229  _owner */\n  dup2\n    /* \"contracts/Owned.sol\":223:243  _owner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Owned.sol\":215:273  require(_owner != address(0), \"Owner address cannot be 0\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x19\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x4f776e657220616464726573732063616e6e6f74206265203000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"contracts/Owned.sol\":291:297  _owner */\n  dup1\n    /* \"contracts/Owned.sol\":283:288  owner */\n  0x00\n  dup1\n    /* \"contracts/Owned.sol\":283:297  owner = _owner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Owned.sol\":312:344  OwnerChanged(address(0), _owner) */\n  0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n    /* \"contracts/Owned.sol\":333:334  0 */\n  0x00\n    /* \"contracts/Owned.sol\":337:343  _owner */\n  dup3\n    /* \"contracts/Owned.sol\":312:344  OwnerChanged(address(0), _owner) */\n  mload(0x40)\n  dup1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/Owned.sol\":170:351  constructor(address _owner) public {... */\n  pop\n    /* \"contracts/ReentrancyGuard.sol\":576:577  1 */\n  0x01\n    /* \"contracts/ReentrancyGuard.sol\":560:573  _guardCounter */\n  0x03\n    /* \"contracts/ReentrancyGuard.sol\":560:577  _guardCounter = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Pausable.sol\":354:355  0 */\n  0x00\n    /* \"contracts/Pausable.sol\":337:356  owner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Pausable.sol\":337:342  owner */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Pausable.sol\":337:356  owner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Pausable.sol\":329:378  require(owner != address(0), \"Owner must be set\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x4f776e6572206d75737420626520736574000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/StakingReward.sol\":1296:1309  _rewardsToken */\n  dup2\n    /* \"contracts/StakingReward.sol\":1274:1286  rewardsToken */\n  0x05\n  0x01\n    /* \"contracts/StakingReward.sol\":1274:1310  rewardsToken = IERC20(_rewardsToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingReward.sol\":1343:1356  _stakingToken */\n  dup1\n    /* \"contracts/StakingReward.sol\":1321:1333  stakingToken */\n  0x06\n  0x00\n    /* \"contracts/StakingReward.sol\":1321:1357  stakingToken = IERC20(_stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingReward.sol\":1390:1410  _rewardsDistribution */\n  dup3\n    /* \"contracts/StakingReward.sol\":1368:1387  rewardsDistribution */\n  0x02\n  0x00\n    /* \"contracts/StakingReward.sol\":1368:1410  rewardsDistribution = _rewardsDistribution */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingReward.sol\":1095:1418  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/StakingReward.sol\":352:6431  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard, Pausable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingReward.sol\":352:6431  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard, Pausable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/StakingReward.sol\":352:6431  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard, Pausable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x72f702f3\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd1af0c7d\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xebe2b12b\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xa694fc3a\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xcc1a378f\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x8980f11f\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x8980f11f\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x91b4ded9\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x72f702f3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3fc6df6e\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x3fc6df6e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x53a47bb7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x386a9525\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3c6b16ab\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x16c38b3c\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x16c38b3c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x19762143\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1c1f78eb\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1627540c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StakingReward.sol\":2189:2387  function earned(address account) public view returns (uint256) {\r... */\n    tag_3:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/StakingReward.sol\":2189:2387  function earned(address account) public view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":908:950  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"contracts/StakingReward.sol\":908:950  mapping(address => uint256) public rewards */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":357:495  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_5:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n        /* \"contracts/Owned.sol\":357:495  function nominateNewOwner(address _owner) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/Pausable.sol\":594:1066  function setPaused(bool _paused) external onlyOwner {... */\n    tag_6:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contracts/Pausable.sol\":594:1066  function setPaused(bool _paused) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/StakingReward.sol\":1467:1560  function totalSupply() external view returns (uint256) {\r... */\n    tag_7:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/RewardsDistributionRecipient.sol\":458:598  function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {... */\n    tag_8:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_56:\n        /* \"contracts/RewardsDistributionRecipient.sol\":458:598  function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/StakingReward.sol\":2395:2516  function getRewardForDuration() external view returns (uint256) {\r... */\n    tag_9:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":2965:3322  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_61:\n        /* \"contracts/StakingReward.sol\":2965:3322  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/StakingReward.sol\":718:757  uint256 public rewardsDuration = 7 days */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":3806:4889  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"contracts/StakingReward.sol\":3806:4889  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/StakingReward.sol\":3330:3637  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/RewardsDistributionRecipient.sol\":201:235  address public rewardsDistribution */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":134:163  address public nominatedOwner */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":192:210  bool public paused */\n    tag_16:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":1568:1680  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n        /* \"contracts/StakingReward.sol\":1568:1680  function balanceOf(address account) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":611:637  IERC20 public stakingToken */\n    tag_18:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":501:767  function acceptOwnership() external {... */\n    tag_19:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/StakingReward.sol\":682:711  uint256 public rewardRate = 0 */\n    tag_20:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":1688:1843  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n    tag_21:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":5004:5306  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\r... */\n    tag_22:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_88:\n        /* \"contracts/StakingReward.sol\":5004:5306  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/StakingReward.sol\":844:901  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_23:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_91:\n        /* \"contracts/StakingReward.sol\":844:901  mapping(address => uint256) public userRewardPerTokenPaid */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":108:128  address public owner */\n    tag_24:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":161:186  uint public lastPauseTime */\n    tag_25:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":2578:2957  function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {\r... */\n    tag_26:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_98\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_98:\n        /* \"contracts/StakingReward.sol\":2578:2957  function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"contracts/StakingReward.sol\":764:793  uint256 public lastUpdateTime */\n    tag_27:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":5314:5674  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\r... */\n    tag_28:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_103:\n        /* \"contracts/StakingReward.sol\":5314:5674  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/StakingReward.sol\":1851:2181  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_29:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":578:604  IERC20 public rewardsToken */\n    tag_30:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":800:835  uint256 public rewardPerTokenStored */\n    tag_31:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":3645:3742  function exit() external {\r... */\n    tag_32:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/StakingReward.sol\":644:675  uint256 public periodFinish = 0 */\n    tag_33:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingReward.sol\":2189:2387  function earned(address account) public view returns (uint256) {\r... */\n    tag_43:\n        /* \"contracts/StakingReward.sol\":2243:2250  uint256 */\n      0x00\n        /* \"contracts/StakingReward.sol\":2270:2379  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_116\n        /* \"contracts/StakingReward.sol\":2362:2369  rewards */\n      0x0d\n        /* \"contracts/StakingReward.sol\":2362:2378  rewards[account] */\n      0x00\n        /* \"contracts/StakingReward.sol\":2370:2377  account */\n      dup5\n        /* \"contracts/StakingReward.sol\":2362:2378  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingReward.sol\":2270:2357  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_117\n        /* \"contracts/StakingReward.sol\":2352:2356  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StakingReward.sol\":2270:2347  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      tag_118\n        /* \"contracts/StakingReward.sol\":2293:2346  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      tag_119\n        /* \"contracts/StakingReward.sol\":2314:2336  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/StakingReward.sol\":2314:2345  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/StakingReward.sol\":2337:2344  account */\n      dup10\n        /* \"contracts/StakingReward.sol\":2314:2345  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingReward.sol\":2293:2309  rewardPerToken() */\n      tag_120\n        /* \"contracts/StakingReward.sol\":2293:2307  rewardPerToken */\n      tag_106\n        /* \"contracts/StakingReward.sol\":2293:2309  rewardPerToken() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/StakingReward.sol\":2293:2313  rewardPerToken().sub */\n      tag_121\n      swap1\n        /* \"contracts/StakingReward.sol\":2293:2346  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"contracts/StakingReward.sol\":2270:2279  _balances */\n      0x0f\n        /* \"contracts/StakingReward.sol\":2270:2288  _balances[account] */\n      0x00\n        /* \"contracts/StakingReward.sol\":2280:2287  account */\n      dup10\n        /* \"contracts/StakingReward.sol\":2270:2288  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingReward.sol\":2270:2292  _balances[account].mul */\n      tag_122\n      swap1\n        /* \"contracts/StakingReward.sol\":2270:2347  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/StakingReward.sol\":2270:2351  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div */\n      tag_123\n      swap1\n        /* \"contracts/StakingReward.sol\":2270:2357  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"contracts/StakingReward.sol\":2270:2361  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      tag_124\n      swap1\n        /* \"contracts/StakingReward.sol\":2270:2379  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"contracts/StakingReward.sol\":2263:2379  return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap1\n      pop\n        /* \"contracts/StakingReward.sol\":2189:2387  function earned(address account) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":908:950  mapping(address => uint256) public rewards */\n    tag_46:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Owned.sol\":357:495  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_49:\n        /* \"contracts/Owned.sol\":802:814  _onlyOwner() */\n      tag_126\n        /* \"contracts/Owned.sol\":802:812  _onlyOwner */\n      tag_127\n        /* \"contracts/Owned.sol\":802:814  _onlyOwner() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/Owned.sol\":445:451  _owner */\n      dup1\n        /* \"contracts/Owned.sol\":428:442  nominatedOwner */\n      0x01\n      0x00\n        /* \"contracts/Owned.sol\":428:451  nominatedOwner = _owner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owned.sol\":466:488  OwnerNominated(_owner) */\n      0x906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22\n        /* \"contracts/Owned.sol\":481:487  _owner */\n      dup2\n        /* \"contracts/Owned.sol\":466:488  OwnerNominated(_owner) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":357:495  function nominateNewOwner(address _owner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pausable.sol\":594:1066  function setPaused(bool _paused) external onlyOwner {... */\n    tag_52:\n        /* \"contracts/Owned.sol\":802:814  _onlyOwner() */\n      tag_130\n        /* \"contracts/Owned.sol\":802:812  _onlyOwner */\n      tag_127\n        /* \"contracts/Owned.sol\":802:814  _onlyOwner() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/Pausable.sol\":745:751  paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":734:751  _paused == paused */\n      iszero\n      iszero\n        /* \"contracts/Pausable.sol\":734:741  _paused */\n      dup2\n        /* \"contracts/Pausable.sol\":734:751  _paused == paused */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Pausable.sol\":730:784  if (_paused == paused) {... */\n      iszero\n      tag_132\n      jumpi\n        /* \"contracts/Pausable.sol\":767:774  return; */\n      jump(tag_131)\n        /* \"contracts/Pausable.sol\":730:784  if (_paused == paused) {... */\n    tag_132:\n        /* \"contracts/Pausable.sol\":836:843  _paused */\n      dup1\n        /* \"contracts/Pausable.sol\":827:833  paused */\n      0x05\n      0x00\n        /* \"contracts/Pausable.sol\":827:843  paused = _paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":909:915  paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":905:961  if (paused) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/Pausable.sol\":947:950  now */\n      timestamp\n        /* \"contracts/Pausable.sol\":931:944  lastPauseTime */\n      0x04\n        /* \"contracts/Pausable.sol\":931:950  lastPauseTime = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":905:961  if (paused) {... */\n    tag_133:\n        /* \"contracts/Pausable.sol\":1039:1059  PauseChanged(paused) */\n      0x8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5\n        /* \"contracts/Pausable.sol\":1052:1058  paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":1039:1059  PauseChanged(paused) */\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":824:825  _ */\n    tag_131:\n        /* \"contracts/Pausable.sol\":594:1066  function setPaused(bool _paused) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":1467:1560  function totalSupply() external view returns (uint256) {\r... */\n    tag_54:\n        /* \"contracts/StakingReward.sol\":1513:1520  uint256 */\n      0x00\n        /* \"contracts/StakingReward.sol\":1540:1552  _totalSupply */\n      sload(0x0e)\n        /* \"contracts/StakingReward.sol\":1533:1552  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/StakingReward.sol\":1467:1560  function totalSupply() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/RewardsDistributionRecipient.sol\":458:598  function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {... */\n    tag_57:\n        /* \"contracts/Owned.sol\":802:814  _onlyOwner() */\n      tag_136\n        /* \"contracts/Owned.sol\":802:812  _onlyOwner */\n      tag_127\n        /* \"contracts/Owned.sol\":802:814  _onlyOwner() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/RewardsDistributionRecipient.sol\":571:591  _rewardsDistribution */\n      dup1\n        /* \"contracts/RewardsDistributionRecipient.sol\":549:568  rewardsDistribution */\n      0x02\n      0x00\n        /* \"contracts/RewardsDistributionRecipient.sol\":549:591  rewardsDistribution = _rewardsDistribution */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/RewardsDistributionRecipient.sol\":458:598  function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":2395:2516  function getRewardForDuration() external view returns (uint256) {\r... */\n    tag_59:\n        /* \"contracts/StakingReward.sol\":2450:2457  uint256 */\n      0x00\n        /* \"contracts/StakingReward.sol\":2477:2508  rewardRate.mul(rewardsDuration) */\n      tag_139\n        /* \"contracts/StakingReward.sol\":2492:2507  rewardsDuration */\n      sload(0x09)\n        /* \"contracts/StakingReward.sol\":2477:2487  rewardRate */\n      sload(0x08)\n        /* \"contracts/StakingReward.sol\":2477:2491  rewardRate.mul */\n      tag_122\n      swap1\n        /* \"contracts/StakingReward.sol\":2477:2508  rewardRate.mul(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/StakingReward.sol\":2470:2508  return rewardRate.mul(rewardsDuration) */\n      swap1\n      pop\n        /* \"contracts/StakingReward.sol\":2395:2516  function getRewardForDuration() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":2965:3322  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n    tag_62:\n        /* \"contracts/ReentrancyGuard.sol\":1010:1011  1 */\n      0x01\n        /* \"contracts/ReentrancyGuard.sol\":993:1006  _guardCounter */\n      0x03\n      0x00\n        /* \"contracts/ReentrancyGuard.sol\":993:1011  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ReentrancyGuard.sol\":1021:1041  uint256 localCounter */\n      0x00\n        /* \"contracts/ReentrancyGuard.sol\":1044:1057  _guardCounter */\n      sload(0x03)\n        /* \"contracts/ReentrancyGuard.sol\":1021:1057  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"contracts/StakingReward.sol\":3032:3042  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":5800:5816  rewardPerToken() */\n      tag_142\n        /* \"contracts/StakingReward.sol\":5800:5814  rewardPerToken */\n      tag_106\n        /* \"contracts/StakingReward.sol\":5800:5816  rewardPerToken() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/StakingReward.sol\":5777:5797  rewardPerTokenStored */\n      0x0b\n        /* \"contracts/StakingReward.sol\":5777:5816  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5844:5870  lastTimeRewardApplicable() */\n      tag_143\n        /* \"contracts/StakingReward.sol\":5844:5868  lastTimeRewardApplicable */\n      tag_86\n        /* \"contracts/StakingReward.sol\":5844:5870  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/StakingReward.sol\":5827:5841  lastUpdateTime */\n      0x0a\n        /* \"contracts/StakingReward.sol\":5827:5870  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5904:5905  0 */\n      0x00\n        /* \"contracts/StakingReward.sol\":5885:5906  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingReward.sol\":5885:5892  account */\n      dup2\n        /* \"contracts/StakingReward.sol\":5885:5906  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingReward.sol\":5881:6038  if (account != address(0)) {\r... */\n      tag_144\n      jumpi\n        /* \"contracts/StakingReward.sol\":5942:5957  earned(account) */\n      tag_145\n        /* \"contracts/StakingReward.sol\":5949:5956  account */\n      dup2\n        /* \"contracts/StakingReward.sol\":5942:5948  earned */\n      tag_43\n        /* \"contracts/StakingReward.sol\":5942:5957  earned(account) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/StakingReward.sol\":5923:5930  rewards */\n      0x0d\n        /* \"contracts/StakingReward.sol\":5923:5939  rewards[account] */\n      0x00\n        /* \"contracts/StakingReward.sol\":5931:5938  account */\n      dup4\n        /* \"contracts/StakingReward.sol\":5923:5939  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingReward.sol\":5923:5957  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":6006:6026  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/StakingReward.sol\":5972:5994  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/StakingReward.sol\":5972:6003  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/StakingReward.sol\":5995:6002  account */\n      dup4\n        /* \"contracts/StakingReward.sol\":5972:6003  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingReward.sol\":5972:6026  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5881:6038  if (account != address(0)) {\r... */\n    tag_144:\n        /* \"contracts/StakingReward.sol\":3072:3073  0 */\n      0x00\n        /* \"contracts/StakingReward.sol\":3063:3069  amount */\n      dup4\n        /* \"contracts/StakingReward.sol\":3063:3073  amount > 0 */\n      gt\n        /* \"contracts/StakingReward.sol\":3055:3095  require(amount > 0, \"Cannot withdraw 0\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e6e6f742077697468647261772030000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/StakingReward.sol\":3121:3145  _totalSupply.sub(amount) */\n      tag_148\n        /* \"contracts/StakingReward.sol\":3138:3144  amount */\n      dup4\n        /* \"contracts/StakingReward.sol\":3121:3133  _totalSupply */\n      sload(0x0e)\n        /* \"contracts/StakingReward.sol\":3121:3137  _totalSupply.sub */\n      tag_121\n      swap1\n        /* \"contracts/StakingReward.sol\":3121:3145  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"contracts/StakingReward.sol\":3106:3118  _totalSupply */\n      0x0e\n        /* \"contracts/StakingReward.sol\":3106:3145  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":3180:3213  _balances[msg.sender].sub(amount) */\n      tag_149\n        /* \"contracts/StakingReward.sol\":3206:3212  amount */\n      dup4\n        /* \"contracts/StakingReward.sol\":3180:3189  _balances */\n      0x0f\n        /* \"contracts/StakingReward.sol\":3180:3201  _balances[msg.sender] */\n      0x00\n        /* \"contracts/StakingReward.sol\":3190:3200  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":3180:3201  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingReward.sol\":3180:3205  _balances[msg.sender].sub */\n      tag_121\n      swap1\n        /* \"contracts/StakingReward.sol\":3180:3213  _balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/StakingReward.sol\":3156:3165  _balances */\n      0x0f\n        /* \"contracts/StakingReward.sol\":3156:3177  _balances[msg.sender] */\n      0x00\n        /* \"contracts/StakingReward.sol\":3166:3176  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":3156:3177  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingReward.sol\":3156:3213  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":3224:3269  stakingToken.safeTransfer(msg.sender, amount) */\n      tag_150\n        /* \"contracts/StakingReward.sol\":3250:3260  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":3262:3268  amount */\n      dup5\n        /* \"contracts/StakingReward.sol\":3224:3236  stakingToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingReward.sol\":3224:3249  stakingToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_151\n      swap1\n        /* \"contracts/StakingReward.sol\":3224:3269  stakingToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/StakingReward.sol\":3295:3305  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":3285:3314  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"contracts/StakingReward.sol\":3307:3313  amount */\n      dup5\n        /* \"contracts/StakingReward.sol\":3285:3314  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ReentrancyGuard.sol\":1067:1068  _ */\n      pop\n        /* \"contracts/ReentrancyGuard.sol\":1102:1115  _guardCounter */\n      sload(0x03)\n        /* \"contracts/ReentrancyGuard.sol\":1086:1098  localCounter */\n      dup2\n        /* \"contracts/ReentrancyGuard.sol\":1086:1115  localCounter == _guardCounter */\n      eq\n        /* \"contracts/ReentrancyGuard.sol\":1078:1116  require(localCounter == _guardCounter) */\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n        /* \"contracts/StakingReward.sol\":2965:3322  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":718:757  uint256 public rewardsDuration = 7 days */\n    tag_64:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":3806:4889  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n    tag_67:\n        /* \"contracts/RewardsDistributionRecipient.sol\":368:387  rewardsDistribution */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/RewardsDistributionRecipient.sol\":354:387  msg.sender == rewardsDistribution */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/RewardsDistributionRecipient.sol\":354:364  msg.sender */\n      caller\n        /* \"contracts/RewardsDistributionRecipient.sol\":354:387  msg.sender == rewardsDistribution */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/RewardsDistributionRecipient.sol\":346:434  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/StakingReward.sol\":3904:3905  0 */\n      0x00\n        /* \"contracts/StakingReward.sol\":5800:5816  rewardPerToken() */\n      tag_156\n        /* \"contracts/StakingReward.sol\":5800:5814  rewardPerToken */\n      tag_106\n        /* \"contracts/StakingReward.sol\":5800:5816  rewardPerToken() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/StakingReward.sol\":5777:5797  rewardPerTokenStored */\n      0x0b\n        /* \"contracts/StakingReward.sol\":5777:5816  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5844:5870  lastTimeRewardApplicable() */\n      tag_157\n        /* \"contracts/StakingReward.sol\":5844:5868  lastTimeRewardApplicable */\n      tag_86\n        /* \"contracts/StakingReward.sol\":5844:5870  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/StakingReward.sol\":5827:5841  lastUpdateTime */\n      0x0a\n        /* \"contracts/StakingReward.sol\":5827:5870  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5904:5905  0 */\n      0x00\n        /* \"contracts/StakingReward.sol\":5885:5906  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingReward.sol\":5885:5892  account */\n      dup2\n        /* \"contracts/StakingReward.sol\":5885:5906  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingReward.sol\":5881:6038  if (account != address(0)) {\r... */\n      tag_158\n      jumpi\n        /* \"contracts/StakingReward.sol\":5942:5957  earned(account) */\n      tag_159\n        /* \"contracts/StakingReward.sol\":5949:5956  account */\n      dup2\n        /* \"contracts/StakingReward.sol\":5942:5948  earned */\n      tag_43\n        /* \"contracts/StakingReward.sol\":5942:5957  earned(account) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/StakingReward.sol\":5923:5930  rewards */\n      0x0d\n        /* \"contracts/StakingReward.sol\":5923:5939  rewards[account] */\n      0x00\n        /* \"contracts/StakingReward.sol\":5931:5938  account */\n      dup4\n        /* \"contracts/StakingReward.sol\":5923:5939  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingReward.sol\":5923:5957  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":6006:6026  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/StakingReward.sol\":5972:5994  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/StakingReward.sol\":5972:6003  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/StakingReward.sol\":5995:6002  account */\n      dup4\n        /* \"contracts/StakingReward.sol\":5972:6003  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingReward.sol\":5972:6026  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5881:6038  if (account != address(0)) {\r... */\n    tag_158:\n        /* \"contracts/StakingReward.sol\":3942:3954  periodFinish */\n      sload(0x07)\n        /* \"contracts/StakingReward.sol\":3923:3938  block.timestamp */\n      timestamp\n        /* \"contracts/StakingReward.sol\":3923:3954  block.timestamp >= periodFinish */\n      lt\n        /* \"contracts/StakingReward.sol\":3919:4237  if (block.timestamp >= periodFinish) {\r... */\n      tag_161\n      jumpi\n        /* \"contracts/StakingReward.sol\":3984:4011  reward.div(rewardsDuration) */\n      tag_162\n        /* \"contracts/StakingReward.sol\":3995:4010  rewardsDuration */\n      sload(0x09)\n        /* \"contracts/StakingReward.sol\":3984:3990  reward */\n      dup4\n        /* \"contracts/StakingReward.sol\":3984:3994  reward.div */\n      tag_123\n      swap1\n        /* \"contracts/StakingReward.sol\":3984:4011  reward.div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"contracts/StakingReward.sol\":3971:3981  rewardRate */\n      0x08\n        /* \"contracts/StakingReward.sol\":3971:4011  rewardRate = reward.div(rewardsDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":3919:4237  if (block.timestamp >= periodFinish) {\r... */\n      jump(tag_163)\n    tag_161:\n        /* \"contracts/StakingReward.sol\":4044:4061  uint256 remaining */\n      0x00\n        /* \"contracts/StakingReward.sol\":4064:4097  periodFinish.sub(block.timestamp) */\n      tag_164\n        /* \"contracts/StakingReward.sol\":4081:4096  block.timestamp */\n      timestamp\n        /* \"contracts/StakingReward.sol\":4064:4076  periodFinish */\n      sload(0x07)\n        /* \"contracts/StakingReward.sol\":4064:4080  periodFinish.sub */\n      tag_121\n      swap1\n        /* \"contracts/StakingReward.sol\":4064:4097  periodFinish.sub(block.timestamp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"contracts/StakingReward.sol\":4044:4097  uint256 remaining = periodFinish.sub(block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/StakingReward.sol\":4112:4128  uint256 leftover */\n      0x00\n        /* \"contracts/StakingReward.sol\":4131:4156  remaining.mul(rewardRate) */\n      tag_165\n        /* \"contracts/StakingReward.sol\":4145:4155  rewardRate */\n      sload(0x08)\n        /* \"contracts/StakingReward.sol\":4131:4140  remaining */\n      dup4\n        /* \"contracts/StakingReward.sol\":4131:4144  remaining.mul */\n      tag_122\n      swap1\n        /* \"contracts/StakingReward.sol\":4131:4156  remaining.mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"contracts/StakingReward.sol\":4112:4156  uint256 leftover = remaining.mul(rewardRate) */\n      swap1\n      pop\n        /* \"contracts/StakingReward.sol\":4184:4225  reward.add(leftover).div(rewardsDuration) */\n      tag_166\n        /* \"contracts/StakingReward.sol\":4209:4224  rewardsDuration */\n      sload(0x09)\n        /* \"contracts/StakingReward.sol\":4184:4204  reward.add(leftover) */\n      tag_167\n        /* \"contracts/StakingReward.sol\":4195:4203  leftover */\n      dup4\n        /* \"contracts/StakingReward.sol\":4184:4190  reward */\n      dup8\n        /* \"contracts/StakingReward.sol\":4184:4194  reward.add */\n      tag_124\n      swap1\n        /* \"contracts/StakingReward.sol\":4184:4204  reward.add(leftover) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"contracts/StakingReward.sol\":4184:4208  reward.add(leftover).div */\n      tag_123\n      swap1\n        /* \"contracts/StakingReward.sol\":4184:4225  reward.add(leftover).div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"contracts/StakingReward.sol\":4171:4181  rewardRate */\n      0x08\n        /* \"contracts/StakingReward.sol\":4171:4225  rewardRate = reward.add(leftover).div(rewardsDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":3919:4237  if (block.timestamp >= periodFinish) {\r... */\n      pop\n      pop\n    tag_163:\n        /* \"contracts/StakingReward.sol\":4597:4609  uint balance */\n      0x00\n        /* \"contracts/StakingReward.sol\":4612:4624  rewardsToken */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingReward.sol\":4612:4634  rewardsToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/StakingReward.sol\":4643:4647  this */\n      address\n        /* \"contracts/StakingReward.sol\":4612:4649  rewardsToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_168\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_168:\n        /* \"contracts/StakingReward.sol\":4612:4649  rewardsToken.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_169\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_169:\n        /* \"contracts/StakingReward.sol\":4612:4649  rewardsToken.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_170\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_170:\n        /* \"contracts/StakingReward.sol\":4612:4649  rewardsToken.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/StakingReward.sol\":4597:4649  uint balance = rewardsToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/StakingReward.sol\":4682:4710  balance.div(rewardsDuration) */\n      tag_171\n        /* \"contracts/StakingReward.sol\":4694:4709  rewardsDuration */\n      sload(0x09)\n        /* \"contracts/StakingReward.sol\":4682:4689  balance */\n      dup3\n        /* \"contracts/StakingReward.sol\":4682:4693  balance.div */\n      tag_123\n      swap1\n        /* \"contracts/StakingReward.sol\":4682:4710  balance.div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/StakingReward.sol\":4668:4678  rewardRate */\n      sload(0x08)\n        /* \"contracts/StakingReward.sol\":4668:4710  rewardRate <= balance.div(rewardsDuration) */\n      gt\n      iszero\n        /* \"contracts/StakingReward.sol\":4660:4739  require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50726f76696465642072657761726420746f6f20686967680000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/StakingReward.sol\":4769:4784  block.timestamp */\n      timestamp\n        /* \"contracts/StakingReward.sol\":4752:4766  lastUpdateTime */\n      0x0a\n        /* \"contracts/StakingReward.sol\":4752:4784  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":4810:4846  block.timestamp.add(rewardsDuration) */\n      tag_173\n        /* \"contracts/StakingReward.sol\":4830:4845  rewardsDuration */\n      sload(0x09)\n        /* \"contracts/StakingReward.sol\":4810:4825  block.timestamp */\n      timestamp\n        /* \"contracts/StakingReward.sol\":4810:4829  block.timestamp.add */\n      tag_124\n      swap1\n        /* \"contracts/StakingReward.sol\":4810:4846  block.timestamp.add(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"contracts/StakingReward.sol\":4795:4807  periodFinish */\n      0x07\n        /* \"contracts/StakingReward.sol\":4795:4846  periodFinish = block.timestamp.add(rewardsDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":4862:4881  RewardAdded(reward) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n        /* \"contracts/StakingReward.sol\":4874:4880  reward */\n      dup4\n        /* \"contracts/StakingReward.sol\":4862:4881  RewardAdded(reward) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StakingReward.sol\":6048:6049  _ */\n      pop\n        /* \"contracts/RewardsDistributionRecipient.sol\":444:445  _ */\n      pop\n        /* \"contracts/StakingReward.sol\":3806:4889  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":3330:3637  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n    tag_69:\n        /* \"contracts/ReentrancyGuard.sol\":1010:1011  1 */\n      0x01\n        /* \"contracts/ReentrancyGuard.sol\":993:1006  _guardCounter */\n      0x03\n      0x00\n        /* \"contracts/ReentrancyGuard.sol\":993:1011  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ReentrancyGuard.sol\":1021:1041  uint256 localCounter */\n      0x00\n        /* \"contracts/ReentrancyGuard.sol\":1044:1057  _guardCounter */\n      sload(0x03)\n        /* \"contracts/ReentrancyGuard.sol\":1021:1057  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"contracts/StakingReward.sol\":3384:3394  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":5800:5816  rewardPerToken() */\n      tag_176\n        /* \"contracts/StakingReward.sol\":5800:5814  rewardPerToken */\n      tag_106\n        /* \"contracts/StakingReward.sol\":5800:5816  rewardPerToken() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/StakingReward.sol\":5777:5797  rewardPerTokenStored */\n      0x0b\n        /* \"contracts/StakingReward.sol\":5777:5816  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5844:5870  lastTimeRewardApplicable() */\n      tag_177\n        /* \"contracts/StakingReward.sol\":5844:5868  lastTimeRewardApplicable */\n      tag_86\n        /* \"contracts/StakingReward.sol\":5844:5870  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/StakingReward.sol\":5827:5841  lastUpdateTime */\n      0x0a\n        /* \"contracts/StakingReward.sol\":5827:5870  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5904:5905  0 */\n      0x00\n        /* \"contracts/StakingReward.sol\":5885:5906  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingReward.sol\":5885:5892  account */\n      dup2\n        /* \"contracts/StakingReward.sol\":5885:5906  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingReward.sol\":5881:6038  if (account != address(0)) {\r... */\n      tag_178\n      jumpi\n        /* \"contracts/StakingReward.sol\":5942:5957  earned(account) */\n      tag_179\n        /* \"contracts/StakingReward.sol\":5949:5956  account */\n      dup2\n        /* \"contracts/StakingReward.sol\":5942:5948  earned */\n      tag_43\n        /* \"contracts/StakingReward.sol\":5942:5957  earned(account) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/StakingReward.sol\":5923:5930  rewards */\n      0x0d\n        /* \"contracts/StakingReward.sol\":5923:5939  rewards[account] */\n      0x00\n        /* \"contracts/StakingReward.sol\":5931:5938  account */\n      dup4\n        /* \"contracts/StakingReward.sol\":5923:5939  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingReward.sol\":5923:5957  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":6006:6026  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/StakingReward.sol\":5972:5994  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/StakingReward.sol\":5972:6003  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/StakingReward.sol\":5995:6002  account */\n      dup4\n        /* \"contracts/StakingReward.sol\":5972:6003  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingReward.sol\":5972:6026  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5881:6038  if (account != address(0)) {\r... */\n    tag_178:\n        /* \"contracts/StakingReward.sol\":3407:3421  uint256 reward */\n      0x00\n        /* \"contracts/StakingReward.sol\":3424:3431  rewards */\n      0x0d\n        /* \"contracts/StakingReward.sol\":3424:3443  rewards[msg.sender] */\n      0x00\n        /* \"contracts/StakingReward.sol\":3432:3442  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":3424:3443  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingReward.sol\":3407:3443  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/StakingReward.sol\":3467:3468  0 */\n      0x00\n        /* \"contracts/StakingReward.sol\":3458:3464  reward */\n      dup2\n        /* \"contracts/StakingReward.sol\":3458:3468  reward > 0 */\n      gt\n        /* \"contracts/StakingReward.sol\":3454:3630  if (reward > 0) {\r... */\n      iszero\n      tag_181\n      jumpi\n        /* \"contracts/StakingReward.sol\":3507:3508  0 */\n      0x00\n        /* \"contracts/StakingReward.sol\":3485:3492  rewards */\n      0x0d\n        /* \"contracts/StakingReward.sol\":3485:3504  rewards[msg.sender] */\n      0x00\n        /* \"contracts/StakingReward.sol\":3493:3503  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":3485:3504  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingReward.sol\":3485:3508  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":3523:3568  rewardsToken.safeTransfer(msg.sender, reward) */\n      tag_182\n        /* \"contracts/StakingReward.sol\":3549:3559  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":3561:3567  reward */\n      dup3\n        /* \"contracts/StakingReward.sol\":3523:3535  rewardsToken */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingReward.sol\":3523:3548  rewardsToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_151\n      swap1\n        /* \"contracts/StakingReward.sol\":3523:3568  rewardsToken.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_182:\n        /* \"contracts/StakingReward.sol\":3599:3609  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":3588:3618  RewardPaid(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/StakingReward.sol\":3611:3617  reward */\n      dup3\n        /* \"contracts/StakingReward.sol\":3588:3618  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingReward.sol\":3454:3630  if (reward > 0) {\r... */\n    tag_181:\n        /* \"contracts/StakingReward.sol\":6048:6049  _ */\n      pop\n        /* \"contracts/ReentrancyGuard.sol\":1067:1068  _ */\n      pop\n        /* \"contracts/ReentrancyGuard.sol\":1102:1115  _guardCounter */\n      sload(0x03)\n        /* \"contracts/ReentrancyGuard.sol\":1086:1098  localCounter */\n      dup2\n        /* \"contracts/ReentrancyGuard.sol\":1086:1115  localCounter == _guardCounter */\n      eq\n        /* \"contracts/ReentrancyGuard.sol\":1078:1116  require(localCounter == _guardCounter) */\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n        /* \"contracts/StakingReward.sol\":3330:3637  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/RewardsDistributionRecipient.sol\":201:235  address public rewardsDistribution */\n    tag_71:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Owned.sol\":134:163  address public nominatedOwner */\n    tag_73:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Pausable.sol\":192:210  bool public paused */\n    tag_75:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":1568:1680  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_78:\n        /* \"contracts/StakingReward.sol\":1627:1634  uint256 */\n      0x00\n        /* \"contracts/StakingReward.sol\":1654:1663  _balances */\n      0x0f\n        /* \"contracts/StakingReward.sol\":1654:1672  _balances[account] */\n      0x00\n        /* \"contracts/StakingReward.sol\":1664:1671  account */\n      dup4\n        /* \"contracts/StakingReward.sol\":1654:1672  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingReward.sol\":1647:1672  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/StakingReward.sol\":1568:1680  function balanceOf(address account) external view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":611:637  IERC20 public stakingToken */\n    tag_80:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Owned.sol\":501:767  function acceptOwnership() external {... */\n    tag_82:\n        /* \"contracts/Owned.sol\":569:583  nominatedOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":555:583  msg.sender == nominatedOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":555:565  msg.sender */\n      caller\n        /* \"contracts/Owned.sol\":555:583  msg.sender == nominatedOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Owned.sol\":547:641  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x35\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b\n      0x35\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/Owned.sol\":656:691  OwnerChanged(owner, nominatedOwner) */\n      0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n        /* \"contracts/Owned.sol\":669:674  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":676:690  nominatedOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":656:691  OwnerChanged(owner, nominatedOwner) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":709:723  nominatedOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":701:706  owner */\n      0x00\n      dup1\n        /* \"contracts/Owned.sol\":701:723  owner = nominatedOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owned.sol\":758:759  0 */\n      0x00\n        /* \"contracts/Owned.sol\":733:747  nominatedOwner */\n      0x01\n      0x00\n        /* \"contracts/Owned.sol\":733:760  nominatedOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owned.sol\":501:767  function acceptOwnership() external {... */\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":682:711  uint256 public rewardRate = 0 */\n    tag_84:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":1688:1843  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n    tag_86:\n        /* \"contracts/StakingReward.sol\":1745:1752  uint256 */\n      0x00\n        /* \"contracts/StakingReward.sol\":1790:1802  periodFinish */\n      sload(0x07)\n        /* \"contracts/StakingReward.sol\":1772:1787  block.timestamp */\n      timestamp\n        /* \"contracts/StakingReward.sol\":1772:1802  block.timestamp < periodFinish */\n      lt\n        /* \"contracts/StakingReward.sol\":1772:1835  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      tag_188\n      jumpi\n        /* \"contracts/StakingReward.sol\":1823:1835  periodFinish */\n      sload(0x07)\n        /* \"contracts/StakingReward.sol\":1772:1835  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      jump(tag_189)\n    tag_188:\n        /* \"contracts/StakingReward.sol\":1805:1820  block.timestamp */\n      timestamp\n        /* \"contracts/StakingReward.sol\":1772:1835  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n    tag_189:\n        /* \"contracts/StakingReward.sol\":1765:1835  return block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      swap1\n      pop\n        /* \"contracts/StakingReward.sol\":1688:1843  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":5004:5306  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\r... */\n    tag_89:\n        /* \"contracts/Owned.sol\":802:814  _onlyOwner() */\n      tag_191\n        /* \"contracts/Owned.sol\":802:812  _onlyOwner */\n      tag_127\n        /* \"contracts/Owned.sol\":802:814  _onlyOwner() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/StakingReward.sol\":5131:5143  stakingToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingReward.sol\":5107:5144  tokenAddress != address(stakingToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingReward.sol\":5107:5119  tokenAddress */\n      dup3\n        /* \"contracts/StakingReward.sol\":5107:5144  tokenAddress != address(stakingToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/StakingReward.sol\":5099:5182  require(tokenAddress != address(stakingToken), \"Cannot withdraw the staking token\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"contracts/StakingReward.sol\":5193:5246  IERC20(tokenAddress).safeTransfer(owner, tokenAmount) */\n      tag_194\n        /* \"contracts/StakingReward.sol\":5227:5232  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingReward.sol\":5234:5245  tokenAmount */\n      dup3\n        /* \"contracts/StakingReward.sol\":5200:5212  tokenAddress */\n      dup5\n        /* \"contracts/StakingReward.sol\":5193:5226  IERC20(tokenAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_151\n      swap1\n        /* \"contracts/StakingReward.sol\":5193:5246  IERC20(tokenAddress).safeTransfer(owner, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/StakingReward.sol\":5262:5298  Recovered(tokenAddress, tokenAmount) */\n      0x8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28\n        /* \"contracts/StakingReward.sol\":5272:5284  tokenAddress */\n      dup3\n        /* \"contracts/StakingReward.sol\":5286:5297  tokenAmount */\n      dup3\n        /* \"contracts/StakingReward.sol\":5262:5298  Recovered(tokenAddress, tokenAmount) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StakingReward.sol\":5004:5306  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":844:901  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_92:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Owned.sol\":108:128  address public owner */\n    tag_94:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Pausable.sol\":161:186  uint public lastPauseTime */\n    tag_96:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":2578:2957  function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {\r... */\n    tag_99:\n        /* \"contracts/ReentrancyGuard.sol\":1010:1011  1 */\n      0x01\n        /* \"contracts/ReentrancyGuard.sol\":993:1006  _guardCounter */\n      0x03\n      0x00\n        /* \"contracts/ReentrancyGuard.sol\":993:1011  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ReentrancyGuard.sol\":1021:1041  uint256 localCounter */\n      0x00\n        /* \"contracts/ReentrancyGuard.sol\":1044:1057  _guardCounter */\n      sload(0x03)\n        /* \"contracts/ReentrancyGuard.sol\":1021:1057  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"contracts/Pausable.sol\":1150:1156  paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":1149:1156  !paused */\n      iszero\n        /* \"contracts/Pausable.sol\":1141:1221  require(!paused, \"This action cannot be performed while the contract is paused\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f\n      0x3c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contracts/StakingReward.sol\":2654:2664  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":5800:5816  rewardPerToken() */\n      tag_199\n        /* \"contracts/StakingReward.sol\":5800:5814  rewardPerToken */\n      tag_106\n        /* \"contracts/StakingReward.sol\":5800:5816  rewardPerToken() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/StakingReward.sol\":5777:5797  rewardPerTokenStored */\n      0x0b\n        /* \"contracts/StakingReward.sol\":5777:5816  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5844:5870  lastTimeRewardApplicable() */\n      tag_200\n        /* \"contracts/StakingReward.sol\":5844:5868  lastTimeRewardApplicable */\n      tag_86\n        /* \"contracts/StakingReward.sol\":5844:5870  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/StakingReward.sol\":5827:5841  lastUpdateTime */\n      0x0a\n        /* \"contracts/StakingReward.sol\":5827:5870  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5904:5905  0 */\n      0x00\n        /* \"contracts/StakingReward.sol\":5885:5906  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingReward.sol\":5885:5892  account */\n      dup2\n        /* \"contracts/StakingReward.sol\":5885:5906  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingReward.sol\":5881:6038  if (account != address(0)) {\r... */\n      tag_201\n      jumpi\n        /* \"contracts/StakingReward.sol\":5942:5957  earned(account) */\n      tag_202\n        /* \"contracts/StakingReward.sol\":5949:5956  account */\n      dup2\n        /* \"contracts/StakingReward.sol\":5942:5948  earned */\n      tag_43\n        /* \"contracts/StakingReward.sol\":5942:5957  earned(account) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/StakingReward.sol\":5923:5930  rewards */\n      0x0d\n        /* \"contracts/StakingReward.sol\":5923:5939  rewards[account] */\n      0x00\n        /* \"contracts/StakingReward.sol\":5931:5938  account */\n      dup4\n        /* \"contracts/StakingReward.sol\":5923:5939  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingReward.sol\":5923:5957  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":6006:6026  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/StakingReward.sol\":5972:5994  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/StakingReward.sol\":5972:6003  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/StakingReward.sol\":5995:6002  account */\n      dup4\n        /* \"contracts/StakingReward.sol\":5972:6003  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingReward.sol\":5972:6026  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5881:6038  if (account != address(0)) {\r... */\n    tag_201:\n        /* \"contracts/StakingReward.sol\":2694:2695  0 */\n      0x00\n        /* \"contracts/StakingReward.sol\":2685:2691  amount */\n      dup4\n        /* \"contracts/StakingReward.sol\":2685:2695  amount > 0 */\n      gt\n        /* \"contracts/StakingReward.sol\":2677:2714  require(amount > 0, \"Cannot stake 0\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/StakingReward.sol\":2740:2764  _totalSupply.add(amount) */\n      tag_205\n        /* \"contracts/StakingReward.sol\":2757:2763  amount */\n      dup4\n        /* \"contracts/StakingReward.sol\":2740:2752  _totalSupply */\n      sload(0x0e)\n        /* \"contracts/StakingReward.sol\":2740:2756  _totalSupply.add */\n      tag_124\n      swap1\n        /* \"contracts/StakingReward.sol\":2740:2764  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"contracts/StakingReward.sol\":2725:2737  _totalSupply */\n      0x0e\n        /* \"contracts/StakingReward.sol\":2725:2764  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":2799:2832  _balances[msg.sender].add(amount) */\n      tag_206\n        /* \"contracts/StakingReward.sol\":2825:2831  amount */\n      dup4\n        /* \"contracts/StakingReward.sol\":2799:2808  _balances */\n      0x0f\n        /* \"contracts/StakingReward.sol\":2799:2820  _balances[msg.sender] */\n      0x00\n        /* \"contracts/StakingReward.sol\":2809:2819  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":2799:2820  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingReward.sol\":2799:2824  _balances[msg.sender].add */\n      tag_124\n      swap1\n        /* \"contracts/StakingReward.sol\":2799:2832  _balances[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"contracts/StakingReward.sol\":2775:2784  _balances */\n      0x0f\n        /* \"contracts/StakingReward.sol\":2775:2796  _balances[msg.sender] */\n      0x00\n        /* \"contracts/StakingReward.sol\":2785:2795  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":2775:2796  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingReward.sol\":2775:2832  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":2843:2907  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_207\n        /* \"contracts/StakingReward.sol\":2873:2883  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":2893:2897  this */\n      address\n        /* \"contracts/StakingReward.sol\":2900:2906  amount */\n      dup6\n        /* \"contracts/StakingReward.sol\":2843:2855  stakingToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingReward.sol\":2843:2872  stakingToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_208\n      swap1\n        /* \"contracts/StakingReward.sol\":2843:2907  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/StakingReward.sol\":2930:2940  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":2923:2949  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/StakingReward.sol\":2942:2948  amount */\n      dup5\n        /* \"contracts/StakingReward.sol\":2923:2949  Staked(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Pausable.sol\":1231:1232  _ */\n      pop\n        /* \"contracts/ReentrancyGuard.sol\":1102:1115  _guardCounter */\n      sload(0x03)\n        /* \"contracts/ReentrancyGuard.sol\":1086:1098  localCounter */\n      dup2\n        /* \"contracts/ReentrancyGuard.sol\":1086:1115  localCounter == _guardCounter */\n      eq\n        /* \"contracts/ReentrancyGuard.sol\":1078:1116  require(localCounter == _guardCounter) */\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n        /* \"contracts/StakingReward.sol\":2578:2957  function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":764:793  uint256 public lastUpdateTime */\n    tag_101:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":5314:5674  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\r... */\n    tag_104:\n        /* \"contracts/Owned.sol\":802:814  _onlyOwner() */\n      tag_211\n        /* \"contracts/Owned.sol\":802:812  _onlyOwner */\n      tag_127\n        /* \"contracts/Owned.sol\":802:814  _onlyOwner() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/StakingReward.sol\":5438:5450  periodFinish */\n      sload(0x07)\n        /* \"contracts/StakingReward.sol\":5420:5435  block.timestamp */\n      timestamp\n        /* \"contracts/StakingReward.sol\":5420:5450  block.timestamp > periodFinish */\n      gt\n        /* \"contracts/StakingReward.sol\":5398:5566  require(\r... */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x58\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56\n      0x58\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/StakingReward.sol\":5595:5611  _rewardsDuration */\n      dup1\n        /* \"contracts/StakingReward.sol\":5577:5592  rewardsDuration */\n      0x09\n        /* \"contracts/StakingReward.sol\":5577:5611  rewardsDuration = _rewardsDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingReward.sol\":5627:5666  RewardsDurationUpdated(rewardsDuration) */\n      0xfb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3\n        /* \"contracts/StakingReward.sol\":5650:5665  rewardsDuration */\n      sload(0x09)\n        /* \"contracts/StakingReward.sol\":5627:5666  RewardsDurationUpdated(rewardsDuration) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StakingReward.sol\":5314:5674  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":1851:2181  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_106:\n        /* \"contracts/StakingReward.sol\":1898:1905  uint256 */\n      0x00\n        /* \"contracts/StakingReward.sol\":1938:1939  0 */\n      dup1\n        /* \"contracts/StakingReward.sol\":1922:1934  _totalSupply */\n      sload(0x0e)\n        /* \"contracts/StakingReward.sol\":1922:1939  _totalSupply == 0 */\n      eq\n        /* \"contracts/StakingReward.sol\":1918:1995  if (_totalSupply == 0) {\r... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/StakingReward.sol\":1963:1983  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/StakingReward.sol\":1956:1983  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_214)\n        /* \"contracts/StakingReward.sol\":1918:1995  if (_totalSupply == 0) {\r... */\n    tag_215:\n        /* \"contracts/StakingReward.sol\":2025:2173  rewardPerTokenStored.add(\r... */\n      tag_216\n        /* \"contracts/StakingReward.sol\":2068:2158  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n      tag_217\n        /* \"contracts/StakingReward.sol\":2145:2157  _totalSupply */\n      sload(0x0e)\n        /* \"contracts/StakingReward.sol\":2068:2140  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_218\n        /* \"contracts/StakingReward.sol\":2135:2139  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StakingReward.sol\":2068:2130  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_219\n        /* \"contracts/StakingReward.sol\":2119:2129  rewardRate */\n      sload(0x08)\n        /* \"contracts/StakingReward.sol\":2068:2114  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_220\n        /* \"contracts/StakingReward.sol\":2099:2113  lastUpdateTime */\n      sload(0x0a)\n        /* \"contracts/StakingReward.sol\":2068:2094  lastTimeRewardApplicable() */\n      tag_221\n        /* \"contracts/StakingReward.sol\":2068:2092  lastTimeRewardApplicable */\n      tag_86\n        /* \"contracts/StakingReward.sol\":2068:2094  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/StakingReward.sol\":2068:2098  lastTimeRewardApplicable().sub */\n      tag_121\n      swap1\n        /* \"contracts/StakingReward.sol\":2068:2114  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"contracts/StakingReward.sol\":2068:2118  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      tag_122\n      swap1\n        /* \"contracts/StakingReward.sol\":2068:2130  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_219:\n        /* \"contracts/StakingReward.sol\":2068:2134  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul */\n      tag_122\n      swap1\n        /* \"contracts/StakingReward.sol\":2068:2140  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"contracts/StakingReward.sol\":2068:2144  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div */\n      tag_123\n      swap1\n        /* \"contracts/StakingReward.sol\":2068:2158  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"contracts/StakingReward.sol\":2025:2045  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/StakingReward.sol\":2025:2049  rewardPerTokenStored.add */\n      tag_124\n      swap1\n        /* \"contracts/StakingReward.sol\":2025:2173  rewardPerTokenStored.add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"contracts/StakingReward.sol\":2005:2173  return\r... */\n      swap1\n      pop\n        /* \"contracts/StakingReward.sol\":1851:2181  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_214:\n      swap1\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":578:604  IERC20 public rewardsToken */\n    tag_108:\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":800:835  uint256 public rewardPerTokenStored */\n    tag_110:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":3645:3742  function exit() external {\r... */\n    tag_112:\n        /* \"contracts/StakingReward.sol\":3681:3712  withdraw(_balances[msg.sender]) */\n      tag_223\n        /* \"contracts/StakingReward.sol\":3690:3699  _balances */\n      0x0f\n        /* \"contracts/StakingReward.sol\":3690:3711  _balances[msg.sender] */\n      0x00\n        /* \"contracts/StakingReward.sol\":3700:3710  msg.sender */\n      caller\n        /* \"contracts/StakingReward.sol\":3690:3711  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingReward.sol\":3681:3689  withdraw */\n      tag_62\n        /* \"contracts/StakingReward.sol\":3681:3712  withdraw(_balances[msg.sender]) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/StakingReward.sol\":3723:3734  getReward() */\n      tag_224\n        /* \"contracts/StakingReward.sol\":3723:3732  getReward */\n      tag_69\n        /* \"contracts/StakingReward.sol\":3723:3734  getReward() */\n      jump\t// in\n    tag_224:\n        /* \"contracts/StakingReward.sol\":3645:3742  function exit() external {\r... */\n      jump\t// out\n        /* \"contracts/StakingReward.sol\":644:675  uint256 public periodFinish = 0 */\n    tag_114:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":1288:1422  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_121:\n        /* \"contracts/SafeMath.sol\":1346:1353  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":1372:1415  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_226\n        /* \"contracts/SafeMath.sol\":1376:1377  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":1379:1380  b */\n      dup4\n        /* \"contracts/SafeMath.sol\":1372:1415  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeMath.sol\":1372:1375  sub */\n      tag_227\n        /* \"contracts/SafeMath.sol\":1372:1415  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_226:\n        /* \"contracts/SafeMath.sol\":1365:1415  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":1288:1422  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":2147:2606  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"contracts/SafeMath.sol\":2205:2212  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":2451:2452  0 */\n      dup1\n        /* \"contracts/SafeMath.sol\":2446:2447  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":2446:2452  a == 0 */\n      eq\n        /* \"contracts/SafeMath.sol\":2442:2487  if (a == 0) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"contracts/SafeMath.sol\":2475:2476  0 */\n      0x00\n        /* \"contracts/SafeMath.sol\":2468:2476  return 0 */\n      swap1\n      pop\n      jump(tag_228)\n        /* \"contracts/SafeMath.sol\":2442:2487  if (a == 0) {... */\n    tag_229:\n        /* \"contracts/SafeMath.sol\":2497:2506  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":2513:2514  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":2509:2510  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":2509:2514  a * b */\n      mul\n        /* \"contracts/SafeMath.sol\":2497:2514  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":2541:2542  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":2536:2537  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":2532:2533  c */\n      dup3\n        /* \"contracts/SafeMath.sol\":2532:2537  c / a */\n      dup2\n      tag_230\n      jumpi\n      invalid\n    tag_230:\n      div\n        /* \"contracts/SafeMath.sol\":2532:2542  c / a == b */\n      eq\n        /* \"contracts/SafeMath.sol\":2524:2580  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"contracts/SafeMath.sol\":2598:2599  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":2591:2599  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":2147:2606  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_228:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":3068:3198  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_123:\n        /* \"contracts/SafeMath.sol\":3126:3133  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":3152:3191  div(a, b, \"SafeMath: division by zero\") */\n      tag_233\n        /* \"contracts/SafeMath.sol\":3156:3157  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":3159:3160  b */\n      dup4\n        /* \"contracts/SafeMath.sol\":3152:3191  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeMath.sol\":3152:3155  div */\n      tag_234\n        /* \"contracts/SafeMath.sol\":3152:3191  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_233:\n        /* \"contracts/SafeMath.sol\":3145:3191  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":3068:3198  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":841:1017  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"contracts/SafeMath.sol\":899:906  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":918:927  uint256 c */\n      dup1\n        /* \"contracts/SafeMath.sol\":934:935  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":930:931  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":930:935  a + b */\n      add\n        /* \"contracts/SafeMath.sol\":918:935  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":958:959  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":953:954  c */\n      dup2\n        /* \"contracts/SafeMath.sol\":953:959  c >= a */\n      lt\n      iszero\n        /* \"contracts/SafeMath.sol\":945:991  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"contracts/SafeMath.sol\":1009:1010  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":1002:1010  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":841:1017  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Owned.sol\":838:969  function _onlyOwner() private view {... */\n    tag_127:\n        /* \"contracts/Owned.sol\":905:910  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":891:910  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":891:901  msg.sender */\n      caller\n        /* \"contracts/Owned.sol\":891:910  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Owned.sol\":883:962  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"contracts/Owned.sol\":838:969  function _onlyOwner() private view {... */\n      jump\t// out\n        /* \"contracts/SafeERC20.sol\":643:817  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_151:\n        /* \"contracts/SafeERC20.sol\":725:810  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_240\n        /* \"contracts/SafeERC20.sol\":744:749  token */\n      dup4\n        /* \"contracts/SafeERC20.sol\":774:779  token */\n      dup5\n        /* \"contracts/SafeERC20.sol\":774:788  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/SafeERC20.sol\":774:797  token.transfer.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"contracts/SafeERC20.sol\":799:801  to */\n      dup5\n        /* \"contracts/SafeERC20.sol\":803:808  value */\n      dup5\n        /* \"contracts/SafeERC20.sol\":751:809  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/SafeERC20.sol\":751:809  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"contracts/SafeERC20.sol\":751:809  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      pop\n        /* \"contracts/SafeERC20.sol\":725:743  callOptionalReturn */\n      tag_241\n        /* \"contracts/SafeERC20.sol\":725:810  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/SafeERC20.sol\":643:817  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeERC20.sol\":823:1025  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_208:\n        /* \"contracts/SafeERC20.sol\":923:1018  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_243\n        /* \"contracts/SafeERC20.sol\":942:947  token */\n      dup5\n        /* \"contracts/SafeERC20.sol\":972:977  token */\n      dup6\n        /* \"contracts/SafeERC20.sol\":972:990  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/SafeERC20.sol\":972:999  token.transferFrom.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"contracts/SafeERC20.sol\":1001:1005  from */\n      dup6\n        /* \"contracts/SafeERC20.sol\":1007:1009  to */\n      dup6\n        /* \"contracts/SafeERC20.sol\":1011:1016  value */\n      dup6\n        /* \"contracts/SafeERC20.sol\":949:1017  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/SafeERC20.sol\":949:1017  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"contracts/SafeERC20.sol\":949:1017  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      pop\n        /* \"contracts/SafeERC20.sol\":923:941  callOptionalReturn */\n      tag_241\n        /* \"contracts/SafeERC20.sol\":923:1018  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/SafeERC20.sol\":823:1025  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":1713:1900  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_227:\n        /* \"contracts/SafeMath.sol\":1799:1806  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":1831:1832  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":1826:1827  b */\n      dup4\n        /* \"contracts/SafeMath.sol\":1826:1832  b <= a */\n      gt\n      iszero\n        /* \"contracts/SafeMath.sol\":1834:1846  errorMessage */\n      dup3\n        /* \"contracts/SafeMath.sol\":1818:1847  require(b <= a, errorMessage) */\n      swap1\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_246:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_248\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_246)\n    tag_248:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/SafeMath.sol\":1818:1847  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_249\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_249:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n      pop\n        /* \"contracts/SafeMath.sol\":1857:1866  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":1873:1874  b */\n      dup4\n        /* \"contracts/SafeMath.sol\":1869:1870  a */\n      dup6\n        /* \"contracts/SafeMath.sol\":1869:1874  a - b */\n      sub\n        /* \"contracts/SafeMath.sol\":1857:1874  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":1892:1893  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":1885:1893  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":1713:1900  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":3680:3952  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_234:\n        /* \"contracts/SafeMath.sol\":3766:3773  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":3797:3798  0 */\n      dup1\n        /* \"contracts/SafeMath.sol\":3793:3794  b */\n      dup4\n        /* \"contracts/SafeMath.sol\":3793:3798  b > 0 */\n      gt\n        /* \"contracts/SafeMath.sol\":3800:3812  errorMessage */\n      dup3\n        /* \"contracts/SafeMath.sol\":3785:3813  require(b > 0, errorMessage) */\n      swap1\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_252:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_254\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_252)\n    tag_254:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/SafeMath.sol\":3785:3813  require(b > 0, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_255\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_255:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n      pop\n        /* \"contracts/SafeMath.sol\":3823:3832  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":3839:3840  b */\n      dup4\n        /* \"contracts/SafeMath.sol\":3835:3836  a */\n      dup6\n        /* \"contracts/SafeMath.sol\":3835:3840  a / b */\n      dup2\n      tag_256\n      jumpi\n      invalid\n    tag_256:\n      div\n        /* \"contracts/SafeMath.sol\":3823:3840  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":3944:3945  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":3937:3945  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":3680:3952  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeERC20.sol\":2470:3339  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_241:\n        /* \"contracts/SafeERC20.sol\":3013:3040  address(token).isContract() */\n      tag_258\n        /* \"contracts/SafeERC20.sol\":3021:3026  token */\n      dup3\n        /* \"contracts/SafeERC20.sol\":3013:3038  address(token).isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_259\n        /* \"contracts/SafeERC20.sol\":3013:3040  address(token).isContract() */\n      jump\t// in\n    tag_258:\n        /* \"contracts/SafeERC20.sol\":3005:3041  require(address(token).isContract()) */\n      tag_260\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_260:\n        /* \"contracts/SafeERC20.sol\":3112:3124  bool success */\n      0x00\n        /* \"contracts/SafeERC20.sol\":3126:3149  bytes memory returndata */\n      0x60\n        /* \"contracts/SafeERC20.sol\":3161:3166  token */\n      dup4\n        /* \"contracts/SafeERC20.sol\":3153:3172  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SafeERC20.sol\":3173:3177  data */\n      dup4\n        /* \"contracts/SafeERC20.sol\":3153:3178  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_261:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_263\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_261)\n    tag_263:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/SafeERC20.sol\":3153:3178  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_265\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_264)\n        /* \"--CODEGEN--\":16:47   */\n    tag_265:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_264:\n      pop\n        /* \"contracts/SafeERC20.sol\":3111:3178  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/SafeERC20.sol\":3196:3203  success */\n      dup2\n        /* \"contracts/SafeERC20.sol\":3188:3204  require(success) */\n      tag_266\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_266:\n        /* \"contracts/SafeERC20.sol\":3239:3240  0 */\n      0x00\n        /* \"contracts/SafeERC20.sol\":3219:3229  returndata */\n      dup2\n        /* \"contracts/SafeERC20.sol\":3219:3236  returndata.length */\n      mload\n        /* \"contracts/SafeERC20.sol\":3219:3240  returndata.length > 0 */\n      gt\n        /* \"contracts/SafeERC20.sol\":3215:3333  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_267\n      jumpi\n        /* \"contracts/SafeERC20.sol\":3302:3312  returndata */\n      dup1\n        /* \"contracts/SafeERC20.sol\":3291:3321  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_268\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_268:\n        /* \"contracts/SafeERC20.sol\":3291:3321  abi.decode(returndata, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/SafeERC20.sol\":3283:3322  require(abi.decode(returndata, (bool))) */\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n        /* \"contracts/SafeERC20.sol\":3215:3333  if (returndata.length > 0) { // Return data is optional... */\n    tag_267:\n        /* \"contracts/SafeERC20.sol\":2470:3339  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Address.sol\":463:1079  function isContract(address account) internal view returns (bool) {... */\n    tag_259:\n        /* \"contracts/Address.sol\":523:527  bool */\n      0x00\n        /* \"contracts/Address.sol\":539:551  uint256 size */\n      dup1\n        /* \"contracts/Address.sol\":1038:1045  account */\n      dup3\n        /* \"contracts/Address.sol\":1026:1046  extcodesize(account) */\n      extcodesize\n        /* \"contracts/Address.sol\":1018:1046  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"contracts/Address.sol\":1071:1072  0 */\n      0x00\n        /* \"contracts/Address.sol\":1064:1068  size */\n      dup2\n        /* \"contracts/Address.sol\":1064:1072  size > 0 */\n      gt\n        /* \"contracts/Address.sol\":1057:1072  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/Address.sol\":463:1079  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56 50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64\n    data_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b 596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970\n    data_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a 4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f 5468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e747261637420697320706175736564\n    data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de 43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374\n    data_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9 43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656e\n\n    auxdata: 0xa265627a7a72315820f0082f8e7e3c8aa08ced01d337a2030247cbc3e2f2e231121a6d91f14efbc35b64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x7 SSTORE PUSH1 0x0 PUSH1 0x8 SSTORE PUSH3 0x93A80 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x29A3 CODESIZE SUB DUP1 PUSH2 0x29A3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x117 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E657220616464726573732063616E6E6F74206265203000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E6572206D75737420626520736574000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0x2611 DUP1 PUSH2 0x392 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x755 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x7C7 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x6BD JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x737 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x8980F11F GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x91B4DED9 EQ PUSH2 0x69F JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x591 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x3FC6DF6E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4C7 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x407 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x16C38B3C GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x19762143 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x36F JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x1627540C EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x91B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x377 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C3 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40F PUSH2 0x119F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x419 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AD PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x143B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x571 PUSH2 0x14AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57B PUSH2 0x16D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x599 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x185A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65D PUSH2 0x1872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A7 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x189D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F3 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x735 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x73F PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75D PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A7 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C5 PUSH2 0x1D3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7CF PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x8FC PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8EE PUSH8 0xDE0B6B3A7640000 PUSH2 0x8E0 PUSH2 0x892 PUSH1 0xC PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x884 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x1D92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1DDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1EAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x923 PUSH2 0x1F34 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x9D2 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x9F2 JUMPI PUSH2 0xA74 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA29 JUMPI TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x8FB6C181EE25A520CF3DD6565006EF91229FCFE5A989566C2A3B8C115570CEC5 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA89 PUSH2 0x1F34 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE6 PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x1DDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP CALLER PUSH2 0xB0C PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xB1A PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBE7 JUMPI PUSH2 0xB5D DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC72 DUP4 PUSH1 0xE SLOAD PUSH2 0x1D92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xCCA DUP4 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD5A CALLER DUP5 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FDB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x3 SLOAD DUP2 EQ PUSH2 0xDB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2592 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE71 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xE7F PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF4C JUMPI PUSH2 0xEC2 DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0xF75 JUMPI PUSH2 0xF6A PUSH1 0x9 SLOAD DUP4 PUSH2 0x1E62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8C TIMESTAMP PUSH1 0x7 SLOAD PUSH2 0x1D92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFA5 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1DDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xFCE PUSH1 0x9 SLOAD PUSH2 0xFC0 DUP4 DUP8 PUSH2 0x1EAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1078 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x108C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x10CA PUSH1 0x9 SLOAD DUP3 PUSH2 0x1E62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD GT ISZERO PUSH2 0x1141 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x115D PUSH1 0x9 SLOAD TIMESTAMP PUSH2 0x1EAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP CALLER PUSH2 0x11C0 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x11CE PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x129B JUMPI PUSH2 0x1211 DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x13C9 JUMPI PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x137A CALLER DUP3 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FDB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x3 SLOAD DUP2 EQ PUSH2 0x13D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1550 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24D1 PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0x16E9 JUMPI PUSH1 0x7 SLOAD PUSH2 0x16EB JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16F8 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x179F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25BC PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17EB PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FDB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x191B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2556 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x1924 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1932 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19FF JUMPI PUSH2 0x1975 DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1A75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A8A DUP4 PUSH1 0xE SLOAD PUSH2 0x1EAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0x1AE2 DUP4 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1EAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1B74 CALLER ADDRESS DUP6 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20AC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x3 SLOAD DUP2 EQ PUSH2 0x1BD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BE3 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0x1C3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x58 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2479 PUSH1 0x58 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD EQ ISZERO PUSH2 0x1C96 JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x1D08 PUSH2 0x1CF7 PUSH1 0xE SLOAD PUSH2 0x1CE9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1CDB PUSH1 0x8 SLOAD PUSH2 0x1CCD PUSH1 0xA SLOAD PUSH2 0x1CBF PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x1D92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1EAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D82 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAEB JUMP JUMPDEST PUSH2 0x1D8A PUSH2 0x119F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x21B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1DEF JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1E00 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1E57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2535 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2272 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1F2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2506 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x20A7 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2338 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x21AC DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2338 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x225F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2224 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2209 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2251 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x231E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22E3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22C8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2310 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x232A JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2357 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2465 JUMP JUMPDEST PUSH2 0x2360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x23AF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x238C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2411 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2416 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x245F JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x245E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID POP PUSH19 0x6576696F757320726577617264732070657269 PUSH16 0x64206D75737420626520636F6D706C65 PUSH21 0x65206265666F7265206368616E67696E6720746865 KECCAK256 PUSH5 0x7572617469 PUSH16 0x6E20666F7220746865206E6577207065 PUSH19 0x696F64596F75206D757374206265206E6F6D69 PUSH15 0x61746564206265666F726520796F75 KECCAK256 PUSH4 0x616E2061 PUSH4 0x63657074 KECCAK256 PUSH16 0x776E6572736869704F6E6C7920746865 KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH16 0x776E6572206D617920706572666F726D KECCAK256 PUSH21 0x68697320616374696F6E536166654D6174683A206D PUSH22 0x6C7469706C69636174696F6E206F766572666C6F7754 PUSH9 0x697320616374696F6E KECCAK256 PUSH4 0x616E6E6F PUSH21 0x20626520706572666F726D6564207768696C652074 PUSH9 0x6520636F6E74726163 PUSH21 0x2069732070617573656443616C6C6572206973206E PUSH16 0x74205265776172647344697374726962 PUSH22 0x74696F6E20636F6E747261637443616E6E6F74207769 PUSH21 0x686472617720746865207374616B696E6720746F6B PUSH6 0x6EA265627A7A PUSH19 0x315820F0082F8E7E3C8AA08CED01D337A20302 SELFBALANCE 0xCB 0xC3 0xE2 CALLCODE 0xE2 BALANCE SLT BYTE PUSH14 0x91F14EFBC35B64736F6C63430005 GT STOP ORIGIN ",
							"sourceMap": "352:6079:9:-;;;674:1;644:31;;710:1;682:29;;751:6;718:39;;1095:323;8:9:-1;5:2;;;30:1;27;20:12;5:2;1095:323:9;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1095:323:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:6;241:1:3;223:20;;:6;:20;;;;215:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;291:6;283:5;;:14;;;;;;;;;;;;;;;;;;312:32;333:1;337:6;312:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;170:181;576:1:5;560:13;:17;;;;354:1:4;337:19;;:5;;;;;;;;;;;:19;;;;329:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1296:13:9;1274:12;;:36;;;;;;;;;;;;;;;;;;1343:13;1321:12;;:36;;;;;;;;;;;;;;;;;;1390:20;1368:19;;:42;;;;;;;;;;;;;;;;;;1095:323;;;;352:6079;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101e45760003560e01c806372f702f31161010f578063a694fc3a116100a2578063d1af0c7d11610071578063d1af0c7d14610755578063df136d651461079f578063e9fad8ee146107bd578063ebe2b12b146107c7576101e4565b8063a694fc3a146106bd578063c8f33c91146106eb578063cc1a378f14610709578063cd3daf9d14610737576101e4565b80638980f11f116100de5780638980f11f146105af5780638b876347146105fd5780638da5cb5b1461065557806391b4ded91461069f576101e4565b806372f702f31461051f57806379ba5097146105695780637b0a47ee1461057357806380faa57d14610591576101e4565b80632e1a7d4d116101875780633fc6df6e116101565780633fc6df6e1461041157806353a47bb71461045b5780635c975abb146104a557806370a08231146104c7576101e4565b80632e1a7d4d1461038d578063386a9525146103bb5780633c6b16ab146103d95780633d18b91214610407576101e4565b806316c38b3c116101c357806316c38b3c146102dd57806318160ddd1461030d578063197621431461032b5780631c1f78eb1461036f576101e4565b80628cc262146101e95780630700037d146102415780631627540c14610299575b600080fd5b61022b600480360360208110156101ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e5565b6040518082815260200191505060405180910390f35b6102836004803603602081101561025757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610903565b6040518082815260200191505060405180910390f35b6102db600480360360208110156102af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061091b565b005b61030b600480360360208110156102f357600080fd5b810190808035151590602001909291905050506109ca565b005b610315610a77565b6040518082815260200191505060405180910390f35b61036d6004803603602081101561034157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a81565b005b610377610acd565b6040518082815260200191505060405180910390f35b6103b9600480360360208110156103a357600080fd5b8101908080359060200190929190505050610aeb565b005b6103c3610dbb565b6040518082815260200191505060405180910390f35b610405600480360360208110156103ef57600080fd5b8101908080359060200190929190505050610dc1565b005b61040f61119f565b005b6104196113dc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610463611402565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104ad611428565b604051808215151515815260200191505060405180910390f35b610509600480360360208110156104dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061143b565b6040518082815260200191505060405180910390f35b610527611484565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105716114aa565b005b61057b6116d0565b6040518082815260200191505060405180910390f35b6105996116d6565b6040518082815260200191505060405180910390f35b6105fb600480360360408110156105c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116f0565b005b61063f6004803603602081101561061357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061185a565b6040518082815260200191505060405180910390f35b61065d611872565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106a7611897565b6040518082815260200191505060405180910390f35b6106e9600480360360208110156106d357600080fd5b810190808035906020019092919050505061189d565b005b6106f3611bd5565b6040518082815260200191505060405180910390f35b6107356004803603602081101561071f57600080fd5b8101908080359060200190929190505050611bdb565b005b61073f611c80565b6040518082815260200191505060405180910390f35b61075d611d0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107a7611d34565b6040518082815260200191505060405180910390f35b6107c5611d3a565b005b6107cf611d8c565b6040518082815260200191505060405180910390f35b60006108fc600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108ee670de0b6b3a76400006108e0610892600c60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610884611c80565b611d9290919063ffffffff16565b600f60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ddc90919063ffffffff16565b611e6290919063ffffffff16565b611eac90919063ffffffff16565b9050919050565b600d6020528060005260406000206000915090505481565b610923611f34565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2281604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6109d2611f34565b600560009054906101000a900460ff16151581151514156109f257610a74565b80600560006101000a81548160ff021916908315150217905550600560009054906101000a900460ff1615610a2957426004819055505b7f8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5600560009054906101000a900460ff16604051808215151515815260200191505060405180910390a15b50565b6000600e54905090565b610a89611f34565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610ae6600954600854611ddc90919063ffffffff16565b905090565b60016003600082825401925050819055506000600354905033610b0c611c80565b600b81905550610b1a6116d6565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610be757610b5d816107e5565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008311610c5d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f43616e6e6f74207769746864726177203000000000000000000000000000000081525060200191505060405180910390fd5b610c7283600e54611d9290919063ffffffff16565b600e81905550610cca83600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d9290919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d5a3384600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fdb9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5846040518082815260200191505060405180910390a2506003548114610db757600080fd5b5050565b60095481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612592602a913960400191505060405180910390fd5b6000610e71611c80565b600b81905550610e7f6116d6565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f4c57610ec2816107e5565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6007544210610f7557610f6a60095483611e6290919063ffffffff16565b600881905550610fd7565b6000610f8c42600754611d9290919063ffffffff16565b90506000610fa560085483611ddc90919063ffffffff16565b9050610fce600954610fc08387611eac90919063ffffffff16565b611e6290919063ffffffff16565b60088190555050505b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561107857600080fd5b505afa15801561108c573d6000803e3d6000fd5b505050506040513d60208110156110a257600080fd5b810190808051906020019092919050505090506110ca60095482611e6290919063ffffffff16565b6008541115611141576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f50726f76696465642072657761726420746f6f2068696768000000000000000081525060200191505060405180910390fd5b42600a8190555061115d60095442611eac90919063ffffffff16565b6007819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d836040518082815260200191505060405180910390a1505050565b600160036000828254019250508190555060006003549050336111c0611c80565b600b819055506111ce6116d6565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461129b57611211816107e5565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156113c9576000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061137a3382600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fdb9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505060035481146113d957600080fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900460ff1681565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611550576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806124d16035913960400191505060405180910390fd5b7fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60085481565b600060075442106116e9576007546116eb565b425b905090565b6116f8611f34565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561179f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806125bc6021913960400191505060405180910390fd5b6117eb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff16611fdb9092919063ffffffff16565b7f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa288282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b600c6020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b600160036000828254019250508190555060006003549050600560009054906101000a900460ff161561191b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180612556603c913960400191505060405180910390fd5b33611924611c80565b600b819055506119326116d6565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146119ff57611975816107e5565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008311611a75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f43616e6e6f74207374616b65203000000000000000000000000000000000000081525060200191505060405180910390fd5b611a8a83600e54611eac90919063ffffffff16565b600e81905550611ae283600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611eac90919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b74333085600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166120ac909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d846040518082815260200191505060405180910390a2506003548114611bd157600080fd5b5050565b600a5481565b611be3611f34565b6007544211611c3d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260588152602001806124796058913960600191505060405180910390fd5b806009819055507ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d36009546040518082815260200191505060405180910390a150565b600080600e541415611c9657600b549050611d0b565b611d08611cf7600e54611ce9670de0b6b3a7640000611cdb600854611ccd600a54611cbf6116d6565b611d9290919063ffffffff16565b611ddc90919063ffffffff16565b611ddc90919063ffffffff16565b611e6290919063ffffffff16565b600b54611eac90919063ffffffff16565b90505b90565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b611d82600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610aeb565b611d8a61119f565b565b60075481565b6000611dd483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506121b2565b905092915050565b600080831415611def5760009050611e5c565b6000828402905082848281611e0057fe5b0414611e57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806125356021913960400191505060405180910390fd5b809150505b92915050565b6000611ea483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612272565b905092915050565b600080828401905083811015611f2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611fd9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612506602f913960400191505060405180910390fd5b565b6120a7838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612338565b505050565b6121ac848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612338565b50505050565b600083831115829061225f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612224578082015181840152602081019050612209565b50505050905090810190601f1680156122515780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808311829061231e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156122e35780820151818401526020810190506122c8565b50505050905090810190601f1680156123105780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161232a57fe5b049050809150509392505050565b6123578273ffffffffffffffffffffffffffffffffffffffff16612465565b61236057600080fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106123af578051825260208201915060208101905060208303925061238c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612411576040519150601f19603f3d011682016040523d82523d6000602084013e612416565b606091505b50915091508161242557600080fd5b60008151111561245f5780806020019051602081101561244457600080fd5b810190808051906020019092919050505061245e57600080fd5b5b50505050565b600080823b90506000811191505091905056fe50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e6572736869704f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e74726163742069732070617573656443616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e747261637443616e6e6f7420776974686472617720746865207374616b696e6720746f6b656ea265627a7a72315820f0082f8e7e3c8aa08ced01d337a2030247cbc3e2f2e231121a6d91f14efbc35b64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x755 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x7C7 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x6BD JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x737 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x8980F11F GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x91B4DED9 EQ PUSH2 0x69F JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x591 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x3FC6DF6E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4C7 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x407 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x16C38B3C GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x19762143 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x36F JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x1627540C EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x91B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x377 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C3 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40F PUSH2 0x119F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x419 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AD PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x143B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x571 PUSH2 0x14AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57B PUSH2 0x16D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x599 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x185A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65D PUSH2 0x1872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A7 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x189D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F3 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x735 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x73F PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75D PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A7 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C5 PUSH2 0x1D3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7CF PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x8FC PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8EE PUSH8 0xDE0B6B3A7640000 PUSH2 0x8E0 PUSH2 0x892 PUSH1 0xC PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x884 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x1D92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1DDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1EAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x923 PUSH2 0x1F34 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x9D2 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x9F2 JUMPI PUSH2 0xA74 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA29 JUMPI TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x8FB6C181EE25A520CF3DD6565006EF91229FCFE5A989566C2A3B8C115570CEC5 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA89 PUSH2 0x1F34 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE6 PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x1DDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP CALLER PUSH2 0xB0C PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xB1A PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBE7 JUMPI PUSH2 0xB5D DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC72 DUP4 PUSH1 0xE SLOAD PUSH2 0x1D92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xCCA DUP4 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD5A CALLER DUP5 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FDB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x3 SLOAD DUP2 EQ PUSH2 0xDB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2592 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE71 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xE7F PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF4C JUMPI PUSH2 0xEC2 DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0xF75 JUMPI PUSH2 0xF6A PUSH1 0x9 SLOAD DUP4 PUSH2 0x1E62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8C TIMESTAMP PUSH1 0x7 SLOAD PUSH2 0x1D92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFA5 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1DDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xFCE PUSH1 0x9 SLOAD PUSH2 0xFC0 DUP4 DUP8 PUSH2 0x1EAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1078 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x108C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x10CA PUSH1 0x9 SLOAD DUP3 PUSH2 0x1E62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD GT ISZERO PUSH2 0x1141 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x115D PUSH1 0x9 SLOAD TIMESTAMP PUSH2 0x1EAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP CALLER PUSH2 0x11C0 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x11CE PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x129B JUMPI PUSH2 0x1211 DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x13C9 JUMPI PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x137A CALLER DUP3 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FDB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x3 SLOAD DUP2 EQ PUSH2 0x13D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1550 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24D1 PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0x16E9 JUMPI PUSH1 0x7 SLOAD PUSH2 0x16EB JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16F8 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x179F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25BC PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17EB PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FDB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x191B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2556 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x1924 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1932 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19FF JUMPI PUSH2 0x1975 DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1A75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A8A DUP4 PUSH1 0xE SLOAD PUSH2 0x1EAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0x1AE2 DUP4 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1EAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1B74 CALLER ADDRESS DUP6 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20AC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x3 SLOAD DUP2 EQ PUSH2 0x1BD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BE3 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0x1C3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x58 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2479 PUSH1 0x58 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD EQ ISZERO PUSH2 0x1C96 JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x1D08 PUSH2 0x1CF7 PUSH1 0xE SLOAD PUSH2 0x1CE9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1CDB PUSH1 0x8 SLOAD PUSH2 0x1CCD PUSH1 0xA SLOAD PUSH2 0x1CBF PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x1D92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1EAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D82 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAEB JUMP JUMPDEST PUSH2 0x1D8A PUSH2 0x119F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x21B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1DEF JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1E00 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1E57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2535 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2272 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1F2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2506 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x20A7 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2338 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x21AC DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2338 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x225F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2224 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2209 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2251 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x231E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22E3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22C8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2310 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x232A JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2357 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2465 JUMP JUMPDEST PUSH2 0x2360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x23AF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x238C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2411 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2416 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x245F JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x245E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID POP PUSH19 0x6576696F757320726577617264732070657269 PUSH16 0x64206D75737420626520636F6D706C65 PUSH21 0x65206265666F7265206368616E67696E6720746865 KECCAK256 PUSH5 0x7572617469 PUSH16 0x6E20666F7220746865206E6577207065 PUSH19 0x696F64596F75206D757374206265206E6F6D69 PUSH15 0x61746564206265666F726520796F75 KECCAK256 PUSH4 0x616E2061 PUSH4 0x63657074 KECCAK256 PUSH16 0x776E6572736869704F6E6C7920746865 KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH16 0x776E6572206D617920706572666F726D KECCAK256 PUSH21 0x68697320616374696F6E536166654D6174683A206D PUSH22 0x6C7469706C69636174696F6E206F766572666C6F7754 PUSH9 0x697320616374696F6E KECCAK256 PUSH4 0x616E6E6F PUSH21 0x20626520706572666F726D6564207768696C652074 PUSH9 0x6520636F6E74726163 PUSH21 0x2069732070617573656443616C6C6572206973206E PUSH16 0x74205265776172647344697374726962 PUSH22 0x74696F6E20636F6E747261637443616E6E6F74207769 PUSH21 0x686472617720746865207374616B696E6720746F6B PUSH6 0x6EA265627A7A PUSH19 0x315820F0082F8E7E3C8AA08CED01D337A20302 SELFBALANCE 0xCB 0xC3 0xE2 CALLCODE 0xE2 BALANCE SLT BYTE PUSH14 0x91F14EFBC35B64736F6C63430005 GT STOP ORIGIN ",
							"sourceMap": "352:6079:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;352:6079:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:198;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2189:198:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;908:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;908:42:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;357:138:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;357:138:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;594:472:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;594:472:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;1467:93:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;458:140:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;458:140:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;2395:121:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2965:357;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2965:357:9;;;;;;;;;;;;;;;;;:::i;:::-;;718:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3806:1083;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3806:1083:9;;;;;;;;;;;;;;;;;:::i;:::-;;3330:307;;;:::i;:::-;;201:34:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;134:29:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;192:18:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1568:112:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1568:112:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;611:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;501:266:3;;;:::i;:::-;;682:29:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1688:155;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5004:302;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5004:302:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;844:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;844:57:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;108:20:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;161:25:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2578:379:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2578:379:9;;;;;;;;;;;;;;;;;:::i;:::-;;764:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5314:360;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5314:360:9;;;;;;;;;;;;;;;;;:::i;:::-;;1851:330;;;:::i;:::-;;;;;;;;;;;;;;;;;;;578:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;800:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3645:97;;;:::i;:::-;;644:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2189:198;2243:7;2270:109;2362:7;:16;2370:7;2362:16;;;;;;;;;;;;;;;;2270:87;2352:4;2270:77;2293:53;2314:22;:31;2337:7;2314:31;;;;;;;;;;;;;;;;2293:16;:14;:16::i;:::-;:20;;:53;;;;:::i;:::-;2270:9;:18;2280:7;2270:18;;;;;;;;;;;;;;;;:22;;:77;;;;:::i;:::-;:81;;:87;;;;:::i;:::-;:91;;:109;;;;:::i;:::-;2263:116;;2189:198;;;:::o;908:42::-;;;;;;;;;;;;;;;;;:::o;357:138:3:-;802:12;:10;:12::i;:::-;445:6;428:14;;:23;;;;;;;;;;;;;;;;;;466:22;481:6;466:22;;;;;;;;;;;;;;;;;;;;;;357:138;:::o;594:472:4:-;802:12:3;:10;:12::i;:::-;745:6:4;;;;;;;;;;;734:17;;:7;:17;;;730:54;;;767:7;;730:54;836:7;827:6;;:16;;;;;;;;;;;;;;;;;;909:6;;;;;;;;;;;905:56;;;947:3;931:13;:19;;;;905:56;1039:20;1052:6;;;;;;;;;;;1039:20;;;;;;;;;;;;;;;;;;;;;;824:1:3;594:472:4;:::o;1467:93:9:-;1513:7;1540:12;;1533:19;;1467:93;:::o;458:140:6:-;802:12:3;:10;:12::i;:::-;571:20:6;549:19;;:42;;;;;;;;;;;;;;;;;;458:140;:::o;2395:121:9:-;2450:7;2477:31;2492:15;;2477:10;;:14;;:31;;;;:::i;:::-;2470:38;;2395:121;:::o;2965:357::-;1010:1:5;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;3032:10:9;5800:16;:14;:16::i;:::-;5777:20;:39;;;;5844:26;:24;:26::i;:::-;5827:14;:43;;;;5904:1;5885:21;;:7;:21;;;5881:157;;5942:15;5949:7;5942:6;:15::i;:::-;5923:7;:16;5931:7;5923:16;;;;;;;;;;;;;;;:34;;;;6006:20;;5972:22;:31;5995:7;5972:31;;;;;;;;;;;;;;;:54;;;;5881:157;3072:1;3063:6;:10;3055:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3121:24;3138:6;3121:12;;:16;;:24;;;;:::i;:::-;3106:12;:39;;;;3180:33;3206:6;3180:9;:21;3190:10;3180:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;3156:9;:21;3166:10;3156:21;;;;;;;;;;;;;;;:57;;;;3224:45;3250:10;3262:6;3224:12;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;3295:10;3285:29;;;3307:6;3285:29;;;;;;;;;;;;;;;;;;1067:1:5;1102:13;;1086:12;:29;1078:38;;;;;;2965:357:9;;:::o;718:39::-;;;;:::o;3806:1083::-;368:19:6;;;;;;;;;;;354:33;;:10;:33;;;346:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3904:1:9;5800:16;:14;:16::i;:::-;5777:20;:39;;;;5844:26;:24;:26::i;:::-;5827:14;:43;;;;5904:1;5885:21;;:7;:21;;;5881:157;;5942:15;5949:7;5942:6;:15::i;:::-;5923:7;:16;5931:7;5923:16;;;;;;;;;;;;;;;:34;;;;6006:20;;5972:22;:31;5995:7;5972:31;;;;;;;;;;;;;;;:54;;;;5881:157;3942:12;;3923:15;:31;3919:318;;3984:27;3995:15;;3984:6;:10;;:27;;;;:::i;:::-;3971:10;:40;;;;3919:318;;;4044:17;4064:33;4081:15;4064:12;;:16;;:33;;;;:::i;:::-;4044:53;;4112:16;4131:25;4145:10;;4131:9;:13;;:25;;;;:::i;:::-;4112:44;;4184:41;4209:15;;4184:20;4195:8;4184:6;:10;;:20;;;;:::i;:::-;:24;;:41;;;;:::i;:::-;4171:10;:54;;;;3919:318;;;4597:12;4612;;;;;;;;;;;:22;;;4643:4;4612:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4612:37:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4612:37:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4612:37:9;;;;;;;;;;;;;;;;4597:52;;4682:28;4694:15;;4682:7;:11;;:28;;;;:::i;:::-;4668:10;;:42;;4660:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4769:15;4752:14;:32;;;;4810:36;4830:15;;4810;:19;;:36;;;;:::i;:::-;4795:12;:51;;;;4862:19;4874:6;4862:19;;;;;;;;;;;;;;;;;;6048:1;444::6;3806:1083:9;:::o;3330:307::-;1010:1:5;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;3384:10:9;5800:16;:14;:16::i;:::-;5777:20;:39;;;;5844:26;:24;:26::i;:::-;5827:14;:43;;;;5904:1;5885:21;;:7;:21;;;5881:157;;5942:15;5949:7;5942:6;:15::i;:::-;5923:7;:16;5931:7;5923:16;;;;;;;;;;;;;;;:34;;;;6006:20;;5972:22;:31;5995:7;5972:31;;;;;;;;;;;;;;;:54;;;;5881:157;3407:14;3424:7;:19;3432:10;3424:19;;;;;;;;;;;;;;;;3407:36;;3467:1;3458:6;:10;3454:176;;;3507:1;3485:7;:19;3493:10;3485:19;;;;;;;;;;;;;;;:23;;;;3523:45;3549:10;3561:6;3523:12;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;3599:10;3588:30;;;3611:6;3588:30;;;;;;;;;;;;;;;;;;3454:176;6048:1;1067::5;1102:13;;1086:12;:29;1078:38;;;;;;3330:307:9;:::o;201:34:6:-;;;;;;;;;;;;;:::o;134:29:3:-;;;;;;;;;;;;;:::o;192:18:4:-;;;;;;;;;;;;;:::o;1568:112:9:-;1627:7;1654:9;:18;1664:7;1654:18;;;;;;;;;;;;;;;;1647:25;;1568:112;;;:::o;611:26::-;;;;;;;;;;;;;:::o;501:266:3:-;569:14;;;;;;;;;;;555:28;;:10;:28;;;547:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;656:35;669:5;;;;;;;;;;;676:14;;;;;;;;;;;656:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:14;;;;;;;;;;;701:5;;:22;;;;;;;;;;;;;;;;;;758:1;733:14;;:27;;;;;;;;;;;;;;;;;;501:266::o;682:29:9:-;;;;:::o;1688:155::-;1745:7;1790:12;;1772:15;:30;:63;;1823:12;;1772:63;;;1805:15;1772:63;1765:70;;1688:155;:::o;5004:302::-;802:12:3;:10;:12::i;:::-;5131::9;;;;;;;;;;;5107:37;;:12;:37;;;;5099:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5193:53;5227:5;;;;;;;;;;;5234:11;5200:12;5193:33;;;;:53;;;;;:::i;:::-;5262:36;5272:12;5286:11;5262:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;5004:302;;:::o;844:57::-;;;;;;;;;;;;;;;;;:::o;108:20:3:-;;;;;;;;;;;;;:::o;161:25:4:-;;;;:::o;2578:379:9:-;1010:1:5;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;1150:6:4;;;;;;;;;;;1149:7;1141:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2654:10:9;5800:16;:14;:16::i;:::-;5777:20;:39;;;;5844:26;:24;:26::i;:::-;5827:14;:43;;;;5904:1;5885:21;;:7;:21;;;5881:157;;5942:15;5949:7;5942:6;:15::i;:::-;5923:7;:16;5931:7;5923:16;;;;;;;;;;;;;;;:34;;;;6006:20;;5972:22;:31;5995:7;5972:31;;;;;;;;;;;;;;;:54;;;;5881:157;2694:1;2685:6;:10;2677:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2740:24;2757:6;2740:12;;:16;;:24;;;;:::i;:::-;2725:12;:39;;;;2799:33;2825:6;2799:9;:21;2809:10;2799:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;2775:9;:21;2785:10;2775:21;;;;;;;;;;;;;;;:57;;;;2843:64;2873:10;2893:4;2900:6;2843:12;;;;;;;;;;;:29;;;;:64;;;;;;:::i;:::-;2930:10;2923:26;;;2942:6;2923:26;;;;;;;;;;;;;;;;;;1231:1:4;1102:13:5;;1086:12;:29;1078:38;;;;;;2578:379:9;;:::o;764:29::-;;;;:::o;5314:360::-;802:12:3;:10;:12::i;:::-;5438::9;;5420:15;:30;5398:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5595:16;5577:15;:34;;;;5627:39;5650:15;;5627:39;;;;;;;;;;;;;;;;;;5314:360;:::o;1851:330::-;1898:7;1938:1;1922:12;;:17;1918:77;;;1963:20;;1956:27;;;;1918:77;2025:148;2068:90;2145:12;;2068:72;2135:4;2068:62;2119:10;;2068:46;2099:14;;2068:26;:24;:26::i;:::-;:30;;:46;;;;:::i;:::-;:50;;:62;;;;:::i;:::-;:66;;:72;;;;:::i;:::-;:76;;:90;;;;:::i;:::-;2025:20;;:24;;:148;;;;:::i;:::-;2005:168;;1851:330;;:::o;578:26::-;;;;;;;;;;;;;:::o;800:35::-;;;;:::o;3645:97::-;3681:31;3690:9;:21;3700:10;3690:21;;;;;;;;;;;;;;;;3681:8;:31::i;:::-;3723:11;:9;:11::i;:::-;3645:97::o;644:31::-;;;;:::o;1288:134:8:-;1346:7;1372:43;1376:1;1379;1372:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1365:50;;1288:134;;;;:::o;2147:459::-;2205:7;2451:1;2446;:6;2442:45;;;2475:1;2468:8;;;;2442:45;2497:9;2513:1;2509;:5;2497:17;;2541:1;2536;2532;:5;;;;;;:10;2524:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2598:1;2591:8;;;2147:459;;;;;:::o;3068:130::-;3126:7;3152:39;3156:1;3159;3152:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3145:46;;3068:130;;;;:::o;841:176::-;899:7;918:9;934:1;930;:5;918:17;;958:1;953;:6;;945:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1009:1;1002:8;;;841:176;;;;:::o;838:131:3:-;905:5;;;;;;;;;;;891:19;;:10;:19;;;883:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:131::o;643:174:7:-;725:85;744:5;774;:14;;;:23;;;;799:2;803:5;751:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;751:58:7;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;751:58:7;725:18;:85::i;:::-;643:174;;;:::o;823:202::-;923:95;942:5;972;:18;;;:27;;;;1001:4;1007:2;1011:5;949:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;949:68:7;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;949:68:7;923:18;:95::i;:::-;823:202;;;;:::o;1713:187:8:-;1799:7;1831:1;1826;:6;;1834:12;1818:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1818:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:9;1873:1;1869;:5;1857:17;;1892:1;1885:8;;;1713:187;;;;;:::o;3680:272::-;3766:7;3797:1;3793;:5;3800:12;3785:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3785:28:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:9;3839:1;3835;:5;;;;;;3823:17;;3944:1;3937:8;;;3680:272;;;;;:::o;2470:869:7:-;3013:27;3021:5;3013:25;;;:27::i;:::-;3005:36;;;;;;3112:12;3126:23;3161:5;3153:19;;3173:4;3153:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3153:25:7;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3111:67:7;;;;3196:7;3188:16;;;;;;3239:1;3219:10;:17;:21;3215:118;;;3302:10;3291:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3291:30:7;;;;;;;;;;;;;;;;3283:39;;;;;;3215:118;2470:869;;;;:::o;463:616:0:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1949000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "infinite",
								"balanceOf(address)": "1307",
								"earned(address)": "infinite",
								"exit()": "infinite",
								"getReward()": "infinite",
								"getRewardForDuration()": "infinite",
								"lastPauseTime()": "1116",
								"lastTimeRewardApplicable()": "1958",
								"lastUpdateTime()": "1072",
								"nominateNewOwner(address)": "infinite",
								"nominatedOwner()": "1120",
								"notifyRewardAmount(uint256)": "infinite",
								"owner()": "1142",
								"paused()": "1142",
								"periodFinish()": "1115",
								"recoverERC20(address,uint256)": "infinite",
								"rewardPerToken()": "infinite",
								"rewardPerTokenStored()": "1071",
								"rewardRate()": "1095",
								"rewards(address)": "1238",
								"rewardsDistribution()": "1098",
								"rewardsDuration()": "1073",
								"rewardsToken()": "1147",
								"setPaused(bool)": "infinite",
								"setRewardsDistribution(address)": "infinite",
								"setRewardsDuration(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakingToken()": "1099",
								"totalSupply()": "1081",
								"userRewardPerTokenPaid(address)": "1236",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 352,
									"end": 6431,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 352,
									"end": 6431,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 352,
									"end": 6431,
									"name": "MSTORE"
								},
								{
									"begin": 674,
									"end": 675,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 644,
									"end": 675,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 644,
									"end": 675,
									"name": "SSTORE"
								},
								{
									"begin": 710,
									"end": 711,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 682,
									"end": 711,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 682,
									"end": 711,
									"name": "SSTORE"
								},
								{
									"begin": 751,
									"end": 757,
									"name": "PUSH",
									"value": "93A80"
								},
								{
									"begin": 718,
									"end": 757,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 718,
									"end": 757,
									"name": "SSTORE"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "MLOAD"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "CODESIZE"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SUB"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "DUP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "DUP4"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "CODECOPY"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "DUP2"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "DUP2"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "ADD"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 16,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 17,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "DUP2"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "ADD"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "DUP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "DUP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "MLOAD"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "ADD"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP3"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP2"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "DUP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "MLOAD"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "ADD"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP3"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP2"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "DUP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "MLOAD"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "ADD"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP3"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP2"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "DUP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "MLOAD"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "ADD"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP3"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP2"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "SWAP1"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "POP"
								},
								{
									"begin": 1255,
									"end": 1261,
									"name": "DUP4"
								},
								{
									"begin": 241,
									"end": 242,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 223,
									"end": 243,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 223,
									"end": 243,
									"name": "AND"
								},
								{
									"begin": 223,
									"end": 229,
									"name": "DUP2"
								},
								{
									"begin": 223,
									"end": 243,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 223,
									"end": 243,
									"name": "AND"
								},
								{
									"begin": 223,
									"end": 243,
									"name": "EQ"
								},
								{
									"begin": 223,
									"end": 243,
									"name": "ISZERO"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "JUMPI"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "MLOAD"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP2"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "MSTORE"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "ADD"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP1"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP1"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "ADD"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP3"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP2"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "SUB"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP3"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "MSTORE"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "19"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP2"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "MSTORE"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "ADD"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP1"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "4F776E657220616464726573732063616E6E6F74206265203000000000000000"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP2"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "MSTORE"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "POP"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "ADD"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "SWAP2"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "POP"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "POP"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "MLOAD"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "DUP1"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "SWAP2"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "SUB"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "SWAP1"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "REVERT"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 215,
									"end": 273,
									"name": "JUMPDEST"
								},
								{
									"begin": 291,
									"end": 297,
									"name": "DUP1"
								},
								{
									"begin": 283,
									"end": 288,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 288,
									"name": "DUP1"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "EXP"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "DUP2"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "SLOAD"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "DUP2"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "MUL"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "NOT"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "AND"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "SWAP1"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "DUP4"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "AND"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "MUL"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "OR"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "SWAP1"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "SSTORE"
								},
								{
									"begin": 283,
									"end": 297,
									"name": "POP"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
								},
								{
									"begin": 333,
									"end": 334,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 337,
									"end": 343,
									"name": "DUP3"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "MLOAD"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "DUP1"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "DUP4"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "AND"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "AND"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "DUP2"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "MSTORE"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "ADD"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "DUP3"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "AND"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "AND"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "DUP2"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "MSTORE"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "ADD"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "SWAP3"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "POP"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "POP"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "POP"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "MLOAD"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "DUP1"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "SWAP2"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "SUB"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "SWAP1"
								},
								{
									"begin": 312,
									"end": 344,
									"name": "LOG1"
								},
								{
									"begin": 170,
									"end": 351,
									"name": "POP"
								},
								{
									"begin": 576,
									"end": 577,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 560,
									"end": 573,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 560,
									"end": 577,
									"name": "DUP2"
								},
								{
									"begin": 560,
									"end": 577,
									"name": "SWAP1"
								},
								{
									"begin": 560,
									"end": 577,
									"name": "SSTORE"
								},
								{
									"begin": 560,
									"end": 577,
									"name": "POP"
								},
								{
									"begin": 354,
									"end": 355,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 337,
									"end": 356,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 337,
									"end": 356,
									"name": "AND"
								},
								{
									"begin": 337,
									"end": 342,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 337,
									"end": 342,
									"name": "DUP1"
								},
								{
									"begin": 337,
									"end": 342,
									"name": "SWAP1"
								},
								{
									"begin": 337,
									"end": 342,
									"name": "SLOAD"
								},
								{
									"begin": 337,
									"end": 342,
									"name": "SWAP1"
								},
								{
									"begin": 337,
									"end": 342,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 337,
									"end": 342,
									"name": "EXP"
								},
								{
									"begin": 337,
									"end": 342,
									"name": "SWAP1"
								},
								{
									"begin": 337,
									"end": 342,
									"name": "DIV"
								},
								{
									"begin": 337,
									"end": 342,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 337,
									"end": 342,
									"name": "AND"
								},
								{
									"begin": 337,
									"end": 356,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 337,
									"end": 356,
									"name": "AND"
								},
								{
									"begin": 337,
									"end": 356,
									"name": "EQ"
								},
								{
									"begin": 337,
									"end": 356,
									"name": "ISZERO"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "JUMPI"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "MLOAD"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "DUP2"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "MSTORE"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "ADD"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "DUP1"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "DUP1"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "ADD"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "DUP3"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "DUP2"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "SUB"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "DUP3"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "MSTORE"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "PUSH",
									"value": "11"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "DUP2"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "MSTORE"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "ADD"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "DUP1"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "PUSH",
									"value": "4F776E6572206D75737420626520736574000000000000000000000000000000"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "DUP2"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "MSTORE"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "POP"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "ADD"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "SWAP2"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "POP"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "POP"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "MLOAD"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "DUP1"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "SWAP2"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "SUB"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "SWAP1"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "REVERT"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 329,
									"end": 378,
									"name": "JUMPDEST"
								},
								{
									"begin": 1296,
									"end": 1309,
									"name": "DUP2"
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "EXP"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "DUP2"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "SLOAD"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "DUP2"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "MUL"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "NOT"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "AND"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "SWAP1"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "DUP4"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "AND"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "MUL"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "OR"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "SWAP1"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "SSTORE"
								},
								{
									"begin": 1274,
									"end": 1310,
									"name": "POP"
								},
								{
									"begin": 1343,
									"end": 1356,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "EXP"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "DUP2"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "SLOAD"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "DUP2"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "MUL"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "NOT"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "AND"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "DUP4"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "AND"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "MUL"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "OR"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "SSTORE"
								},
								{
									"begin": 1321,
									"end": 1357,
									"name": "POP"
								},
								{
									"begin": 1390,
									"end": 1410,
									"name": "DUP3"
								},
								{
									"begin": 1368,
									"end": 1387,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1368,
									"end": 1387,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "EXP"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "DUP2"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "SLOAD"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "DUP2"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "MUL"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "NOT"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "AND"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "SWAP1"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "DUP4"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "AND"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "MUL"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "OR"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "SWAP1"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "SSTORE"
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1418,
									"name": "POP"
								},
								{
									"begin": 352,
									"end": 6431,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 352,
									"end": 6431,
									"name": "DUP1"
								},
								{
									"begin": 352,
									"end": 6431,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 352,
									"end": 6431,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 352,
									"end": 6431,
									"name": "CODECOPY"
								},
								{
									"begin": 352,
									"end": 6431,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 352,
									"end": 6431,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f0082f8e7e3c8aa08ced01d337a2030247cbc3e2f2e231121a6d91f14efbc35b64736f6c63430005110032",
									".code": [
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "MSTORE"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "LT"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "SHR"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "72F702F3"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "GT"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "A694FC3A"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "GT"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "D1AF0C7D"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "GT"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "D1AF0C7D"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "DF136D65"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "E9FAD8EE"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "EBE2B12B"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMP"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "A694FC3A"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "C8F33C91"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "CC1A378F"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "CD3DAF9D"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMP"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "8980F11F"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "GT"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "8980F11F"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "8B876347"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "91B4DED9"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMP"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "72F702F3"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "79BA5097"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "7B0A47EE"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "80FAA57D"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMP"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "2E1A7D4D"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "GT"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "3FC6DF6E"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "GT"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "3FC6DF6E"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "53A47BB7"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMP"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "2E1A7D4D"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "386A9525"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "3C6B16AB"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "3D18B912"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMP"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "16C38B3C"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "GT"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "16C38B3C"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "19762143"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "1C1F78EB"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMP"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "8CC262"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "700037D"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "1627540C"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "EQ"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPI"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 6431,
											"name": "REVERT"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "DUP2"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "ADD"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "AND"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "ADD"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SWAP3"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SWAP2"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "MLOAD"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "DUP3"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "DUP2"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "MSTORE"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "ADD"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SWAP2"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "MLOAD"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SWAP2"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SUB"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "RETURN"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "JUMPDEST"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "DUP1"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "DUP2"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "ADD"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "DUP1"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "DUP1"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "AND"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "ADD"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SWAP3"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SWAP2"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "POP"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "POP"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "POP"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "JUMPDEST"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "MLOAD"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "DUP1"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "DUP3"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "DUP2"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "MSTORE"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "ADD"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SWAP2"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "POP"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "POP"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "MLOAD"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "DUP1"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SWAP2"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SUB"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "RETURN"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "AND"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SWAP3"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SWAP2"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "STOP"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "JUMPDEST"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "DUP1"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "DUP2"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "ADD"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "SWAP1"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "DUP1"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "DUP1"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "ISZERO"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "ISZERO"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "SWAP1"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "ADD"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "SWAP1"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "SWAP3"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "SWAP2"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "SWAP1"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "POP"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "POP"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "POP"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "JUMPDEST"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "STOP"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "JUMPDEST"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "JUMPDEST"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "MLOAD"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "DUP3"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "DUP2"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "MSTORE"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "ADD"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "SWAP2"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "MLOAD"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "SWAP2"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "SUB"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "RETURN"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "DUP1"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "DUP2"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "ADD"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "DUP1"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "DUP1"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "AND"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "ADD"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "SWAP3"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "SWAP2"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "POP"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "POP"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "POP"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "STOP"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "JUMPDEST"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "JUMPDEST"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "MLOAD"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "DUP1"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "DUP3"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "DUP2"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "MSTORE"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "ADD"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "SWAP2"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "POP"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "POP"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "MLOAD"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "DUP1"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "SWAP2"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "SUB"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "SWAP1"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "RETURN"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "JUMPDEST"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "DUP1"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "DUP2"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "ADD"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "SWAP1"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "DUP1"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "DUP1"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "SWAP1"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "ADD"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "SWAP1"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "SWAP3"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "SWAP2"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "SWAP1"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "POP"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "POP"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "POP"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "JUMPDEST"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "STOP"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "JUMPDEST"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "JUMPDEST"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "MLOAD"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "DUP1"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "DUP3"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "DUP2"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "MSTORE"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "ADD"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "SWAP2"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "POP"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "POP"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "MLOAD"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "DUP1"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "SWAP2"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "SUB"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "SWAP1"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "RETURN"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "JUMPDEST"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "DUP1"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "DUP2"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "ADD"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "SWAP1"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "DUP1"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "DUP1"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "SWAP1"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "ADD"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "SWAP1"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "SWAP3"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "SWAP2"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "SWAP1"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "JUMPDEST"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "STOP"
										},
										{
											"begin": 3330,
											"end": 3637,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 3330,
											"end": 3637,
											"name": "JUMPDEST"
										},
										{
											"begin": 3330,
											"end": 3637,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3330,
											"end": 3637,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3330,
											"end": 3637,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3330,
											"end": 3637,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 3330,
											"end": 3637,
											"name": "JUMPDEST"
										},
										{
											"begin": 3330,
											"end": 3637,
											"name": "STOP"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "AND"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "AND"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "RETURN"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "JUMPDEST"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "JUMPDEST"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "MLOAD"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "DUP1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "DUP3"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "AND"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "AND"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "DUP2"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "MSTORE"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "ADD"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SWAP2"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "MLOAD"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "DUP1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SWAP2"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SUB"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SWAP1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "RETURN"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "DUP3"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "ISZERO"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "ISZERO"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "ISZERO"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "ISZERO"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "SWAP2"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "SWAP2"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "SUB"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "RETURN"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "JUMPDEST"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "DUP1"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "DUP2"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "ADD"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SWAP1"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "DUP1"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "DUP1"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "AND"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SWAP1"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "ADD"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SWAP1"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SWAP3"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SWAP2"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SWAP1"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "POP"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "POP"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "POP"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "JUMPDEST"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "MLOAD"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "DUP1"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "DUP3"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "DUP2"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "MSTORE"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "ADD"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SWAP2"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "POP"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "POP"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "MLOAD"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "DUP1"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SWAP2"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SUB"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SWAP1"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "RETURN"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "MLOAD"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "DUP3"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "AND"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "AND"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "DUP2"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "MSTORE"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "ADD"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "SWAP2"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "MLOAD"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "SWAP2"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "SUB"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "RETURN"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "JUMPDEST"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "JUMPDEST"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "STOP"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "JUMPDEST"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "JUMPDEST"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "MLOAD"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "DUP1"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "DUP3"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "DUP2"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "MSTORE"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "ADD"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "SWAP2"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "POP"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "POP"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "MLOAD"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "DUP1"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "SWAP2"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "SUB"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "SWAP1"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "RETURN"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "JUMPDEST"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "JUMPDEST"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "MLOAD"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "DUP1"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "DUP3"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "DUP2"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "MSTORE"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "ADD"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "SWAP2"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "POP"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "POP"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "MLOAD"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "DUP1"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "SWAP2"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "SUB"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "SWAP1"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "RETURN"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "JUMPDEST"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "DUP1"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "DUP2"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "ADD"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "SWAP1"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "DUP1"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "DUP1"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "AND"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "SWAP1"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "ADD"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "SWAP1"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "SWAP3"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "SWAP2"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "SWAP1"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "DUP1"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "SWAP1"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "ADD"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "SWAP1"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "SWAP3"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "SWAP2"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "SWAP1"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "POP"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "POP"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "POP"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "JUMPDEST"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "STOP"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "JUMPDEST"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "DUP1"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "DUP2"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "ADD"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SWAP1"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "DUP1"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "DUP1"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "AND"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SWAP1"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "ADD"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SWAP1"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SWAP3"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SWAP2"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SWAP1"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "POP"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "POP"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "POP"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "JUMPDEST"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "MLOAD"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "DUP1"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "DUP3"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "DUP2"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "MSTORE"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "ADD"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SWAP2"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "POP"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "POP"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "MLOAD"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "DUP1"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SWAP2"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SUB"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SWAP1"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "RETURN"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "JUMPDEST"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "JUMPDEST"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "MLOAD"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DUP3"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "AND"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "AND"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DUP2"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "MSTORE"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "ADD"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SWAP2"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "POP"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "POP"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "MLOAD"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SWAP2"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SUB"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "RETURN"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPDEST"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPDEST"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP3"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP2"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "ADD"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SWAP2"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SWAP2"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SUB"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SWAP1"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "RETURN"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "DUP1"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "DUP2"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "ADD"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "DUP1"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "DUP1"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "ADD"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "SWAP3"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "SWAP2"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "STOP"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "JUMPDEST"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "JUMPDEST"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "MLOAD"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "DUP1"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "DUP3"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "DUP2"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "MSTORE"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "ADD"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "SWAP2"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "POP"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "POP"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "MLOAD"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "DUP1"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "SWAP2"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "SUB"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "SWAP1"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "RETURN"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "JUMPDEST"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "DUP1"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "DUP2"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "ADD"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "SWAP1"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "DUP1"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "DUP1"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "SWAP1"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "ADD"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "SWAP1"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "SWAP3"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "SWAP2"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "SWAP1"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "POP"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "POP"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "POP"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "JUMPDEST"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "STOP"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "MLOAD"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "DUP3"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "MSTORE"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "SWAP2"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "MLOAD"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "SWAP2"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "SUB"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "RETURN"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "MLOAD"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "DUP1"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "DUP3"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "DUP2"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "MSTORE"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "ADD"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "SWAP2"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "POP"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "POP"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "MLOAD"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "DUP1"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "SWAP2"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "SUB"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "RETURN"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "JUMPDEST"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "JUMPDEST"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "MLOAD"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "DUP1"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "DUP3"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "DUP2"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "MSTORE"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "ADD"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "SWAP2"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "POP"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "POP"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "MLOAD"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "DUP1"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "SWAP2"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "SUB"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "SWAP1"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "RETURN"
										},
										{
											"begin": 3645,
											"end": 3742,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 3645,
											"end": 3742,
											"name": "JUMPDEST"
										},
										{
											"begin": 3645,
											"end": 3742,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 3645,
											"end": 3742,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 3645,
											"end": 3742,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3742,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 3645,
											"end": 3742,
											"name": "JUMPDEST"
										},
										{
											"begin": 3645,
											"end": 3742,
											"name": "STOP"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "MSTORE"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "RETURN"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 2243,
											"end": 2250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2379,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 2362,
											"end": 2369,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "DUP5"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "AND"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "AND"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "SWAP1"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "KECCAK256"
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "SLOAD"
										},
										{
											"begin": 2270,
											"end": 2357,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 2352,
											"end": 2356,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2270,
											"end": 2347,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 2314,
											"end": 2336,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2344,
											"name": "DUP10"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "AND"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "AND"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "DUP2"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "MSTORE"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "ADD"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "SWAP1"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "DUP2"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "MSTORE"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "ADD"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "KECCAK256"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "SLOAD"
										},
										{
											"begin": 2293,
											"end": 2309,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 2293,
											"end": 2307,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2293,
											"end": 2309,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2293,
											"end": 2309,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 2293,
											"end": 2309,
											"name": "JUMPDEST"
										},
										{
											"begin": 2293,
											"end": 2313,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2293,
											"end": 2313,
											"name": "SWAP1"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "SWAP2"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "SWAP1"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "AND"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "JUMPDEST"
										},
										{
											"begin": 2270,
											"end": 2279,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP10"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "AND"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "AND"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "DUP2"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "MSTORE"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "ADD"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "DUP2"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "MSTORE"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "ADD"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "KECCAK256"
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "SLOAD"
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2347,
											"name": "SWAP2"
										},
										{
											"begin": 2270,
											"end": 2347,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2347,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2347,
											"name": "AND"
										},
										{
											"begin": 2270,
											"end": 2347,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2347,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 2270,
											"end": 2347,
											"name": "JUMPDEST"
										},
										{
											"begin": 2270,
											"end": 2351,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 2270,
											"end": 2351,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2357,
											"name": "SWAP2"
										},
										{
											"begin": 2270,
											"end": 2357,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2357,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2357,
											"name": "AND"
										},
										{
											"begin": 2270,
											"end": 2357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2357,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 2270,
											"end": 2357,
											"name": "JUMPDEST"
										},
										{
											"begin": 2270,
											"end": 2361,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2270,
											"end": 2361,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2379,
											"name": "SWAP2"
										},
										{
											"begin": 2270,
											"end": 2379,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2379,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2379,
											"name": "AND"
										},
										{
											"begin": 2270,
											"end": 2379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2379,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 2270,
											"end": 2379,
											"name": "JUMPDEST"
										},
										{
											"begin": 2263,
											"end": 2379,
											"name": "SWAP1"
										},
										{
											"begin": 2263,
											"end": 2379,
											"name": "POP"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SWAP2"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2189,
											"end": 2387,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "JUMPDEST"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "MSTORE"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "DUP1"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "MSTORE"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "KECCAK256"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SWAP2"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "POP"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "POP"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "SLOAD"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "DUP2"
										},
										{
											"begin": 908,
											"end": 950,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 445,
											"end": 451,
											"name": "DUP1"
										},
										{
											"begin": 428,
											"end": 442,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 428,
											"end": 442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "EXP"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "DUP2"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "SLOAD"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "DUP2"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "MUL"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "NOT"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "AND"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "SWAP1"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "DUP4"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "AND"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "MUL"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "OR"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "SWAP1"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "SSTORE"
										},
										{
											"begin": 428,
											"end": 451,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH",
											"value": "906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22"
										},
										{
											"begin": 481,
											"end": 487,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "MLOAD"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "DUP3"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "AND"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "AND"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "MSTORE"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "ADD"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "SWAP2"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "MLOAD"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "SWAP2"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "SUB"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "SWAP1"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "LOG1"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 495,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "SLOAD"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "EXP"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DIV"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "AND"
										},
										{
											"begin": 734,
											"end": 751,
											"name": "ISZERO"
										},
										{
											"begin": 734,
											"end": 751,
											"name": "ISZERO"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "DUP2"
										},
										{
											"begin": 734,
											"end": 751,
											"name": "ISZERO"
										},
										{
											"begin": 734,
											"end": 751,
											"name": "ISZERO"
										},
										{
											"begin": 734,
											"end": 751,
											"name": "EQ"
										},
										{
											"begin": 730,
											"end": 784,
											"name": "ISZERO"
										},
										{
											"begin": 730,
											"end": 784,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 730,
											"end": 784,
											"name": "JUMPI"
										},
										{
											"begin": 767,
											"end": 774,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 767,
											"end": 774,
											"name": "JUMP"
										},
										{
											"begin": 730,
											"end": 784,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 730,
											"end": 784,
											"name": "JUMPDEST"
										},
										{
											"begin": 836,
											"end": 843,
											"name": "DUP1"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "EXP"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "DUP2"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "SLOAD"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "DUP2"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "MUL"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "NOT"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "AND"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "SWAP1"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "DUP4"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "ISZERO"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "ISZERO"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "MUL"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "OR"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "SWAP1"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "SSTORE"
										},
										{
											"begin": 827,
											"end": 843,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "SLOAD"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "EXP"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DIV"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "AND"
										},
										{
											"begin": 905,
											"end": 961,
											"name": "ISZERO"
										},
										{
											"begin": 905,
											"end": 961,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 905,
											"end": 961,
											"name": "JUMPI"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "TIMESTAMP"
										},
										{
											"begin": 931,
											"end": 944,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 931,
											"end": 950,
											"name": "DUP2"
										},
										{
											"begin": 931,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 931,
											"end": 950,
											"name": "SSTORE"
										},
										{
											"begin": 931,
											"end": 950,
											"name": "POP"
										},
										{
											"begin": 905,
											"end": 961,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 905,
											"end": 961,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "PUSH",
											"value": "8FB6C181EE25A520CF3DD6565006EF91229FCFE5A989566C2A3B8C115570CEC5"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "SLOAD"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "EXP"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DIV"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "DUP3"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "ISZERO"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "ISZERO"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "ISZERO"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "ISZERO"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "MSTORE"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "ADD"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "SUB"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1059,
											"name": "LOG1"
										},
										{
											"begin": 824,
											"end": 825,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 824,
											"end": 825,
											"name": "JUMPDEST"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "POP"
										},
										{
											"begin": 594,
											"end": 1066,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "JUMPDEST"
										},
										{
											"begin": 1513,
											"end": 1520,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SLOAD"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1467,
											"end": 1560,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 591,
											"name": "DUP1"
										},
										{
											"begin": 549,
											"end": 568,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 549,
											"end": 568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "EXP"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "DUP2"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "SLOAD"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "DUP2"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "MUL"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "NOT"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "AND"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "SWAP1"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "DUP4"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "AND"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "MUL"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "OR"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "SWAP1"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "SSTORE"
										},
										{
											"begin": 549,
											"end": 591,
											"name": "POP"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "POP"
										},
										{
											"begin": 458,
											"end": 598,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "JUMPDEST"
										},
										{
											"begin": 2450,
											"end": 2457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2508,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SLOAD"
										},
										{
											"begin": 2477,
											"end": 2487,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2477,
											"end": 2487,
											"name": "SLOAD"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP1"
										},
										{
											"begin": 2477,
											"end": 2508,
											"name": "SWAP2"
										},
										{
											"begin": 2477,
											"end": 2508,
											"name": "SWAP1"
										},
										{
											"begin": 2477,
											"end": 2508,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2477,
											"end": 2508,
											"name": "AND"
										},
										{
											"begin": 2477,
											"end": 2508,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2477,
											"end": 2508,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 2477,
											"end": 2508,
											"name": "JUMPDEST"
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "SWAP1"
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "POP"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "SWAP1"
										},
										{
											"begin": 2395,
											"end": 2516,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1011,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 993,
											"end": 1006,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 993,
											"end": 1006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "SLOAD"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "SWAP3"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "SSTORE"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "SLOAD"
										},
										{
											"begin": 1021,
											"end": 1057,
											"name": "SWAP1"
										},
										{
											"begin": 1021,
											"end": 1057,
											"name": "POP"
										},
										{
											"begin": 3032,
											"end": 3042,
											"name": "CALLER"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 5800,
											"end": 5814,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "JUMPDEST"
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "DUP2"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "SSTORE"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 5844,
											"end": 5868,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "JUMPDEST"
										},
										{
											"begin": 5827,
											"end": 5841,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "DUP2"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "SWAP1"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "SSTORE"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "POP"
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "AND"
										},
										{
											"begin": 5885,
											"end": 5892,
											"name": "DUP2"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "AND"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "EQ"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "JUMPI"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5949,
											"end": 5956,
											"name": "DUP2"
										},
										{
											"begin": 5942,
											"end": 5948,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "JUMPDEST"
										},
										{
											"begin": 5923,
											"end": 5930,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5938,
											"name": "DUP4"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "AND"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "AND"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "MSTORE"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "ADD"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "MSTORE"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "ADD"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "KECCAK256"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "SSTORE"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "POP"
										},
										{
											"begin": 6006,
											"end": 6026,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6006,
											"end": 6026,
											"name": "SLOAD"
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6002,
											"name": "DUP4"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "KECCAK256"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "SSTORE"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "JUMPDEST"
										},
										{
											"begin": 3072,
											"end": 3073,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3069,
											"name": "DUP4"
										},
										{
											"begin": 3063,
											"end": 3073,
											"name": "GT"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "JUMPI"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "MLOAD"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "DUP2"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "MSTORE"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "DUP3"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "DUP2"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "SUB"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "DUP3"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "MSTORE"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "DUP2"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "MSTORE"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH",
											"value": "43616E6E6F742077697468647261772030000000000000000000000000000000"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "DUP2"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "MSTORE"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "MLOAD"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "SUB"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "REVERT"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "JUMPDEST"
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "DUP4"
										},
										{
											"begin": 3121,
											"end": 3133,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3121,
											"end": 3133,
											"name": "SLOAD"
										},
										{
											"begin": 3121,
											"end": 3137,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 3121,
											"end": 3137,
											"name": "SWAP1"
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "SWAP2"
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "SWAP1"
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "AND"
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "JUMPDEST"
										},
										{
											"begin": 3106,
											"end": 3118,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3106,
											"end": 3145,
											"name": "DUP2"
										},
										{
											"begin": 3106,
											"end": 3145,
											"name": "SWAP1"
										},
										{
											"begin": 3106,
											"end": 3145,
											"name": "SSTORE"
										},
										{
											"begin": 3106,
											"end": 3145,
											"name": "POP"
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 3206,
											"end": 3212,
											"name": "DUP4"
										},
										{
											"begin": 3180,
											"end": 3189,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3200,
											"name": "CALLER"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "AND"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "AND"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "DUP2"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "MSTORE"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "ADD"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "SWAP1"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "DUP2"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "MSTORE"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "ADD"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "KECCAK256"
										},
										{
											"begin": 3180,
											"end": 3201,
											"name": "SLOAD"
										},
										{
											"begin": 3180,
											"end": 3205,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 3180,
											"end": 3205,
											"name": "SWAP1"
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "SWAP2"
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "SWAP1"
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "AND"
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "JUMPDEST"
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3166,
											"end": 3176,
											"name": "CALLER"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "AND"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "AND"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "DUP2"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "MSTORE"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "ADD"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "SWAP1"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "DUP2"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "MSTORE"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "ADD"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "KECCAK256"
										},
										{
											"begin": 3156,
											"end": 3213,
											"name": "DUP2"
										},
										{
											"begin": 3156,
											"end": 3213,
											"name": "SWAP1"
										},
										{
											"begin": 3156,
											"end": 3213,
											"name": "SSTORE"
										},
										{
											"begin": 3156,
											"end": 3213,
											"name": "POP"
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 3250,
											"end": 3260,
											"name": "CALLER"
										},
										{
											"begin": 3262,
											"end": 3268,
											"name": "DUP5"
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "SWAP1"
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "SLOAD"
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "SWAP1"
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "EXP"
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "SWAP1"
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "DIV"
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "AND"
										},
										{
											"begin": 3224,
											"end": 3249,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3249,
											"name": "AND"
										},
										{
											"begin": 3224,
											"end": 3249,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 3224,
											"end": 3249,
											"name": "SWAP1"
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "SWAP3"
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "SWAP2"
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "SWAP1"
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "AND"
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "JUMPDEST"
										},
										{
											"begin": 3295,
											"end": 3305,
											"name": "CALLER"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "AND"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "PUSH",
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "DUP5"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "MLOAD"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "DUP1"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "DUP3"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "DUP2"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "MSTORE"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "ADD"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "SWAP2"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "POP"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "POP"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "MLOAD"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "DUP1"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "SWAP2"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "SUB"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3285,
											"end": 3314,
											"name": "LOG2"
										},
										{
											"begin": 1067,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "SLOAD"
										},
										{
											"begin": 1086,
											"end": 1098,
											"name": "DUP2"
										},
										{
											"begin": 1086,
											"end": 1115,
											"name": "EQ"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "JUMPI"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "REVERT"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "JUMPDEST"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "POP"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "POP"
										},
										{
											"begin": 2965,
											"end": 3322,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "JUMPDEST"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "SLOAD"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "DUP2"
										},
										{
											"begin": 718,
											"end": 757,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 387,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 368,
											"end": 387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 368,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 387,
											"name": "SLOAD"
										},
										{
											"begin": 368,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 387,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 368,
											"end": 387,
											"name": "EXP"
										},
										{
											"begin": 368,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 387,
											"name": "DIV"
										},
										{
											"begin": 368,
											"end": 387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 368,
											"end": 387,
											"name": "AND"
										},
										{
											"begin": 354,
											"end": 387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 354,
											"end": 387,
											"name": "AND"
										},
										{
											"begin": 354,
											"end": 364,
											"name": "CALLER"
										},
										{
											"begin": 354,
											"end": 387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 354,
											"end": 387,
											"name": "AND"
										},
										{
											"begin": 354,
											"end": 387,
											"name": "EQ"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "JUMPI"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "MLOAD"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "DUP2"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "MSTORE"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "ADD"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "DUP1"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "DUP1"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "ADD"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "DUP3"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "DUP2"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "SUB"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "DUP3"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "MSTORE"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "DUP2"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "MSTORE"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "ADD"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "DUP1"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "PUSH data",
											"value": "D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "SWAP2"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "CODECOPY"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "ADD"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "SWAP2"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "POP"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "POP"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "MLOAD"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "DUP1"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "SWAP2"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "SUB"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "SWAP1"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "REVERT"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 346,
											"end": 434,
											"name": "JUMPDEST"
										},
										{
											"begin": 3904,
											"end": 3905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 5800,
											"end": 5814,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "JUMPDEST"
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "DUP2"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "SSTORE"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 5844,
											"end": 5868,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "JUMPDEST"
										},
										{
											"begin": 5827,
											"end": 5841,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "DUP2"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "SWAP1"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "SSTORE"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "POP"
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "AND"
										},
										{
											"begin": 5885,
											"end": 5892,
											"name": "DUP2"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "AND"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "EQ"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "JUMPI"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 5949,
											"end": 5956,
											"name": "DUP2"
										},
										{
											"begin": 5942,
											"end": 5948,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "JUMPDEST"
										},
										{
											"begin": 5923,
											"end": 5930,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5938,
											"name": "DUP4"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "AND"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "AND"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "MSTORE"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "ADD"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "MSTORE"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "ADD"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "KECCAK256"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "SSTORE"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "POP"
										},
										{
											"begin": 6006,
											"end": 6026,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6006,
											"end": 6026,
											"name": "SLOAD"
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6002,
											"name": "DUP4"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "KECCAK256"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "SSTORE"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "JUMPDEST"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "SLOAD"
										},
										{
											"begin": 3923,
											"end": 3938,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3923,
											"end": 3954,
											"name": "LT"
										},
										{
											"begin": 3919,
											"end": 4237,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 3919,
											"end": 4237,
											"name": "JUMPI"
										},
										{
											"begin": 3984,
											"end": 4011,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 3995,
											"end": 4010,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 3995,
											"end": 4010,
											"name": "SLOAD"
										},
										{
											"begin": 3984,
											"end": 3990,
											"name": "DUP4"
										},
										{
											"begin": 3984,
											"end": 3994,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 3984,
											"end": 3994,
											"name": "SWAP1"
										},
										{
											"begin": 3984,
											"end": 4011,
											"name": "SWAP2"
										},
										{
											"begin": 3984,
											"end": 4011,
											"name": "SWAP1"
										},
										{
											"begin": 3984,
											"end": 4011,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3984,
											"end": 4011,
											"name": "AND"
										},
										{
											"begin": 3984,
											"end": 4011,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4011,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 3984,
											"end": 4011,
											"name": "JUMPDEST"
										},
										{
											"begin": 3971,
											"end": 3981,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3971,
											"end": 4011,
											"name": "DUP2"
										},
										{
											"begin": 3971,
											"end": 4011,
											"name": "SWAP1"
										},
										{
											"begin": 3971,
											"end": 4011,
											"name": "SSTORE"
										},
										{
											"begin": 3971,
											"end": 4011,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 4237,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 3919,
											"end": 4237,
											"name": "JUMP"
										},
										{
											"begin": 3919,
											"end": 4237,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 3919,
											"end": 4237,
											"name": "JUMPDEST"
										},
										{
											"begin": 4044,
											"end": 4061,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4097,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 4081,
											"end": 4096,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "SLOAD"
										},
										{
											"begin": 4064,
											"end": 4080,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 4064,
											"end": 4080,
											"name": "SWAP1"
										},
										{
											"begin": 4064,
											"end": 4097,
											"name": "SWAP2"
										},
										{
											"begin": 4064,
											"end": 4097,
											"name": "SWAP1"
										},
										{
											"begin": 4064,
											"end": 4097,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4064,
											"end": 4097,
											"name": "AND"
										},
										{
											"begin": 4064,
											"end": 4097,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4064,
											"end": 4097,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 4064,
											"end": 4097,
											"name": "JUMPDEST"
										},
										{
											"begin": 4044,
											"end": 4097,
											"name": "SWAP1"
										},
										{
											"begin": 4044,
											"end": 4097,
											"name": "POP"
										},
										{
											"begin": 4112,
											"end": 4128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4156,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 4145,
											"end": 4155,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4145,
											"end": 4155,
											"name": "SLOAD"
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "DUP4"
										},
										{
											"begin": 4131,
											"end": 4144,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 4131,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 4131,
											"end": 4156,
											"name": "SWAP2"
										},
										{
											"begin": 4131,
											"end": 4156,
											"name": "SWAP1"
										},
										{
											"begin": 4131,
											"end": 4156,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4156,
											"name": "AND"
										},
										{
											"begin": 4131,
											"end": 4156,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4131,
											"end": 4156,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 4131,
											"end": 4156,
											"name": "JUMPDEST"
										},
										{
											"begin": 4112,
											"end": 4156,
											"name": "SWAP1"
										},
										{
											"begin": 4112,
											"end": 4156,
											"name": "POP"
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 4209,
											"end": 4224,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4209,
											"end": 4224,
											"name": "SLOAD"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 4195,
											"end": 4203,
											"name": "DUP4"
										},
										{
											"begin": 4184,
											"end": 4190,
											"name": "DUP8"
										},
										{
											"begin": 4184,
											"end": 4194,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 4184,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "SWAP2"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "SWAP1"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "AND"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "JUMPDEST"
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "SWAP1"
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "SWAP2"
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "SWAP1"
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "AND"
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "JUMPDEST"
										},
										{
											"begin": 4171,
											"end": 4181,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "DUP2"
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "SWAP1"
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "SSTORE"
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 4237,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 4237,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 4237,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 3919,
											"end": 4237,
											"name": "JUMPDEST"
										},
										{
											"begin": 4597,
											"end": 4609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "SLOAD"
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "EXP"
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "DIV"
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "AND"
										},
										{
											"begin": 4612,
											"end": 4634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4612,
											"end": 4634,
											"name": "AND"
										},
										{
											"begin": 4612,
											"end": 4634,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4643,
											"end": 4647,
											"name": "ADDRESS"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "MLOAD"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP3"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "AND"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "SHL"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP2"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "MSTORE"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "ADD"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP1"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP3"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "AND"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "AND"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP2"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "MSTORE"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "ADD"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "SWAP2"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "POP"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "POP"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "MLOAD"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP1"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP4"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "SUB"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP2"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP7"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP1"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "POP"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "GAS"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "STATICCALL"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "POP"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "POP"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "POP"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "POP"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "MLOAD"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP2"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "ADD"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "SWAP1"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP1"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "DUP1"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "MLOAD"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "SWAP1"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "ADD"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "SWAP1"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "SWAP3"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "SWAP2"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "SWAP1"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "POP"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "POP"
										},
										{
											"begin": 4612,
											"end": 4649,
											"name": "POP"
										},
										{
											"begin": 4597,
											"end": 4649,
											"name": "SWAP1"
										},
										{
											"begin": 4597,
											"end": 4649,
											"name": "POP"
										},
										{
											"begin": 4682,
											"end": 4710,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "SLOAD"
										},
										{
											"begin": 4682,
											"end": 4689,
											"name": "DUP3"
										},
										{
											"begin": 4682,
											"end": 4693,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 4682,
											"end": 4693,
											"name": "SWAP1"
										},
										{
											"begin": 4682,
											"end": 4710,
											"name": "SWAP2"
										},
										{
											"begin": 4682,
											"end": 4710,
											"name": "SWAP1"
										},
										{
											"begin": 4682,
											"end": 4710,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4682,
											"end": 4710,
											"name": "AND"
										},
										{
											"begin": 4682,
											"end": 4710,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4682,
											"end": 4710,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 4682,
											"end": 4710,
											"name": "JUMPDEST"
										},
										{
											"begin": 4668,
											"end": 4678,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4668,
											"end": 4678,
											"name": "SLOAD"
										},
										{
											"begin": 4668,
											"end": 4710,
											"name": "GT"
										},
										{
											"begin": 4668,
											"end": 4710,
											"name": "ISZERO"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "JUMPI"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "MLOAD"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "DUP2"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "MSTORE"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "ADD"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "DUP1"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "DUP1"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "ADD"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "DUP3"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "DUP2"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "SUB"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "DUP3"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "MSTORE"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "DUP2"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "MSTORE"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "ADD"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "DUP1"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "PUSH",
											"value": "50726F76696465642072657761726420746F6F20686967680000000000000000"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "DUP2"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "MSTORE"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "POP"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "ADD"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "SWAP2"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "POP"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "POP"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "MLOAD"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "DUP1"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "SWAP2"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "SUB"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "SWAP1"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "REVERT"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 4660,
											"end": 4739,
											"name": "JUMPDEST"
										},
										{
											"begin": 4769,
											"end": 4784,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "DUP2"
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "SWAP1"
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "SSTORE"
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "POP"
										},
										{
											"begin": 4810,
											"end": 4846,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 4830,
											"end": 4845,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4830,
											"end": 4845,
											"name": "SLOAD"
										},
										{
											"begin": 4810,
											"end": 4825,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4810,
											"end": 4829,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 4810,
											"end": 4829,
											"name": "SWAP1"
										},
										{
											"begin": 4810,
											"end": 4846,
											"name": "SWAP2"
										},
										{
											"begin": 4810,
											"end": 4846,
											"name": "SWAP1"
										},
										{
											"begin": 4810,
											"end": 4846,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4846,
											"name": "AND"
										},
										{
											"begin": 4810,
											"end": 4846,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4810,
											"end": 4846,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 4810,
											"end": 4846,
											"name": "JUMPDEST"
										},
										{
											"begin": 4795,
											"end": 4807,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4795,
											"end": 4846,
											"name": "DUP2"
										},
										{
											"begin": 4795,
											"end": 4846,
											"name": "SWAP1"
										},
										{
											"begin": 4795,
											"end": 4846,
											"name": "SSTORE"
										},
										{
											"begin": 4795,
											"end": 4846,
											"name": "POP"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "PUSH",
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 4874,
											"end": 4880,
											"name": "DUP4"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "MLOAD"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "DUP1"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "DUP3"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "DUP2"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "MSTORE"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "ADD"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "SWAP2"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "POP"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "POP"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "MLOAD"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "DUP1"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "SWAP2"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "SUB"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "SWAP1"
										},
										{
											"begin": 4862,
											"end": 4881,
											"name": "LOG1"
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "POP"
										},
										{
											"begin": 444,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 4889,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3330,
											"end": 3637,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3330,
											"end": 3637,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1011,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 993,
											"end": 1006,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 993,
											"end": 1006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "SLOAD"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "SWAP3"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "SSTORE"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "SLOAD"
										},
										{
											"begin": 1021,
											"end": 1057,
											"name": "SWAP1"
										},
										{
											"begin": 1021,
											"end": 1057,
											"name": "POP"
										},
										{
											"begin": 3384,
											"end": 3394,
											"name": "CALLER"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 5800,
											"end": 5814,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "JUMPDEST"
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "DUP2"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "SSTORE"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 5844,
											"end": 5868,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "JUMPDEST"
										},
										{
											"begin": 5827,
											"end": 5841,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "DUP2"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "SWAP1"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "SSTORE"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "POP"
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "AND"
										},
										{
											"begin": 5885,
											"end": 5892,
											"name": "DUP2"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "AND"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "EQ"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "JUMPI"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 5949,
											"end": 5956,
											"name": "DUP2"
										},
										{
											"begin": 5942,
											"end": 5948,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "JUMPDEST"
										},
										{
											"begin": 5923,
											"end": 5930,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5938,
											"name": "DUP4"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "AND"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "AND"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "MSTORE"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "ADD"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "MSTORE"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "ADD"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "KECCAK256"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "SSTORE"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "POP"
										},
										{
											"begin": 6006,
											"end": 6026,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6006,
											"end": 6026,
											"name": "SLOAD"
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6002,
											"name": "DUP4"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "KECCAK256"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "SSTORE"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "JUMPDEST"
										},
										{
											"begin": 3407,
											"end": 3421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3431,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3442,
											"name": "CALLER"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "AND"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "AND"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "DUP2"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "MSTORE"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "ADD"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "SWAP1"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "DUP2"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "MSTORE"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "ADD"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "KECCAK256"
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "SLOAD"
										},
										{
											"begin": 3407,
											"end": 3443,
											"name": "SWAP1"
										},
										{
											"begin": 3407,
											"end": 3443,
											"name": "POP"
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3468,
											"name": "GT"
										},
										{
											"begin": 3454,
											"end": 3630,
											"name": "ISZERO"
										},
										{
											"begin": 3454,
											"end": 3630,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 3454,
											"end": 3630,
											"name": "JUMPI"
										},
										{
											"begin": 3507,
											"end": 3508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3492,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "CALLER"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "AND"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "AND"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "DUP2"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "MSTORE"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "ADD"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "SWAP1"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "DUP2"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "MSTORE"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "ADD"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3504,
											"name": "KECCAK256"
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "SWAP1"
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "SSTORE"
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3523,
											"end": 3568,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 3549,
											"end": 3559,
											"name": "CALLER"
										},
										{
											"begin": 3561,
											"end": 3567,
											"name": "DUP3"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "SWAP1"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "SLOAD"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "SWAP1"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "EXP"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "SWAP1"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "DIV"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "AND"
										},
										{
											"begin": 3523,
											"end": 3548,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3548,
											"name": "AND"
										},
										{
											"begin": 3523,
											"end": 3548,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 3523,
											"end": 3548,
											"name": "SWAP1"
										},
										{
											"begin": 3523,
											"end": 3568,
											"name": "SWAP3"
										},
										{
											"begin": 3523,
											"end": 3568,
											"name": "SWAP2"
										},
										{
											"begin": 3523,
											"end": 3568,
											"name": "SWAP1"
										},
										{
											"begin": 3523,
											"end": 3568,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3568,
											"name": "AND"
										},
										{
											"begin": 3523,
											"end": 3568,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3523,
											"end": 3568,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 3523,
											"end": 3568,
											"name": "JUMPDEST"
										},
										{
											"begin": 3599,
											"end": 3609,
											"name": "CALLER"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "AND"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "PUSH",
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 3611,
											"end": 3617,
											"name": "DUP3"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MLOAD"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "DUP1"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "DUP3"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "DUP2"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "ADD"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "SWAP2"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "POP"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "POP"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MLOAD"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "DUP1"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "SWAP2"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "SUB"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "SWAP1"
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "LOG2"
										},
										{
											"begin": 3454,
											"end": 3630,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 3454,
											"end": 3630,
											"name": "JUMPDEST"
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "POP"
										},
										{
											"begin": 1067,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "SLOAD"
										},
										{
											"begin": 1086,
											"end": 1098,
											"name": "DUP2"
										},
										{
											"begin": 1086,
											"end": 1115,
											"name": "EQ"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "JUMPI"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "REVERT"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "JUMPDEST"
										},
										{
											"begin": 3330,
											"end": 3637,
											"name": "POP"
										},
										{
											"begin": 3330,
											"end": 3637,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "SLOAD"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "EXP"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "DIV"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "AND"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 201,
											"end": 235,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "JUMPDEST"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SWAP1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SLOAD"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SWAP1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "EXP"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "SWAP1"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "DIV"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "AND"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "DUP2"
										},
										{
											"begin": 134,
											"end": 163,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "SLOAD"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "EXP"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "DIV"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "AND"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "JUMPDEST"
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1663,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1671,
											"name": "DUP4"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "AND"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "AND"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "DUP2"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "MSTORE"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "ADD"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "SWAP1"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "DUP2"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "MSTORE"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "ADD"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "KECCAK256"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "SLOAD"
										},
										{
											"begin": 1647,
											"end": 1672,
											"name": "SWAP1"
										},
										{
											"begin": 1647,
											"end": 1672,
											"name": "POP"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SWAP2"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "SWAP1"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "POP"
										},
										{
											"begin": 1568,
											"end": 1680,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "SLOAD"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "EXP"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "DIV"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "AND"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "DUP2"
										},
										{
											"begin": 611,
											"end": 637,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "JUMPDEST"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "SLOAD"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "EXP"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "DIV"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 569,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 555,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 555,
											"end": 565,
											"name": "CALLER"
										},
										{
											"begin": 555,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 555,
											"end": 583,
											"name": "EQ"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "JUMPI"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "MLOAD"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP2"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "MSTORE"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP3"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP2"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "SUB"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP3"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "MSTORE"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP2"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "MSTORE"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH data",
											"value": "1149E36CD24095BEBC9341EF03810E0E2A00039190624DF6F2D7934141E2233B"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "SWAP2"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "CODECOPY"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "SWAP2"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "POP"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "POP"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "MLOAD"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "SWAP2"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "SUB"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "SWAP1"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "REVERT"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 547,
											"end": 641,
											"name": "JUMPDEST"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "DUP1"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "SLOAD"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "EXP"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "DIV"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "AND"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SLOAD"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "EXP"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DIV"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "AND"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "MLOAD"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "DUP1"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "DUP4"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "AND"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "AND"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "DUP2"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "MSTORE"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "ADD"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "DUP3"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "AND"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "AND"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "DUP2"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "MSTORE"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "ADD"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "SWAP3"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "POP"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "POP"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "POP"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "MLOAD"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "DUP1"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "SWAP2"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "SUB"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "SWAP1"
										},
										{
											"begin": 656,
											"end": 691,
											"name": "LOG1"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SWAP1"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SLOAD"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SWAP1"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "EXP"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SWAP1"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "DIV"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "AND"
										},
										{
											"begin": 701,
											"end": 706,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 701,
											"end": 706,
											"name": "DUP1"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "EXP"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "DUP2"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "SLOAD"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "DUP2"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "MUL"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "NOT"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "AND"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "SWAP1"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "DUP4"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "AND"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "MUL"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "OR"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "SWAP1"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "SSTORE"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "POP"
										},
										{
											"begin": 758,
											"end": 759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 733,
											"end": 747,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 733,
											"end": 747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "EXP"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "DUP2"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "SLOAD"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "DUP2"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "MUL"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "NOT"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "AND"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "DUP4"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "AND"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "MUL"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "OR"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "SSTORE"
										},
										{
											"begin": 733,
											"end": 760,
											"name": "POP"
										},
										{
											"begin": 501,
											"end": 767,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "JUMPDEST"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "SLOAD"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "DUP2"
										},
										{
											"begin": 682,
											"end": 711,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "JUMPDEST"
										},
										{
											"begin": 1745,
											"end": 1752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "SLOAD"
										},
										{
											"begin": 1772,
											"end": 1787,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1772,
											"end": 1802,
											"name": "LT"
										},
										{
											"begin": 1772,
											"end": 1835,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 1772,
											"end": 1835,
											"name": "JUMPI"
										},
										{
											"begin": 1823,
											"end": 1835,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1823,
											"end": 1835,
											"name": "SLOAD"
										},
										{
											"begin": 1772,
											"end": 1835,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 1772,
											"end": 1835,
											"name": "JUMP"
										},
										{
											"begin": 1772,
											"end": 1835,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 1772,
											"end": 1835,
											"name": "JUMPDEST"
										},
										{
											"begin": 1805,
											"end": 1820,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1772,
											"end": 1835,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 1772,
											"end": 1835,
											"name": "JUMPDEST"
										},
										{
											"begin": 1765,
											"end": 1835,
											"name": "SWAP1"
										},
										{
											"begin": 1765,
											"end": 1835,
											"name": "POP"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "SWAP1"
										},
										{
											"begin": 1688,
											"end": 1843,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "SWAP1"
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "SLOAD"
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "SWAP1"
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "EXP"
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "SWAP1"
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "DIV"
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "AND"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "AND"
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "DUP3"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "AND"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "EQ"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ISZERO"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "JUMPI"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "MLOAD"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "DUP2"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "MSTORE"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "ADD"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "DUP1"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "DUP1"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "ADD"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "DUP3"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "DUP2"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "SUB"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "DUP3"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "MSTORE"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "DUP2"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "MSTORE"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "ADD"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "DUP1"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "PUSH data",
											"value": "F43DE9F2A3539B2AC9CF1844588E9CC0ACD1B2BDB1EC43734F76440993EDE0A9"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "SWAP2"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "CODECOPY"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "ADD"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "SWAP2"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "POP"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "POP"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "MLOAD"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "DUP1"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "SWAP2"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "SUB"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "SWAP1"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "REVERT"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 5099,
											"end": 5182,
											"name": "JUMPDEST"
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "SWAP1"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "SLOAD"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "SWAP1"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "EXP"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "SWAP1"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "DIV"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "AND"
										},
										{
											"begin": 5234,
											"end": 5245,
											"name": "DUP3"
										},
										{
											"begin": 5200,
											"end": 5212,
											"name": "DUP5"
										},
										{
											"begin": 5193,
											"end": 5226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5193,
											"end": 5226,
											"name": "AND"
										},
										{
											"begin": 5193,
											"end": 5226,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 5193,
											"end": 5226,
											"name": "SWAP1"
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "SWAP3"
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "SWAP2"
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "SWAP1"
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "AND"
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "JUMPDEST"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "PUSH",
											"value": "8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28"
										},
										{
											"begin": 5272,
											"end": 5284,
											"name": "DUP3"
										},
										{
											"begin": 5286,
											"end": 5297,
											"name": "DUP3"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "MLOAD"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "DUP1"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "DUP4"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "AND"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "AND"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "DUP2"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "MSTORE"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "ADD"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "DUP3"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "DUP2"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "MSTORE"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "ADD"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "SWAP3"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "POP"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "POP"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "POP"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "MLOAD"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "DUP1"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "SWAP2"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "SUB"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "SWAP1"
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "LOG1"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "POP"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "POP"
										},
										{
											"begin": 5004,
											"end": 5306,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "JUMPDEST"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "MSTORE"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "DUP1"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "MSTORE"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "KECCAK256"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SWAP2"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "POP"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SWAP1"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "POP"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "SLOAD"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "DUP2"
										},
										{
											"begin": 844,
											"end": 901,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "JUMPDEST"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SLOAD"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "EXP"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DIV"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "AND"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "DUP2"
										},
										{
											"begin": 108,
											"end": 128,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPDEST"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SLOAD"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP2"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1011,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 993,
											"end": 1006,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 993,
											"end": 1006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "SLOAD"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "SWAP3"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "SSTORE"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "SLOAD"
										},
										{
											"begin": 1021,
											"end": 1057,
											"name": "SWAP1"
										},
										{
											"begin": 1021,
											"end": 1057,
											"name": "POP"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "SWAP1"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "SLOAD"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "SWAP1"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "EXP"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "SWAP1"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "DIV"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "AND"
										},
										{
											"begin": 1149,
											"end": 1156,
											"name": "ISZERO"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "JUMPI"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "MLOAD"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "DUP2"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "MSTORE"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "ADD"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "DUP1"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "DUP1"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "ADD"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "DUP3"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "DUP2"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "SUB"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "DUP3"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "MSTORE"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "DUP2"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "MSTORE"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "ADD"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "DUP1"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "PUSH data",
											"value": "B214273CDB244871F55E1966D43AD7FEBCE81860C609DDA0E226C7C1B7959D6F"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "SWAP2"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "CODECOPY"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "ADD"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "SWAP2"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "POP"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "POP"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "MLOAD"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "DUP1"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "SWAP2"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "SUB"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "SWAP1"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "REVERT"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 1141,
											"end": 1221,
											"name": "JUMPDEST"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "CALLER"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 5800,
											"end": 5814,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "JUMPDEST"
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "DUP2"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "SSTORE"
										},
										{
											"begin": 5777,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 5844,
											"end": 5868,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 5844,
											"end": 5870,
											"name": "JUMPDEST"
										},
										{
											"begin": 5827,
											"end": 5841,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "DUP2"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "SWAP1"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "SSTORE"
										},
										{
											"begin": 5827,
											"end": 5870,
											"name": "POP"
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "AND"
										},
										{
											"begin": 5885,
											"end": 5892,
											"name": "DUP2"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "AND"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "EQ"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "JUMPI"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 5949,
											"end": 5956,
											"name": "DUP2"
										},
										{
											"begin": 5942,
											"end": 5948,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "JUMPDEST"
										},
										{
											"begin": 5923,
											"end": 5930,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5938,
											"name": "DUP4"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "AND"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "AND"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "MSTORE"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "ADD"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "MSTORE"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "ADD"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "KECCAK256"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "SSTORE"
										},
										{
											"begin": 5923,
											"end": 5957,
											"name": "POP"
										},
										{
											"begin": 6006,
											"end": 6026,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6006,
											"end": 6026,
											"name": "SLOAD"
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6002,
											"name": "DUP4"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 6003,
											"name": "KECCAK256"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "SSTORE"
										},
										{
											"begin": 5972,
											"end": 6026,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 5881,
											"end": 6038,
											"name": "JUMPDEST"
										},
										{
											"begin": 2694,
											"end": 2695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "DUP4"
										},
										{
											"begin": 2685,
											"end": 2695,
											"name": "GT"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "JUMPI"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "MLOAD"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "DUP2"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "MSTORE"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "ADD"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "DUP1"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "DUP1"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "ADD"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "DUP3"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "DUP2"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "SUB"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "DUP3"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "MSTORE"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "DUP2"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "MSTORE"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "ADD"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "DUP1"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "PUSH",
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "DUP2"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "MSTORE"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "POP"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "ADD"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "SWAP2"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "POP"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "POP"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "MLOAD"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "DUP1"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "SWAP2"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "SUB"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "SWAP1"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "REVERT"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "JUMPDEST"
										},
										{
											"begin": 2740,
											"end": 2764,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 2757,
											"end": 2763,
											"name": "DUP4"
										},
										{
											"begin": 2740,
											"end": 2752,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 2740,
											"end": 2752,
											"name": "SLOAD"
										},
										{
											"begin": 2740,
											"end": 2756,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2740,
											"end": 2756,
											"name": "SWAP1"
										},
										{
											"begin": 2740,
											"end": 2764,
											"name": "SWAP2"
										},
										{
											"begin": 2740,
											"end": 2764,
											"name": "SWAP1"
										},
										{
											"begin": 2740,
											"end": 2764,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2740,
											"end": 2764,
											"name": "AND"
										},
										{
											"begin": 2740,
											"end": 2764,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2740,
											"end": 2764,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 2740,
											"end": 2764,
											"name": "JUMPDEST"
										},
										{
											"begin": 2725,
											"end": 2737,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 2725,
											"end": 2764,
											"name": "DUP2"
										},
										{
											"begin": 2725,
											"end": 2764,
											"name": "SWAP1"
										},
										{
											"begin": 2725,
											"end": 2764,
											"name": "SSTORE"
										},
										{
											"begin": 2725,
											"end": 2764,
											"name": "POP"
										},
										{
											"begin": 2799,
											"end": 2832,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "DUP4"
										},
										{
											"begin": 2799,
											"end": 2808,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2819,
											"name": "CALLER"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "AND"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "AND"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "DUP2"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "MSTORE"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "ADD"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "SWAP1"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "DUP2"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "MSTORE"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "ADD"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "KECCAK256"
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "SLOAD"
										},
										{
											"begin": 2799,
											"end": 2824,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2799,
											"end": 2824,
											"name": "SWAP1"
										},
										{
											"begin": 2799,
											"end": 2832,
											"name": "SWAP2"
										},
										{
											"begin": 2799,
											"end": 2832,
											"name": "SWAP1"
										},
										{
											"begin": 2799,
											"end": 2832,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2799,
											"end": 2832,
											"name": "AND"
										},
										{
											"begin": 2799,
											"end": 2832,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2799,
											"end": 2832,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 2799,
											"end": 2832,
											"name": "JUMPDEST"
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2795,
											"name": "CALLER"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "AND"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "AND"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "DUP2"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "MSTORE"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "ADD"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "SWAP1"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "DUP2"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "MSTORE"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "ADD"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "KECCAK256"
										},
										{
											"begin": 2775,
											"end": 2832,
											"name": "DUP2"
										},
										{
											"begin": 2775,
											"end": 2832,
											"name": "SWAP1"
										},
										{
											"begin": 2775,
											"end": 2832,
											"name": "SSTORE"
										},
										{
											"begin": 2775,
											"end": 2832,
											"name": "POP"
										},
										{
											"begin": 2843,
											"end": 2907,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 2873,
											"end": 2883,
											"name": "CALLER"
										},
										{
											"begin": 2893,
											"end": 2897,
											"name": "ADDRESS"
										},
										{
											"begin": 2900,
											"end": 2906,
											"name": "DUP6"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "SLOAD"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "EXP"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "DIV"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "AND"
										},
										{
											"begin": 2843,
											"end": 2872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2843,
											"end": 2872,
											"name": "AND"
										},
										{
											"begin": 2843,
											"end": 2872,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 2843,
											"end": 2872,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 2907,
											"name": "SWAP4"
										},
										{
											"begin": 2843,
											"end": 2907,
											"name": "SWAP3"
										},
										{
											"begin": 2843,
											"end": 2907,
											"name": "SWAP2"
										},
										{
											"begin": 2843,
											"end": 2907,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 2907,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2843,
											"end": 2907,
											"name": "AND"
										},
										{
											"begin": 2843,
											"end": 2907,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2843,
											"end": 2907,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 2843,
											"end": 2907,
											"name": "JUMPDEST"
										},
										{
											"begin": 2930,
											"end": 2940,
											"name": "CALLER"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "AND"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "PUSH",
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2942,
											"end": 2948,
											"name": "DUP5"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "MLOAD"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "DUP1"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "DUP3"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "DUP2"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "MSTORE"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "ADD"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "SWAP2"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "POP"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "POP"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "MLOAD"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "DUP1"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "SWAP2"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "SUB"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "SWAP1"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "LOG2"
										},
										{
											"begin": 1231,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "SLOAD"
										},
										{
											"begin": 1086,
											"end": 1098,
											"name": "DUP2"
										},
										{
											"begin": 1086,
											"end": 1115,
											"name": "EQ"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "JUMPI"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "REVERT"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "JUMPDEST"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2578,
											"end": 2957,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "JUMPDEST"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "SLOAD"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "DUP2"
										},
										{
											"begin": 764,
											"end": 793,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 5438,
											"end": 5450,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5438,
											"end": 5450,
											"name": "SLOAD"
										},
										{
											"begin": 5420,
											"end": 5435,
											"name": "TIMESTAMP"
										},
										{
											"begin": 5420,
											"end": 5450,
											"name": "GT"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "JUMPI"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "MLOAD"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "MSTORE"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "DUP3"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "SUB"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "DUP3"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "MSTORE"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "MSTORE"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "PUSH data",
											"value": "7F2725172F5941B576A01EC7036D341E0C837E280F27B110CB3E6FD2F2C4A56"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "SWAP2"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "CODECOPY"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "SWAP2"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "MLOAD"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "SWAP2"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "SUB"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "REVERT"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 5398,
											"end": 5566,
											"name": "JUMPDEST"
										},
										{
											"begin": 5595,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5577,
											"end": 5611,
											"name": "DUP2"
										},
										{
											"begin": 5577,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 5577,
											"end": 5611,
											"name": "SSTORE"
										},
										{
											"begin": 5577,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "PUSH",
											"value": "FB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3"
										},
										{
											"begin": 5650,
											"end": 5665,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5650,
											"end": 5665,
											"name": "SLOAD"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "MLOAD"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "DUP1"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "DUP3"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "DUP2"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "MSTORE"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "ADD"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "SWAP2"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "POP"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "POP"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "MLOAD"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "DUP1"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "SWAP2"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "SUB"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "SWAP1"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "LOG1"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "POP"
										},
										{
											"begin": 5314,
											"end": 5674,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1898,
											"end": 1905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1939,
											"name": "DUP1"
										},
										{
											"begin": 1922,
											"end": 1934,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 1922,
											"end": 1934,
											"name": "SLOAD"
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "EQ"
										},
										{
											"begin": 1918,
											"end": 1995,
											"name": "ISZERO"
										},
										{
											"begin": 1918,
											"end": 1995,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 1918,
											"end": 1995,
											"name": "JUMPI"
										},
										{
											"begin": 1963,
											"end": 1983,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1963,
											"end": 1983,
											"name": "SLOAD"
										},
										{
											"begin": 1956,
											"end": 1983,
											"name": "SWAP1"
										},
										{
											"begin": 1956,
											"end": 1983,
											"name": "POP"
										},
										{
											"begin": 1956,
											"end": 1983,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 1956,
											"end": 1983,
											"name": "JUMP"
										},
										{
											"begin": 1918,
											"end": 1995,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 1918,
											"end": 1995,
											"name": "JUMPDEST"
										},
										{
											"begin": 2025,
											"end": 2173,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 2068,
											"end": 2158,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SLOAD"
										},
										{
											"begin": 2068,
											"end": 2140,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 2135,
											"end": 2139,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2068,
											"end": 2130,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 2119,
											"end": 2129,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2119,
											"end": 2129,
											"name": "SLOAD"
										},
										{
											"begin": 2068,
											"end": 2114,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 2099,
											"end": 2113,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2099,
											"end": 2113,
											"name": "SLOAD"
										},
										{
											"begin": 2068,
											"end": 2094,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 2068,
											"end": 2092,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2068,
											"end": 2094,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2068,
											"end": 2094,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 2068,
											"end": 2094,
											"name": "JUMPDEST"
										},
										{
											"begin": 2068,
											"end": 2098,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2068,
											"end": 2098,
											"name": "SWAP1"
										},
										{
											"begin": 2068,
											"end": 2114,
											"name": "SWAP2"
										},
										{
											"begin": 2068,
											"end": 2114,
											"name": "SWAP1"
										},
										{
											"begin": 2068,
											"end": 2114,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2068,
											"end": 2114,
											"name": "AND"
										},
										{
											"begin": 2068,
											"end": 2114,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2068,
											"end": 2114,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 2068,
											"end": 2114,
											"name": "JUMPDEST"
										},
										{
											"begin": 2068,
											"end": 2118,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2068,
											"end": 2118,
											"name": "SWAP1"
										},
										{
											"begin": 2068,
											"end": 2130,
											"name": "SWAP2"
										},
										{
											"begin": 2068,
											"end": 2130,
											"name": "SWAP1"
										},
										{
											"begin": 2068,
											"end": 2130,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2068,
											"end": 2130,
											"name": "AND"
										},
										{
											"begin": 2068,
											"end": 2130,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2068,
											"end": 2130,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 2068,
											"end": 2130,
											"name": "JUMPDEST"
										},
										{
											"begin": 2068,
											"end": 2134,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2068,
											"end": 2134,
											"name": "SWAP1"
										},
										{
											"begin": 2068,
											"end": 2140,
											"name": "SWAP2"
										},
										{
											"begin": 2068,
											"end": 2140,
											"name": "SWAP1"
										},
										{
											"begin": 2068,
											"end": 2140,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2068,
											"end": 2140,
											"name": "AND"
										},
										{
											"begin": 2068,
											"end": 2140,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2068,
											"end": 2140,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 2068,
											"end": 2140,
											"name": "JUMPDEST"
										},
										{
											"begin": 2068,
											"end": 2144,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 2068,
											"end": 2144,
											"name": "SWAP1"
										},
										{
											"begin": 2068,
											"end": 2158,
											"name": "SWAP2"
										},
										{
											"begin": 2068,
											"end": 2158,
											"name": "SWAP1"
										},
										{
											"begin": 2068,
											"end": 2158,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2068,
											"end": 2158,
											"name": "AND"
										},
										{
											"begin": 2068,
											"end": 2158,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2068,
											"end": 2158,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 2068,
											"end": 2158,
											"name": "JUMPDEST"
										},
										{
											"begin": 2025,
											"end": 2045,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 2025,
											"end": 2045,
											"name": "SLOAD"
										},
										{
											"begin": 2025,
											"end": 2049,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2025,
											"end": 2049,
											"name": "SWAP1"
										},
										{
											"begin": 2025,
											"end": 2173,
											"name": "SWAP2"
										},
										{
											"begin": 2025,
											"end": 2173,
											"name": "SWAP1"
										},
										{
											"begin": 2025,
											"end": 2173,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2025,
											"end": 2173,
											"name": "AND"
										},
										{
											"begin": 2025,
											"end": 2173,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2173,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 2025,
											"end": 2173,
											"name": "JUMPDEST"
										},
										{
											"begin": 2005,
											"end": 2173,
											"name": "SWAP1"
										},
										{
											"begin": 2005,
											"end": 2173,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 2181,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "SLOAD"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "EXP"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "DIV"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "DUP2"
										},
										{
											"begin": 578,
											"end": 604,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "JUMPDEST"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "SLOAD"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "DUP2"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3645,
											"end": 3742,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 3645,
											"end": 3742,
											"name": "JUMPDEST"
										},
										{
											"begin": 3681,
											"end": 3712,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3710,
											"name": "CALLER"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "AND"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "AND"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "DUP2"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "MSTORE"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "ADD"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "SWAP1"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "DUP2"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "MSTORE"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "ADD"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "KECCAK256"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "SLOAD"
										},
										{
											"begin": 3681,
											"end": 3689,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 3681,
											"end": 3712,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3681,
											"end": 3712,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 3681,
											"end": 3712,
											"name": "JUMPDEST"
										},
										{
											"begin": 3723,
											"end": 3734,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3723,
											"end": 3734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3723,
											"end": 3734,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 3723,
											"end": 3734,
											"name": "JUMPDEST"
										},
										{
											"begin": 3645,
											"end": 3742,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "SLOAD"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1288,
											"end": 1422,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 1288,
											"end": 1422,
											"name": "JUMPDEST"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "DUP4"
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "DUP4"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "MLOAD"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "DUP1"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "ADD"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "MSTORE"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "DUP1"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "DUP2"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "MSTORE"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "ADD"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "DUP2"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "MSTORE"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "POP"
										},
										{
											"begin": 1372,
											"end": 1375,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 1372,
											"end": 1415,
											"name": "JUMPDEST"
										},
										{
											"begin": 1365,
											"end": 1415,
											"name": "SWAP1"
										},
										{
											"begin": 1365,
											"end": 1415,
											"name": "POP"
										},
										{
											"begin": 1288,
											"end": 1422,
											"name": "SWAP3"
										},
										{
											"begin": 1288,
											"end": 1422,
											"name": "SWAP2"
										},
										{
											"begin": 1288,
											"end": 1422,
											"name": "POP"
										},
										{
											"begin": 1288,
											"end": 1422,
											"name": "POP"
										},
										{
											"begin": 1288,
											"end": 1422,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2147,
											"end": 2606,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 2147,
											"end": 2606,
											"name": "JUMPDEST"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2446,
											"end": 2447,
											"name": "DUP4"
										},
										{
											"begin": 2446,
											"end": 2452,
											"name": "EQ"
										},
										{
											"begin": 2442,
											"end": 2487,
											"name": "ISZERO"
										},
										{
											"begin": 2442,
											"end": 2487,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 2442,
											"end": 2487,
											"name": "JUMPI"
										},
										{
											"begin": 2475,
											"end": 2476,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2476,
											"name": "SWAP1"
										},
										{
											"begin": 2468,
											"end": 2476,
											"name": "POP"
										},
										{
											"begin": 2468,
											"end": 2476,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 2468,
											"end": 2476,
											"name": "JUMP"
										},
										{
											"begin": 2442,
											"end": 2487,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 2442,
											"end": 2487,
											"name": "JUMPDEST"
										},
										{
											"begin": 2497,
											"end": 2506,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2514,
											"name": "DUP3"
										},
										{
											"begin": 2509,
											"end": 2510,
											"name": "DUP5"
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "MUL"
										},
										{
											"begin": 2497,
											"end": 2514,
											"name": "SWAP1"
										},
										{
											"begin": 2497,
											"end": 2514,
											"name": "POP"
										},
										{
											"begin": 2541,
											"end": 2542,
											"name": "DUP3"
										},
										{
											"begin": 2536,
											"end": 2537,
											"name": "DUP5"
										},
										{
											"begin": 2532,
											"end": 2533,
											"name": "DUP3"
										},
										{
											"begin": 2532,
											"end": 2537,
											"name": "DUP2"
										},
										{
											"begin": 2532,
											"end": 2537,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 2532,
											"end": 2537,
											"name": "JUMPI"
										},
										{
											"begin": 2532,
											"end": 2537,
											"name": "INVALID"
										},
										{
											"begin": 2532,
											"end": 2537,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 2532,
											"end": 2537,
											"name": "JUMPDEST"
										},
										{
											"begin": 2532,
											"end": 2537,
											"name": "DIV"
										},
										{
											"begin": 2532,
											"end": 2542,
											"name": "EQ"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "JUMPI"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "MLOAD"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP2"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "MSTORE"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "ADD"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP1"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP1"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "ADD"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP3"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP2"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SUB"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP3"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "MSTORE"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP2"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "MSTORE"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "ADD"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP1"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH data",
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SWAP2"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "CODECOPY"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "ADD"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SWAP2"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "POP"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "POP"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "MLOAD"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP1"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SWAP2"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SUB"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SWAP1"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "REVERT"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "JUMPDEST"
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2591,
											"end": 2599,
											"name": "SWAP2"
										},
										{
											"begin": 2591,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2591,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2147,
											"end": 2606,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 2147,
											"end": 2606,
											"name": "JUMPDEST"
										},
										{
											"begin": 2147,
											"end": 2606,
											"name": "SWAP3"
										},
										{
											"begin": 2147,
											"end": 2606,
											"name": "SWAP2"
										},
										{
											"begin": 2147,
											"end": 2606,
											"name": "POP"
										},
										{
											"begin": 2147,
											"end": 2606,
											"name": "POP"
										},
										{
											"begin": 2147,
											"end": 2606,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3068,
											"end": 3198,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 3068,
											"end": 3198,
											"name": "JUMPDEST"
										},
										{
											"begin": 3126,
											"end": 3133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 3156,
											"end": 3157,
											"name": "DUP4"
										},
										{
											"begin": 3159,
											"end": 3160,
											"name": "DUP4"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "MLOAD"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "DUP1"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "DUP1"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "DUP2"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "PUSH",
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "DUP2"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "POP"
										},
										{
											"begin": 3152,
											"end": 3155,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "JUMPDEST"
										},
										{
											"begin": 3145,
											"end": 3191,
											"name": "SWAP1"
										},
										{
											"begin": 3145,
											"end": 3191,
											"name": "POP"
										},
										{
											"begin": 3068,
											"end": 3198,
											"name": "SWAP3"
										},
										{
											"begin": 3068,
											"end": 3198,
											"name": "SWAP2"
										},
										{
											"begin": 3068,
											"end": 3198,
											"name": "POP"
										},
										{
											"begin": 3068,
											"end": 3198,
											"name": "POP"
										},
										{
											"begin": 3068,
											"end": 3198,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1017,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 841,
											"end": 1017,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 935,
											"name": "DUP3"
										},
										{
											"begin": 930,
											"end": 931,
											"name": "DUP5"
										},
										{
											"begin": 930,
											"end": 935,
											"name": "ADD"
										},
										{
											"begin": 918,
											"end": 935,
											"name": "SWAP1"
										},
										{
											"begin": 918,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 958,
											"end": 959,
											"name": "DUP4"
										},
										{
											"begin": 953,
											"end": 954,
											"name": "DUP2"
										},
										{
											"begin": 953,
											"end": 959,
											"name": "LT"
										},
										{
											"begin": 953,
											"end": 959,
											"name": "ISZERO"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "JUMPI"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "MLOAD"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "DUP2"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "MSTORE"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "ADD"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "DUP1"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "DUP1"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "ADD"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "DUP3"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "DUP2"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "SUB"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "DUP3"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "MSTORE"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "DUP2"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "MSTORE"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "ADD"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "DUP1"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "DUP2"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "MSTORE"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "POP"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "ADD"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "SWAP2"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "POP"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "POP"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "MLOAD"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "DUP1"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "SWAP2"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "SUB"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "SWAP1"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "REVERT"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 945,
											"end": 991,
											"name": "JUMPDEST"
										},
										{
											"begin": 1009,
											"end": 1010,
											"name": "DUP1"
										},
										{
											"begin": 1002,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 1002,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 1002,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 841,
											"end": 1017,
											"name": "SWAP3"
										},
										{
											"begin": 841,
											"end": 1017,
											"name": "SWAP2"
										},
										{
											"begin": 841,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 841,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 841,
											"end": 1017,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 838,
											"end": 969,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 838,
											"end": 969,
											"name": "JUMPDEST"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "DUP1"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "SLOAD"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "EXP"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "DIV"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "AND"
										},
										{
											"begin": 891,
											"end": 910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 891,
											"end": 910,
											"name": "AND"
										},
										{
											"begin": 891,
											"end": 901,
											"name": "CALLER"
										},
										{
											"begin": 891,
											"end": 910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 891,
											"end": 910,
											"name": "AND"
										},
										{
											"begin": 891,
											"end": 910,
											"name": "EQ"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "JUMPI"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "MLOAD"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP2"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "MSTORE"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "ADD"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "ADD"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP3"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP2"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "SUB"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP3"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "MSTORE"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP2"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "MSTORE"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "ADD"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH data",
											"value": "873D2051B76E0142B287297AFDFC273BF1AB5C24EE229ED4EF117F1FF0679A4A"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "SWAP2"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "CODECOPY"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "ADD"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "SWAP2"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "POP"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "POP"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "MLOAD"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "SWAP2"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "SUB"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "SWAP1"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "REVERT"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 883,
											"end": 962,
											"name": "JUMPDEST"
										},
										{
											"begin": 838,
											"end": 969,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 643,
											"end": 817,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 643,
											"end": 817,
											"name": "JUMPDEST"
										},
										{
											"begin": 725,
											"end": 810,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "DUP4"
										},
										{
											"begin": 774,
											"end": 779,
											"name": "DUP5"
										},
										{
											"begin": 774,
											"end": 788,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 774,
											"end": 788,
											"name": "AND"
										},
										{
											"begin": 774,
											"end": 788,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 774,
											"end": 797,
											"name": "SWAP1"
										},
										{
											"begin": 774,
											"end": 797,
											"name": "POP"
										},
										{
											"begin": 774,
											"end": 797,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 774,
											"end": 797,
											"name": "SHL"
										},
										{
											"begin": 799,
											"end": 801,
											"name": "DUP5"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "DUP5"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "MLOAD"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "ADD"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "DUP1"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "DUP4"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "AND"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "AND"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "ADD"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "DUP3"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "ADD"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "SWAP3"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "SWAP1"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "SWAP1"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "NOT"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 809,
											"name": "POP"
										},
										{
											"begin": 725,
											"end": 743,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 725,
											"end": 810,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 810,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 725,
											"end": 810,
											"name": "JUMPDEST"
										},
										{
											"begin": 643,
											"end": 817,
											"name": "POP"
										},
										{
											"begin": 643,
											"end": 817,
											"name": "POP"
										},
										{
											"begin": 643,
											"end": 817,
											"name": "POP"
										},
										{
											"begin": 643,
											"end": 817,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 823,
											"end": 1025,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 823,
											"end": 1025,
											"name": "JUMPDEST"
										},
										{
											"begin": 923,
											"end": 1018,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 942,
											"end": 947,
											"name": "DUP5"
										},
										{
											"begin": 972,
											"end": 977,
											"name": "DUP6"
										},
										{
											"begin": 972,
											"end": 990,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 972,
											"end": 990,
											"name": "AND"
										},
										{
											"begin": 972,
											"end": 990,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "SWAP1"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "POP"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "SHL"
										},
										{
											"begin": 1001,
											"end": 1005,
											"name": "DUP6"
										},
										{
											"begin": 1007,
											"end": 1009,
											"name": "DUP6"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP6"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "MLOAD"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "DUP5"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "AND"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "AND"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "DUP2"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "MSTORE"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "DUP4"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "AND"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "AND"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "DUP2"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "MSTORE"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "DUP3"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "DUP2"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "MSTORE"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "SWAP4"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "MSTORE"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "NOT"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 923,
											"end": 1018,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 923,
											"end": 1018,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 923,
											"end": 1018,
											"name": "JUMPDEST"
										},
										{
											"begin": 823,
											"end": 1025,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 1025,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 1025,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 1025,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 1025,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1713,
											"end": 1900,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 1713,
											"end": 1900,
											"name": "JUMPDEST"
										},
										{
											"begin": 1799,
											"end": 1806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "DUP4"
										},
										{
											"begin": 1826,
											"end": 1827,
											"name": "DUP4"
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "GT"
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "ISZERO"
										},
										{
											"begin": 1834,
											"end": 1846,
											"name": "DUP3"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "JUMPI"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "MLOAD"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP2"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "MSTORE"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "ADD"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "ADD"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP3"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP2"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SUB"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP3"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "MSTORE"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP4"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP2"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP2"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "MLOAD"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP2"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "MSTORE"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "ADD"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP2"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "MLOAD"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "ADD"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP4"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP2"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "ADD"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "AND"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "ISZERO"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "JUMPI"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP3"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SUB"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "MLOAD"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP4"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SUB"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "EXP"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SUB"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "NOT"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "AND"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP2"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "MSTORE"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "ADD"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP2"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP3"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "MLOAD"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "DUP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP2"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SUB"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "REVERT"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1857,
											"end": 1866,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1874,
											"name": "DUP4"
										},
										{
											"begin": 1869,
											"end": 1870,
											"name": "DUP6"
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "SUB"
										},
										{
											"begin": 1857,
											"end": 1874,
											"name": "SWAP1"
										},
										{
											"begin": 1857,
											"end": 1874,
											"name": "POP"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP1"
										},
										{
											"begin": 1885,
											"end": 1893,
											"name": "SWAP2"
										},
										{
											"begin": 1885,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1885,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1900,
											"name": "SWAP4"
										},
										{
											"begin": 1713,
											"end": 1900,
											"name": "SWAP3"
										},
										{
											"begin": 1713,
											"end": 1900,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1900,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1900,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1900,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3680,
											"end": 3952,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 3680,
											"end": 3952,
											"name": "JUMPDEST"
										},
										{
											"begin": 3766,
											"end": 3773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "DUP1"
										},
										{
											"begin": 3793,
											"end": 3794,
											"name": "DUP4"
										},
										{
											"begin": 3793,
											"end": 3798,
											"name": "GT"
										},
										{
											"begin": 3800,
											"end": 3812,
											"name": "DUP3"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "JUMPI"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "MLOAD"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP2"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "MSTORE"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "ADD"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "ADD"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP3"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP2"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SUB"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP3"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "MSTORE"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP4"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP2"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP2"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "MLOAD"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP2"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "MSTORE"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "ADD"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP2"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "MLOAD"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "ADD"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP4"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP2"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "ADD"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "AND"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "ISZERO"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "JUMPI"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP3"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SUB"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "MLOAD"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP4"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SUB"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "EXP"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SUB"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "NOT"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "AND"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP2"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "MSTORE"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "ADD"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP2"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "JUMPDEST"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP3"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "MLOAD"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "DUP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP2"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SUB"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "REVERT"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "JUMPDEST"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "POP"
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3840,
											"name": "DUP4"
										},
										{
											"begin": 3835,
											"end": 3836,
											"name": "DUP6"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "DUP2"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "JUMPI"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "INVALID"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "JUMPDEST"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "DIV"
										},
										{
											"begin": 3823,
											"end": 3840,
											"name": "SWAP1"
										},
										{
											"begin": 3823,
											"end": 3840,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 3945,
											"name": "DUP1"
										},
										{
											"begin": 3937,
											"end": 3945,
											"name": "SWAP2"
										},
										{
											"begin": 3937,
											"end": 3945,
											"name": "POP"
										},
										{
											"begin": 3937,
											"end": 3945,
											"name": "POP"
										},
										{
											"begin": 3680,
											"end": 3952,
											"name": "SWAP4"
										},
										{
											"begin": 3680,
											"end": 3952,
											"name": "SWAP3"
										},
										{
											"begin": 3680,
											"end": 3952,
											"name": "POP"
										},
										{
											"begin": 3680,
											"end": 3952,
											"name": "POP"
										},
										{
											"begin": 3680,
											"end": 3952,
											"name": "POP"
										},
										{
											"begin": 3680,
											"end": 3952,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2470,
											"end": 3339,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 2470,
											"end": 3339,
											"name": "JUMPDEST"
										},
										{
											"begin": 3013,
											"end": 3040,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 3021,
											"end": 3026,
											"name": "DUP3"
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "AND"
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 3013,
											"end": 3040,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3013,
											"end": 3040,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 3013,
											"end": 3040,
											"name": "JUMPDEST"
										},
										{
											"begin": 3005,
											"end": 3041,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 3005,
											"end": 3041,
											"name": "JUMPI"
										},
										{
											"begin": 3005,
											"end": 3041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3005,
											"end": 3041,
											"name": "DUP1"
										},
										{
											"begin": 3005,
											"end": 3041,
											"name": "REVERT"
										},
										{
											"begin": 3005,
											"end": 3041,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 3005,
											"end": 3041,
											"name": "JUMPDEST"
										},
										{
											"begin": 3112,
											"end": 3124,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3149,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "DUP4"
										},
										{
											"begin": 3153,
											"end": 3172,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3153,
											"end": 3172,
											"name": "AND"
										},
										{
											"begin": 3173,
											"end": 3177,
											"name": "DUP4"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "MLOAD"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "DUP1"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "DUP3"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "DUP1"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "MLOAD"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "SWAP1"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "ADD"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "SWAP1"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "DUP1"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "DUP4"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "SWAP1"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "ADD"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "SWAP2"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "MLOAD"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "DUP1"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "DUP4"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "SUB"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "DUP2"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "DUP7"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "GAS"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "CALL"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "SWAP2"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 3111,
											"end": 3178,
											"name": "SWAP2"
										},
										{
											"begin": 3111,
											"end": 3178,
											"name": "POP"
										},
										{
											"begin": 3111,
											"end": 3178,
											"name": "SWAP2"
										},
										{
											"begin": 3111,
											"end": 3178,
											"name": "POP"
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP2"
										},
										{
											"begin": 3188,
											"end": 3204,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 3188,
											"end": 3204,
											"name": "JUMPI"
										},
										{
											"begin": 3188,
											"end": 3204,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3204,
											"name": "DUP1"
										},
										{
											"begin": 3188,
											"end": 3204,
											"name": "REVERT"
										},
										{
											"begin": 3188,
											"end": 3204,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 3188,
											"end": 3204,
											"name": "JUMPDEST"
										},
										{
											"begin": 3239,
											"end": 3240,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3229,
											"name": "DUP2"
										},
										{
											"begin": 3219,
											"end": 3236,
											"name": "MLOAD"
										},
										{
											"begin": 3219,
											"end": 3240,
											"name": "GT"
										},
										{
											"begin": 3215,
											"end": 3333,
											"name": "ISZERO"
										},
										{
											"begin": 3215,
											"end": 3333,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 3215,
											"end": 3333,
											"name": "JUMPI"
										},
										{
											"begin": 3302,
											"end": 3312,
											"name": "DUP1"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "DUP1"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "ADD"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "SWAP1"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "DUP2"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "ADD"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "SWAP1"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "DUP1"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "DUP1"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "MLOAD"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "SWAP1"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "ADD"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "SWAP1"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "SWAP3"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "SWAP2"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "SWAP1"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "POP"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "POP"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "POP"
										},
										{
											"begin": 3283,
											"end": 3322,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 3283,
											"end": 3322,
											"name": "JUMPI"
										},
										{
											"begin": 3283,
											"end": 3322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3322,
											"name": "DUP1"
										},
										{
											"begin": 3283,
											"end": 3322,
											"name": "REVERT"
										},
										{
											"begin": 3283,
											"end": 3322,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 3283,
											"end": 3322,
											"name": "JUMPDEST"
										},
										{
											"begin": 3215,
											"end": 3333,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 3215,
											"end": 3333,
											"name": "JUMPDEST"
										},
										{
											"begin": 2470,
											"end": 3339,
											"name": "POP"
										},
										{
											"begin": 2470,
											"end": 3339,
											"name": "POP"
										},
										{
											"begin": 2470,
											"end": 3339,
											"name": "POP"
										},
										{
											"begin": 2470,
											"end": 3339,
											"name": "POP"
										},
										{
											"begin": 2470,
											"end": 3339,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 463,
											"end": 1079,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 463,
											"end": 1079,
											"name": "JUMPDEST"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 539,
											"end": 551,
											"name": "DUP1"
										},
										{
											"begin": 1038,
											"end": 1045,
											"name": "DUP3"
										},
										{
											"begin": 1026,
											"end": 1046,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1018,
											"end": 1046,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1046,
											"name": "POP"
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1064,
											"end": 1072,
											"name": "GT"
										},
										{
											"begin": 1057,
											"end": 1072,
											"name": "SWAP2"
										},
										{
											"begin": 1057,
											"end": 1072,
											"name": "POP"
										},
										{
											"begin": 1057,
											"end": 1072,
											"name": "POP"
										},
										{
											"begin": 463,
											"end": 1079,
											"name": "SWAP2"
										},
										{
											"begin": 463,
											"end": 1079,
											"name": "SWAP1"
										},
										{
											"begin": 463,
											"end": 1079,
											"name": "POP"
										},
										{
											"begin": 463,
											"end": 1079,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1149E36CD24095BEBC9341EF03810E0E2A00039190624DF6F2D7934141E2233B": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970",
										"7F2725172F5941B576A01EC7036D341E0C837E280F27B110CB3E6FD2F2C4A56": "50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64",
										"873D2051B76E0142B287297AFDFC273BF1AB5C24EE229ED4EF117F1FF0679A4A": "4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"B214273CDB244871F55E1966D43AD7FEBCE81860C609DDA0E226C7C1B7959D6F": "5468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e747261637420697320706175736564",
										"D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
										"F43DE9F2A3539B2AC9CF1844588E9CC0ACD1B2BDB1EC43734F76440993EDE0A9": "43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"lastPauseTime()": "91b4ded9",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"periodFinish()": "ebe2b12b",
							"recoverERC20(address,uint256)": "8980f11f",
							"rewardPerToken()": "cd3daf9d",
							"rewardPerTokenStored()": "df136d65",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"rewardsDistribution()": "3fc6df6e",
							"rewardsDuration()": "386a9525",
							"rewardsToken()": "d1af0c7d",
							"setPaused(bool)": "16c38b3c",
							"setRewardsDistribution(address)": "19762143",
							"setRewardsDuration(uint256)": "cc1a378f",
							"stake(uint256)": "a694fc3a",
							"stakingToken()": "72f702f3",
							"totalSupply()": "18160ddd",
							"userRewardPerTokenPaid(address)": "8b876347",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsDistribution\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDuration\",\"type\":\"uint256\"}],\"name\":\"RewardsDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastPauseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsDistribution\",\"type\":\"address\"}],\"name\":\"setRewardsDistribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"setRewardsDuration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"setPaused(bool)\":{\"details\":\"Only the contract owner may call this.\"}}},\"userdoc\":{\"methods\":{\"setPaused(bool)\":{\"notice\":\"Change the paused state of the contract\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/StakingReward.sol\":\"StakingRewards\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzz-raw://95b3b4b5c8008b6d8a862a797bf2550e8017cbff25d0e36be86cff48b1a9bbf2\",\"dweb:/ipfs/QmZWK9sD6V3jwSarEyheM8PjHFVcuA11W65FgAZ2fsu9sq\"]},\"contracts/ERC20Detailed.sol\":{\"keccak256\":\"0xa60f7f7ce98ca2d75c8e02da982d3fe91176269fdab2589bbbb7cc65f2d7c9d3\",\"urls\":[\"bzz-raw://474ed670385e8330760b0d43d630d26a325ab35a26833f57017293638b1cd203\",\"dweb:/ipfs/QmcH3d11kFcbYrJakfjdhLGakNG9hrWe9zYvTXhC7Kbb7D\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzz-raw://289216c82b0a5312ed8883e117d5dead4f62837b911df982a3e1a81cbb43aecf\",\"dweb:/ipfs/QmegSf8KXg7rFnEtQnu5XuTq6jYQXtge7UDCSZfhk7CkDq\"]},\"contracts/Owned.sol\":{\"keccak256\":\"0xc23b2f6e6f1ccfccd1b01fc93606d4ba7f64195df66205c98a2b3ec720460a09\",\"urls\":[\"bzz-raw://e9f9ad441799a1d3ed4ab6da804d939950c4ab16b677ca21cebdbe39b6a6ecaa\",\"dweb:/ipfs/QmYqjgBJvQteA4a9KYL7V23JsPxVVHfLYcTx862TzEmwoa\"]},\"contracts/Pausable.sol\":{\"keccak256\":\"0x6c65fd449670e73de471c36efc7f74738703df6ac1f6531982ed14f422d5d437\",\"urls\":[\"bzz-raw://f400d1ab41250418a1f860a1f0a7ba9f4c74af95b9f07e8fe58ca7b8c9101f0f\",\"dweb:/ipfs/QmRePpW4wisANQnZVGtTPUJdGBTe1DG5LfF7r1sbKSC1Rv\"]},\"contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125\",\"urls\":[\"bzz-raw://3a0d0d9fda879d3dbf20065ce1cb24188d1c66955b88b5b796584f9afc1c7600\",\"dweb:/ipfs/QmNTxvr3o1CNDvwrfD996h45RQMmJq9bmw2Adp6wGQNeXd\"]},\"contracts/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0x056a8d5170982ade44656c8a2b300f9a7818dd8ff8a59ea9bebbb2436067d6b1\",\"urls\":[\"bzz-raw://561272b2834502bdc5b290909e0d1589f202a478c10b48101c282e02082d3206\",\"dweb:/ipfs/QmUZZwrJmy4DobRSCpbCwCH8nbCcBBGaBXcy9HD5yGd91t\"]},\"contracts/SafeERC20.sol\":{\"keccak256\":\"0xdd310d913b96bb29437abbb6e01d5f2f0c1a20dc79b65504990dab6f20848b7e\",\"urls\":[\"bzz-raw://c68f8e526799cd3908991608f36129721345350425e23a009845f915e30bc88f\",\"dweb:/ipfs/QmNT3Bdv8EASgSGgYUmz3QURe8YGU4Qch57XBKaQZLDGw5\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0xbd3766507e47157b50f655d7002fde93b02ddd79a1582e0cd289bfcab255b70e\",\"urls\":[\"bzz-raw://8ab0be9d810fb055a554c4cc16ca40eee565bd18fdb3a92d7b323a83037cc3c0\",\"dweb:/ipfs/QmPHHb6KHZRuKBvbAGRjEobfMngobNkMYGEzMzqNBwGNhZ\"]},\"contracts/StakingReward.sol\":{\"keccak256\":\"0x3040e547c7ac43fa0f791a85427207e7b7ba1a8b2de33866022a02d775f0e95a\",\"urls\":[\"bzz-raw://5291eb816e78bad39d84c2caa5fea2b7b1dadf0ed7f6ff80b66eaaeaace510cb\",\"dweb:/ipfs/QmXS8g58mcKL5oYoHN8EArCSvNEjYz9LZAa8LTVr7k2jGq\"]},\"contracts/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0x6e1aba50c88c451c463da176d3542edb608211cad3453d6d0f0e6200aff9cb8c\",\"urls\":[\"bzz-raw://0026fc259ffb98d0449ad322fc644481dea4cff48f2d72d4433602aa1a312f7a\",\"dweb:/ipfs/QmTWkPmWm1RCbomExfhp2oKrLDvoA5VXvY1VcTHn9wEyDm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 149,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 151,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 354,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "rewardsDistribution",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 320,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "_guardCounter",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 257,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "lastPauseTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 259,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 811,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 1,
								"slot": "5",
								"type": "t_contract(IERC20)145"
							},
							{
								"astId": 813,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "stakingToken",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)145"
							},
							{
								"astId": 816,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "periodFinish",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 819,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "rewardRate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 822,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "rewardsDuration",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 824,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 826,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 830,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 834,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 836,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 840,
								"contract": "contracts/StakingReward.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)145": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"setPaused(bool)": {
								"notice": "Change the paused state of the contract"
							}
						}
					}
				}
			},
			"contracts/interfaces/IStakingRewards.sol": {
				"IStakingRewards": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"lastTimeRewardApplicable()": "80faa57d",
							"rewardPerToken()": "cd3daf9d",
							"rewardsDistribution()": "3fc6df6e",
							"rewardsToken()": "d1af0c7d",
							"stake(uint256)": "a694fc3a",
							"totalSupply()": "18160ddd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakingRewards.sol\":\"IStakingRewards\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0x6e1aba50c88c451c463da176d3542edb608211cad3453d6d0f0e6200aff9cb8c\",\"urls\":[\"bzz-raw://0026fc259ffb98d0449ad322fc644481dea4cff48f2d72d4433602aa1a312f7a\",\"dweb:/ipfs/QmTWkPmWm1RCbomExfhp2oKrLDvoA5VXvY1VcTHn9wEyDm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Address.sol": {
				"ast": {
					"absolutePath": "contracts/Address.sol",
					"exportedSymbols": {
						"Address": [
							18
						]
					},
					"id": 19,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "Utility library of inline functions on addresses",
							"fullyImplemented": true,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "529:550:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 16,
														"src": "539:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 8,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "539:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 10,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "539:12:0"
											},
											{
												"externalReferences": [
													{
														"size": {
															"declaration": 9,
															"isOffset": false,
															"isSlot": false,
															"src": "1018:4:0",
															"valueSize": 1
														}
													},
													{
														"account": {
															"declaration": 3,
															"isOffset": false,
															"isSlot": false,
															"src": "1038:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 11,
												"nodeType": "InlineAssembly",
												"operations": "{ size := extcodesize(account) }",
												"src": "1007:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 12,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1064:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1071:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1064:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 7,
												"id": 15,
												"nodeType": "Return",
												"src": "1057:15:0"
											}
										]
									},
									"documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\nas the code is not actually created until after the constructor finishes.\n@param account address of the account to check\n@return whether the target address is a contract",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "483:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "482:17:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "523:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "523:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "522:6:0"
									},
									"scope": 18,
									"src": "463:616:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 19,
							"src": "85:996:0"
						}
					],
					"src": "0:1082:0"
				},
				"id": 0
			},
			"contracts/ERC20Detailed.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20Detailed.sol",
					"exportedSymbols": {
						"ERC20Detailed": [
							76
						]
					},
					"id": 77,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 20,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 21,
							"nodeType": "ImportDirective",
							"scope": 77,
							"sourceUnit": 146,
							"src": "25:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 22,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 145,
										"src": "308:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$145",
											"typeString": "contract IERC20"
										}
									},
									"id": 23,
									"nodeType": "InheritanceSpecifier",
									"src": "308:6:1"
								}
							],
							"contractDependencies": [
								145
							],
							"contractKind": "contract",
							"documentation": "@title ERC20Detailed token\n@dev The decimals are only for visualization purposes.\nAll the operations are done using the smallest and indivisible token unit,\njust as on Ethereum all the operations are done in wei.",
							"fullyImplemented": false,
							"id": 76,
							"linearizedBaseContracts": [
								76,
								145
							],
							"name": "ERC20Detailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 25,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 76,
									"src": "321:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "321:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 76,
									"src": "347:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "347:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 76,
									"src": "375:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 28,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "375:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "483:85:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 38,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "493:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 39,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "501:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "493:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "493:12:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 42,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "515:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 43,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "525:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "515:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "515:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 47,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "553:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "541:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "541:20:1"
											}
										]
									},
									"documentation": null,
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "418:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 30,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "418:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "438:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 32,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "460:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 34,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "460:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "417:58:1"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "483:0:1"
									},
									"scope": 76,
									"src": "405:163:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "680:29:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 56,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "697:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 55,
												"id": 57,
												"nodeType": "Return",
												"src": "690:12:1"
											}
										]
									},
									"documentation": "@return the name of the token.",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "641:2:1"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "665:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "665:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "664:15:1"
									},
									"scope": 76,
									"src": "628:81:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "825:31:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "842:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "835:14:1"
											}
										]
									},
									"documentation": "@return the symbol of the token.",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:2:1"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "810:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 61,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "810:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "809:15:1"
									},
									"scope": 76,
									"src": "771:85:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "978:33:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 72,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "995:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 71,
												"id": 73,
												"nodeType": "Return",
												"src": "988:16:1"
											}
										]
									},
									"documentation": "@return the number of decimals of the token.",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:2:1"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "971:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 69,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "971:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "970:7:1"
									},
									"scope": 76,
									"src": "930:81:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 77,
							"src": "282:731:1"
						}
					],
					"src": "0:1014:1"
				},
				"id": 1
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							145
						]
					},
					"id": 146,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@title ERC20 interface\n@dev see https://eips.ethereum.org/EIPS/eip-20",
							"fullyImplemented": false,
							"id": 145,
							"linearizedBaseContracts": [
								145
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "150:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "162:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "149:27:2"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "195:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 84,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "195:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "194:6:2"
									},
									"scope": 145,
									"src": "132:69:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "224:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "241:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "223:32:2"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "274:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 93,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "274:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "273:6:2"
									},
									"scope": 145,
									"src": "207:73:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "308:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "322:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "334:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "307:41:2"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "367:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "367:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "366:6:2"
									},
									"scope": 145,
									"src": "286:87:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:2:2"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "425:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "424:9:2"
									},
									"scope": 145,
									"src": "379:55:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "459:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "458:13:2"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "495:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "494:9:2"
									},
									"scope": 145,
									"src": "440:64:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "529:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "544:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "528:32:2"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "584:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "583:9:2"
									},
									"scope": 145,
									"src": "510:83:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 136,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "614:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "636:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "656:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "613:57:2"
									},
									"src": "599:72:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 144,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "692:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "715:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "740:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:63:2"
									},
									"src": "677:78:2"
								}
							],
							"scope": 146,
							"src": "109:648:2"
						}
					],
					"src": "0:758:2"
				},
				"id": 2
			},
			"contracts/Owned.sol": {
				"ast": {
					"absolutePath": "contracts/Owned.sol",
					"exportedSymbols": {
						"Owned": [
							250
						]
					},
					"id": 251,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 147,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "Owned",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 149,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "108:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 148,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "108:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 151,
									"name": "nominatedOwner",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "134:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 150,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "134:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "205:146:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 157,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "223:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "241:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "233:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "233:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "223:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e657220616464726573732063616e6e6f742062652030",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "245:27:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96",
																"typeString": "literal_string \"Owner address cannot be 0\""
															},
															"value": "Owner address cannot be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96",
																"typeString": "literal_string \"Owner address cannot be 0\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "215:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "215:58:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "215:58:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 165,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "283:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 166,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "291:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "283:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "283:14:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "333:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "325:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "325:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 173,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "337:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 169,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "312:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "312:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "EmitStatement",
												"src": "307:37:3"
											}
										]
									},
									"documentation": null,
									"id": 177,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "182:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "181:16:3"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:0:3"
									},
									"scope": 250,
									"src": "170:181:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "418:77:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 184,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "428:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 185,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "445:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "428:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "428:23:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 189,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "481:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 188,
														"name": "OwnerNominated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "466:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "466:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "461:27:3"
											}
										]
									},
									"documentation": null,
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 182,
											"modifierName": {
												"argumentTypes": null,
												"id": 181,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 227,
												"src": "408:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "408:9:3"
										}
									],
									"name": "nominateNewOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "383:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "382:16:3"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "418:0:3"
									},
									"scope": 250,
									"src": "357:138:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "537:230:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 197,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "555:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "555:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 199,
																"name": "nominatedOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "569:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "555:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970",
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "585:55:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b",
																"typeString": "literal_string \"You must be nominated before you can accept ownership\""
															},
															"value": "You must be nominated before you can accept ownership"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b",
																"typeString": "literal_string \"You must be nominated before you can accept ownership\""
															}
														],
														"id": 196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "547:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "547:94:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "547:94:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 205,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 206,
															"name": "nominatedOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "676:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 204,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "656:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "656:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "EmitStatement",
												"src": "651:40:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 209,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "701:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 210,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "709:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "701:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "701:22:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 213,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "733:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "758:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "750:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "750:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "733:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "733:27:3"
											}
										]
									},
									"documentation": null,
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "525:2:3"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "537:0:3"
									},
									"scope": 250,
									"src": "501:266:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "792:40:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 222,
														"name": "_onlyOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "802:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "802:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "802:12:3"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "824:1:3"
											}
										]
									},
									"documentation": null,
									"id": 227,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "792:0:3"
									},
									"src": "773:59:3",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "873:96:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 231,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "891:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "891:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 233,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "905:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "891:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "912:49:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a",
																"typeString": "literal_string \"Only the contract owner may perform this action\""
															},
															"value": "Only the contract owner may perform this action"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a",
																"typeString": "literal_string \"Only the contract owner may perform this action\""
															}
														],
														"id": 230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "883:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "883:79:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "883:79:3"
											}
										]
									},
									"documentation": null,
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:2:3"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "873:0:3"
									},
									"scope": 250,
									"src": "838:131:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 243,
									"name": "OwnerNominated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"indexed": false,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "996:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "995:18:3"
									},
									"src": "975:39:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 249,
									"name": "OwnerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"indexed": false,
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1038:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1056:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1037:36:3"
									},
									"src": "1019:55:3"
								}
							],
							"scope": 251,
							"src": "87:989:3"
						}
					],
					"src": "0:1077:3"
				},
				"id": 3
			},
			"contracts/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/Pausable.sol",
					"exportedSymbols": {
						"Pausable": [
							316
						]
					},
					"id": 317,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"absolutePath": "contracts/Owned.sol",
							"file": "./Owned.sol",
							"id": 253,
							"nodeType": "ImportDirective",
							"scope": 317,
							"sourceUnit": 251,
							"src": "40:21:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 254,
										"name": "Owned",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 250,
										"src": "149:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Owned_$250",
											"typeString": "contract Owned"
										}
									},
									"id": 255,
									"nodeType": "InheritanceSpecifier",
									"src": "149:5:4"
								}
							],
							"contractDependencies": [
								250
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 316,
							"linearizedBaseContracts": [
								316,
								250
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 257,
									"name": "lastPauseTime",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "161:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 256,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "161:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 259,
									"name": "paused",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "192:18:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 258,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "192:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "240:226:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 263,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "337:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "354:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "346:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "346:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "337:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e6572206d75737420626520736574",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "358:19:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c87338ddde5ff52c699ea56bd9b81e21603f0adc0875fd9959e16afe2346ac96",
																"typeString": "literal_string \"Owner must be set\""
															},
															"value": "Owner must be set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c87338ddde5ff52c699ea56bd9b81e21603f0adc0875fd9959e16afe2346ac96",
																"typeString": "literal_string \"Owner must be set\""
															}
														],
														"id": 262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "329:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "329:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "329:49:4"
											}
										]
									},
									"documentation": null,
									"id": 272,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:4"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:0:4"
									},
									"scope": 316,
									"src": "217:249:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "646:420:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 279,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "734:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 280,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "745:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "734:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 284,
												"nodeType": "IfStatement",
												"src": "730:54:4",
												"trueBody": {
													"id": 283,
													"nodeType": "Block",
													"src": "753:31:4",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 278,
															"id": 282,
															"nodeType": "Return",
															"src": "767:7:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 285,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "827:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 286,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "836:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "827:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "827:16:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 289,
													"name": "paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "909:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 295,
												"nodeType": "IfStatement",
												"src": "905:56:4",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "917:44:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 290,
																	"name": "lastPauseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "931:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 291,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "947:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "931:19:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 297,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "1052:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 296,
														"name": "PauseChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "1039:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1039:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "EmitStatement",
												"src": "1034:25:4"
											}
										]
									},
									"documentation": "@notice Change the paused state of the contract\n@dev Only the contract owner may call this.",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 277,
											"modifierName": {
												"argumentTypes": null,
												"id": 276,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 227,
												"src": "636:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "636:9:4"
										}
									],
									"name": "setPaused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"name": "_paused",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "613:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "613:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "612:14:4"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:0:4"
									},
									"scope": 316,
									"src": "594:472:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 305,
									"name": "PauseChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"indexed": false,
												"name": "isPaused",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1091:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1091:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1090:15:4"
									},
									"src": "1072:34:4"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "1131:108:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1149:7:4",
															"subExpression": {
																"argumentTypes": null,
																"id": 308,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "1150:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e747261637420697320706175736564",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1158:62:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f",
																"typeString": "literal_string \"This action cannot be performed while the contract is paused\""
															},
															"value": "This action cannot be performed while the contract is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f",
																"typeString": "literal_string \"This action cannot be performed while the contract is paused\""
															}
														],
														"id": 307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "1141:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1141:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "1141:80:4"
											},
											{
												"id": 313,
												"nodeType": "PlaceholderStatement",
												"src": "1231:1:4"
											}
										]
									},
									"documentation": null,
									"id": 315,
									"name": "notPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1131:0:4"
									},
									"src": "1112:127:4",
									"visibility": "internal"
								}
							],
							"scope": 317,
							"src": "128:1113:4"
						}
					],
					"src": "0:1242:4"
				},
				"id": 4
			},
			"contracts/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "contracts/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							347
						]
					},
					"id": 348,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Helps contracts guard against reentrancy attacks.\n@author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\n@dev If you mark a function `nonReentrant`, you should also\nmark it `external`.",
							"fullyImplemented": true,
							"id": 347,
							"linearizedBaseContracts": [
								347
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 320,
									"name": "_guardCounter",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "351:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 319,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "351:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "411:173:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 323,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "560:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "576:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "560:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "560:17:5"
											}
										]
									},
									"documentation": null,
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:2:5"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "411:0:5"
									},
									"scope": 347,
									"src": "387:197:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "983:140:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 330,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "993:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1010:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "993:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "993:18:5"
											},
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"name": "localCounter",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "1021:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1021:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 337,
												"initialValue": {
													"argumentTypes": null,
													"id": 336,
													"name": "_guardCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 320,
													"src": "1044:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1021:36:5"
											},
											{
												"id": 338,
												"nodeType": "PlaceholderStatement",
												"src": "1067:1:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 340,
																"name": "localCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "1086:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 341,
																"name": "_guardCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 320,
																"src": "1102:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1086:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1440,
														"src": "1078:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1078:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "1078:38:5"
											}
										]
									},
									"documentation": "@dev Prevents a contract from calling itself, directly or indirectly.\nCalling a `nonReentrant` function from another `nonReentrant`\nfunction is not supported. It is possible to prevent this from happening\nby making the `nonReentrant` function external, and make it call a\n`private` function that does the actual work.",
									"id": 346,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "980:2:5"
									},
									"src": "959:164:5",
									"visibility": "internal"
								}
							],
							"scope": 348,
							"src": "248:877:5"
						}
					],
					"src": "0:1126:5"
				},
				"id": 5
			},
			"contracts/RewardsDistributionRecipient.sol": {
				"ast": {
					"absolutePath": "contracts/RewardsDistributionRecipient.sol",
					"exportedSymbols": {
						"RewardsDistributionRecipient": [
							384
						]
					},
					"id": 385,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 349,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"absolutePath": "contracts/Owned.sol",
							"file": "./Owned.sol",
							"id": 350,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 251,
							"src": "40:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 351,
										"name": "Owned",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 250,
										"src": "189:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Owned_$250",
											"typeString": "contract Owned"
										}
									},
									"id": 352,
									"nodeType": "InheritanceSpecifier",
									"src": "189:5:6"
								}
							],
							"contractDependencies": [
								250
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								250
							],
							"name": "RewardsDistributionRecipient",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 354,
									"name": "rewardsDistribution",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "201:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 353,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "201:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "270:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "269:16:6"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:0:6"
									},
									"scope": 384,
									"src": "242:53:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "336:116:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 362,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "354:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "354:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 364,
																"name": "rewardsDistribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "368:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "354:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "389:44:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																"typeString": "literal_string \"Caller is not RewardsDistribution contract\""
															},
															"value": "Caller is not RewardsDistribution contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																"typeString": "literal_string \"Caller is not RewardsDistribution contract\""
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "346:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "346:88:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "346:88:6"
											},
											{
												"id": 369,
												"nodeType": "PlaceholderStatement",
												"src": "444:1:6"
											}
										]
									},
									"documentation": null,
									"id": 371,
									"name": "onlyRewardsDistribution",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "333:2:6"
									},
									"src": "301:151:6",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "539:59:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 378,
														"name": "rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "549:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 379,
														"name": "_rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "571:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "549:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "549:42:6"
											}
										]
									},
									"documentation": null,
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 376,
											"modifierName": {
												"argumentTypes": null,
												"id": 375,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 227,
												"src": "529:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "529:9:6"
										}
									],
									"name": "setRewardsDistribution",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"name": "_rewardsDistribution",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "490:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "489:30:6"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "539:0:6"
									},
									"scope": 384,
									"src": "458:140:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "148:452:6"
						}
					],
					"src": "0:601:6"
				},
				"id": 6
			},
			"contracts/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							599
						]
					},
					"id": 600,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:7"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 387,
							"nodeType": "ImportDirective",
							"scope": 600,
							"sourceUnit": 146,
							"src": "25:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 388,
							"nodeType": "ImportDirective",
							"scope": 600,
							"sourceUnit": 787,
							"src": "48:24:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Address.sol",
							"file": "./Address.sol",
							"id": 389,
							"nodeType": "ImportDirective",
							"scope": 600,
							"sourceUnit": 19,
							"src": "73:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
							"fullyImplemented": true,
							"id": 599,
							"linearizedBaseContracts": [
								599
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 392,
									"libraryName": {
										"contractScope": null,
										"id": 390,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 786,
										"src": "585:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$786",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "579:27:7",
									"typeName": {
										"id": 391,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "598:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 395,
									"libraryName": {
										"contractScope": null,
										"id": 393,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 18,
										"src": "617:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$18",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "611:26:7",
									"typeName": {
										"id": 394,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "629:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "715:102:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 405,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "744:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 408,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "774:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$145",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 87,
																		"src": "774:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "774:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 411,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "799:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 412,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "803:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 406,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "751:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "751:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "751:58:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 404,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "725:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "725:85:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "725:85:7"
											}
										]
									},
									"documentation": null,
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "665:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 396,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 145,
													"src": "665:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "679:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "691:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "664:41:7"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:0:7"
									},
									"scope": 599,
									"src": "643:174:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "913:112:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "942:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 432,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "972:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$145",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "972:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "972:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 435,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "1001:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 436,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "1007:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 437,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "1011:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "949:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "949:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "949:68:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "923:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "923:95:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "923:95:7"
											}
										]
									},
									"documentation": null,
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "849:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 418,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 145,
													"src": "849:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "863:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "877:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "889:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "848:55:7"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:7"
									},
									"scope": 599,
									"src": "823:202:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "1107:404:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 452,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 448,
																			"src": "1343:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1352:1:7",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1343:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 455,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1342:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 459,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1467,
																							"src": "1383:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$599",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$599",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 458,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1375:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 460,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1375:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 461,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "1390:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 456,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "1359:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$145",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 128,
																				"src": "1359:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1359:39:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1402:1:7",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1359:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 465,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1358:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1342:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1440,
														"src": "1334:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:71:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "1334:71:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 470,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "1434:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 473,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 444,
																			"src": "1464:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$145",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "1464:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1464:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 476,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "1488:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 477,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "1497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 471,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "1441:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1441:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1441:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 469,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "1415:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1415:89:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "1415:89:7"
											}
										]
									},
									"documentation": null,
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1052:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 443,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 145,
													"src": "1052:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1066:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1083:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1051:46:7"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:0:7"
									},
									"scope": 599,
									"src": "1031:480:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "1603:196:7",
										"statements": [
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "1613:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 491,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1613:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 501,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "1680:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 496,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "1660:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$599",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$599",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1652:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1652:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 498,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "1667:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 493,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "1636:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 128,
																"src": "1636:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 626,
														"src": "1636:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1636:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:73:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 505,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "1715:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 508,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "1745:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$145",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "1745:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1745:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 511,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "1769:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 512,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "1778:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 506,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "1722:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1722:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1722:69:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 504,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "1696:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1696:96:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "1696:96:7"
											}
										]
									},
									"documentation": null,
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1548:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 483,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 145,
													"src": "1548:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1562:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1579:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1547:46:7"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1603:0:7"
									},
									"scope": 599,
									"src": "1517:282:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "1891:196:7",
										"statements": [
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "1901:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1901:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 536,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "1968:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 531,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "1948:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$599",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$599",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1940:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1940:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "1955:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 528,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "1924:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 128,
																"src": "1924:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1924:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 642,
														"src": "1924:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1901:73:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 540,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2003:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 543,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "2033:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$145",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "2033:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2033:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 546,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "2057:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 547,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "2066:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 541,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "2010:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2010:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2010:69:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 539,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "1984:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1984:96:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "1984:96:7"
											}
										]
									},
									"documentation": null,
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "1836:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 518,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 145,
													"src": "1836:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "1850:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "1867:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1867:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1835:46:7"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1891:0:7"
									},
									"scope": 599,
									"src": "1805:282:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "2539:800:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 561,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "3021:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$145",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$145",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3013:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3013:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 17,
																"src": "3013:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3013:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 559,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1440,
														"src": "3005:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3005:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "3005:36:7"
											},
											{
												"assignments": [
													568,
													570
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "3112:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 567,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3112:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 570,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "3126:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 569,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3126:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 577,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 575,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "3173:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "3161:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3153:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3153:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3153:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3153:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:67:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 579,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "3196:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1440,
														"src": "3188:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3188:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "3188:16:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 582,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "3219:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3219:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3239:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3219:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 596,
												"nodeType": "IfStatement",
												"src": "3215:118:7",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "3242:91:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 589,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 570,
																				"src": "3302:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 590,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3315:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": "bool"
																					}
																				],
																				"id": 591,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3314:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 587,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1424,
																				"src": "3291:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3291:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3291:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 586,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1440,
																		1441
																	],
																	"referencedDeclaration": 1440,
																	"src": "3283:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3283:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 594,
															"nodeType": "ExpressionStatement",
															"src": "3283:39:7"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2498:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 553,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 145,
													"src": "2498:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2512:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2512:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2497:33:7"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2539:0:7"
									},
									"scope": 599,
									"src": "2470:869:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 600,
							"src": "555:2786:7"
						}
					],
					"src": "0:3342:7"
				},
				"id": 7
			},
			"contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							786
						]
					},
					"id": 787,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 601,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 786,
							"linearizedBaseContracts": [
								786
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "908:109:8",
										"statements": [
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "918:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 610,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "918:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 615,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 612,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "930:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 613,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "934:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "918:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 617,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "953:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 618,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "958:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "953:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:29:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "945:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "945:46:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "945:46:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 623,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 611,
													"src": "1009:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 609,
												"id": 624,
												"nodeType": "Return",
												"src": "1002:8:8"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n     * - Addition cannot overflow.",
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "854:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "865:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "853:22:8"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "899:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "898:9:8"
									},
									"scope": 786,
									"src": "841:176:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1355:67:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 636,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "1376:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 637,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "1379:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1382:32:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 635,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															642,
															669
														],
														"referencedDeclaration": 669,
														"src": "1372:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1372:43:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 634,
												"id": 640,
												"nodeType": "Return",
												"src": "1365:50:8"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow.",
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1301:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1312:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1300:22:8"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1346:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1345:9:8"
									},
									"scope": 786,
									"src": "1288:134:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "1808:92:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 654,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "1826:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 655,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "1831:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1826:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 657,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "1834:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "1818:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1818:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "1818:29:8"
											},
											{
												"assignments": [
													661
												],
												"declarations": [
													{
														"constant": false,
														"id": 661,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "1857:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 660,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1857:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 665,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 662,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "1869:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 663,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "1873:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1869:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1857:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 666,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 661,
													"src": "1892:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 652,
												"id": 667,
												"nodeType": "Return",
												"src": "1885:8:8"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow.",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1726:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1737:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1748:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1748:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1725:50:8"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1799:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1798:9:8"
									},
									"scope": 786,
									"src": "1713:187:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "2214:392:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 678,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2446:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2451:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2446:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 684,
												"nodeType": "IfStatement",
												"src": "2442:45:8",
												"trueBody": {
													"id": 683,
													"nodeType": "Block",
													"src": "2454:33:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2475:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 677,
															"id": 682,
															"nodeType": "Return",
															"src": "2468:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "2497:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2497:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 690,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 687,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2509:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 688,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "2513:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 692,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "2532:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 693,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "2536:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2532:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 695,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "2541:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2532:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2544:35:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "2524:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2524:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "2524:56:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 700,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 686,
													"src": "2598:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 677,
												"id": 701,
												"nodeType": "Return",
												"src": "2591:8:8"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n     * - Multiplication cannot overflow.",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2160:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2171:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2159:22:8"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2205:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2204:9:8"
									},
									"scope": 786,
									"src": "2147:459:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "3135:63:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 713,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "3156:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 714,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "3159:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3162:28:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 712,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															719,
															746
														],
														"referencedDeclaration": 746,
														"src": "3152:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3152:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 711,
												"id": 717,
												"nodeType": "Return",
												"src": "3145:46:8"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3081:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3081:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3092:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3092:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3080:22:8"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3126:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3126:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3125:9:8"
									},
									"scope": 786,
									"src": "3068:130:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "3775:177:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 731,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "3793:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3797:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3793:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 734,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "3800:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "3785:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3785:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "3785:28:8"
											},
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "3823:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3823:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 742,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 739,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "3835:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 740,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "3839:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3835:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3823:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 743,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 738,
													"src": "3944:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 744,
												"nodeType": "Return",
												"src": "3937:8:8"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3693:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3693:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3704:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3704:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3715:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 724,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3715:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3692:50:8"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3766:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3766:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3765:9:8"
									},
									"scope": 786,
									"src": "3680:272:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "4470:61:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 756,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "4491:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 757,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "4494:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4497:26:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 755,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															785
														],
														"referencedDeclaration": 785,
														"src": "4487:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4487:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 754,
												"id": 760,
												"nodeType": "Return",
												"src": "4480:44:8"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "4416:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4416:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "4427:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4427:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4415:22:8"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "4461:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4460:9:8"
									},
									"scope": 786,
									"src": "4403:128:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5097:68:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 774,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "5115:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5120:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5115:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 777,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "5123:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "5107:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5107:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "5107:29:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 780,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "5153:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 781,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "5157:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5153:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 783,
												"nodeType": "Return",
												"src": "5146:12:8"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5015:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5026:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5037:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 767,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5037:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5014:50:8"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5088:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5088:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5087:9:8"
									},
									"scope": 786,
									"src": "5002:163:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 787,
							"src": "589:4578:8"
						}
					],
					"src": "0:5168:8"
				},
				"id": 8
			},
			"contracts/StakingReward.sol": {
				"ast": {
					"absolutePath": "contracts/StakingReward.sol",
					"exportedSymbols": {
						"StakingRewards": [
							1359
						]
					},
					"id": 1360,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 788,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:9"
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 789,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 787,
							"src": "27:24:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ERC20Detailed.sol",
							"file": "./ERC20Detailed.sol",
							"id": 790,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 77,
							"src": "53:29:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeERC20.sol",
							"file": "./SafeERC20.sol",
							"id": 791,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 600,
							"src": "84:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ReentrancyGuard.sol",
							"file": "./ReentrancyGuard.sol",
							"id": 792,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 348,
							"src": "111:31:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IStakingRewards.sol",
							"file": "./interfaces/IStakingRewards.sol",
							"id": 793,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 1423,
							"src": "162:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/RewardsDistributionRecipient.sol",
							"file": "./RewardsDistributionRecipient.sol",
							"id": 794,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 385,
							"src": "206:44:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Pausable.sol",
							"file": "./Pausable.sol",
							"id": 795,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 317,
							"src": "252:24:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 796,
										"name": "IStakingRewards",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1422,
										"src": "379:15:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IStakingRewards_$1422",
											"typeString": "contract IStakingRewards"
										}
									},
									"id": 797,
									"nodeType": "InheritanceSpecifier",
									"src": "379:15:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 798,
										"name": "RewardsDistributionRecipient",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 384,
										"src": "396:28:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_RewardsDistributionRecipient_$384",
											"typeString": "contract RewardsDistributionRecipient"
										}
									},
									"id": 799,
									"nodeType": "InheritanceSpecifier",
									"src": "396:28:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 800,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 347,
										"src": "426:15:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$347",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 801,
									"nodeType": "InheritanceSpecifier",
									"src": "426:15:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 802,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 316,
										"src": "443:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$316",
											"typeString": "contract Pausable"
										}
									},
									"id": 803,
									"nodeType": "InheritanceSpecifier",
									"src": "443:8:9"
								}
							],
							"contractDependencies": [
								250,
								316,
								347,
								384,
								1422
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1359,
							"linearizedBaseContracts": [
								1359,
								316,
								347,
								384,
								250,
								1422
							],
							"name": "StakingRewards",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 806,
									"libraryName": {
										"contractScope": null,
										"id": 804,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 786,
										"src": "465:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$786",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "459:27:9",
									"typeName": {
										"id": 805,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "478:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 809,
									"libraryName": {
										"contractScope": null,
										"id": 807,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 599,
										"src": "498:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$599",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "492:27:9",
									"typeName": {
										"contractScope": null,
										"id": 808,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 145,
										"src": "512:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$145",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 811,
									"name": "rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "578:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$145",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 810,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 145,
										"src": "578:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$145",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 813,
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "611:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$145",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 812,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 145,
										"src": "611:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$145",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 816,
									"name": "periodFinish",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "644:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 814,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "644:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 815,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "674:1:9",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 819,
									"name": "rewardRate",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "682:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 817,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 818,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "710:1:9",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 822,
									"name": "rewardsDuration",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "718:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 820,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "37",
										"id": 821,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "751:6:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 824,
									"name": "lastUpdateTime",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "764:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 823,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "764:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 826,
									"name": "rewardPerTokenStored",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "800:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 825,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "800:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 830,
									"name": "userRewardPerTokenPaid",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "844:57:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 829,
										"keyType": {
											"id": 827,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "852:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "844:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 828,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "863:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 834,
									"name": "rewards",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "908:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 833,
										"keyType": {
											"id": 831,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "916:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "908:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 832,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "927:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 836,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "959:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 835,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "959:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 840,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "994:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 839,
										"keyType": {
											"id": 837,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1002:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "994:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 838,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1013:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "1263:155:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 854,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "1274:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 856,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "1296:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 855,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "1289:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$145_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"src": "1274:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "1274:36:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 860,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "1321:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 862,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "1343:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 861,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "1336:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$145_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1336:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"src": "1321:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "1321:36:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 866,
														"name": "rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "1368:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 867,
														"name": "_rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "1390:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1368:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "1368:42:9"
											}
										]
									},
									"documentation": null,
									"id": 871,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 851,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 842,
													"src": "1255:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 852,
											"modifierName": {
												"argumentTypes": null,
												"id": 850,
												"name": "Owned",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 250,
												"src": "1249:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_Owned_$250_$",
													"typeString": "type(contract Owned)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1249:13:9"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1117:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"name": "_rewardsDistribution",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1142:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"name": "_rewardsToken",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1181:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"name": "_stakingToken",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1213:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1106:135:9"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1263:0:9"
									},
									"scope": 1359,
									"src": "1095:323:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "1522:38:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 876,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "1540:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 875,
												"id": 877,
												"nodeType": "Return",
												"src": "1533:19:9"
											}
										]
									},
									"documentation": null,
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1487:2:9"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1513:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1512:9:9"
									},
									"scope": 1359,
									"src": "1467:93:9",
									"stateMutability": "view",
									"superFunction": 1405,
									"visibility": "external"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "1636:44:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 886,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1654:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 888,
													"indexExpression": {
														"argumentTypes": null,
														"id": 887,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "1664:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1654:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 885,
												"id": 889,
												"nodeType": "Return",
												"src": "1647:25:9"
											}
										]
									},
									"documentation": null,
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "1587:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1586:17:9"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "1627:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1626:9:9"
									},
									"scope": 1359,
									"src": "1568:112:9",
									"stateMutability": "view",
									"superFunction": 1368,
									"visibility": "external"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "1754:89:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 896,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "1772:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1772:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 898,
															"name": "periodFinish",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1790:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1772:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 902,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "1823:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1772:63:9",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 900,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "1805:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1805:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 895,
												"id": 904,
												"nodeType": "Return",
												"src": "1765:70:9"
											}
										]
									},
									"documentation": null,
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:2:9"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1745:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1744:9:9"
									},
									"scope": 1359,
									"src": "1688:155:9",
									"stateMutability": "view",
									"superFunction": 1385,
									"visibility": "public"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "1907:274:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 911,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "1922:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1938:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1922:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 917,
												"nodeType": "IfStatement",
												"src": "1918:77:9",
												"trueBody": {
													"id": 916,
													"nodeType": "Block",
													"src": "1941:54:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 914,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "1963:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 910,
															"id": 915,
															"nodeType": "Return",
															"src": "1956:27:9"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 932,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "2145:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2135:4:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 926,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 819,
																					"src": "2119:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 923,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 824,
																							"src": "2099:14:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 920,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 906,
																								"src": "2068:24:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 921,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2068:26:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 922,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 642,
																						"src": "2068:30:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 924,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2068:46:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 703,
																				"src": "2068:50:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2068:62:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 703,
																		"src": "2068:66:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2068:72:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 719,
																"src": "2068:76:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2068:90:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 918,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "2025:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 626,
														"src": "2025:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2025:148:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 910,
												"id": 935,
												"nodeType": "Return",
												"src": "2005:168:9"
											}
										]
									},
									"documentation": null,
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1874:2:9"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1898:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1897:9:9"
									},
									"scope": 1359,
									"src": "1851:330:9",
									"stateMutability": "view",
									"superFunction": 1390,
									"visibility": "public"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "2252:135:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 960,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "2362:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 962,
															"indexExpression": {
																"argumentTypes": null,
																"id": 961,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "2370:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2362:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2352:4:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 951,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 830,
																						"src": "2314:22:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 953,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 952,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 939,
																						"src": "2337:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2314:31:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 948,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 937,
																						"src": "2293:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 949,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2293:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 642,
																				"src": "2293:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2293:53:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 944,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 840,
																				"src": "2270:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 946,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 945,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 939,
																				"src": "2280:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2270:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 703,
																		"src": "2270:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2270:77:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 719,
																"src": "2270:81:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2270:87:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 626,
														"src": "2270:91:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2270:109:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 943,
												"id": 964,
												"nodeType": "Return",
												"src": "2263:116:9"
											}
										]
									},
									"documentation": null,
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2205:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2204:17:9"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2243:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2243:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2242:9:9"
									},
									"scope": 1359,
									"src": "2189:198:9",
									"stateMutability": "view",
									"superFunction": 1375,
									"visibility": "public"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "2459:57:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 973,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "2492:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 971,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "2477:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 703,
														"src": "2477:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 970,
												"id": 975,
												"nodeType": "Return",
												"src": "2470:38:9"
											}
										]
									},
									"documentation": null,
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2424:2:9"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "2450:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2449:9:9"
									},
									"scope": 1359,
									"src": "2395:121:9",
									"stateMutability": "view",
									"superFunction": 1380,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "2666:291:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 991,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "2685:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2694:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2685:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2697:16:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 990,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "2677:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2677:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "2677:37:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 997,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "2725:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1000,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "2757:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 998,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "2740:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "2740:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2740:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2725:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "2725:39:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1004,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "2775:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1007,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1005,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "2785:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2785:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2775:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1013,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "2825:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1008,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "2799:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1011,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1009,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1437,
																		"src": "2809:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2809:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2799:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "2799:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2799:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2775:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "2775:57:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1020,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "2873:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2873:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1023,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "2893:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1359",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1359",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2885:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2885:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1025,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "2900:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1017,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "2843:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 442,
														"src": "2843:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$145_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2843:64:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "2843:64:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1029,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "2930:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2930:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1031,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "2942:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1028,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "2923:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2923:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "EmitStatement",
												"src": "2918:31:9"
											}
										]
									},
									"documentation": null,
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 982,
											"modifierName": {
												"argumentTypes": null,
												"id": 981,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 346,
												"src": "2618:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2618:12:9"
										},
										{
											"arguments": null,
											"id": 984,
											"modifierName": {
												"argumentTypes": null,
												"id": 983,
												"name": "notPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 315,
												"src": "2631:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2631:9:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 986,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "2654:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "2654:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 988,
											"modifierName": {
												"argumentTypes": null,
												"id": 985,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1326,
												"src": "2641:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2641:24:9"
										}
									],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "2593:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2592:16:9"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2666:0:9"
									},
									"scope": 1359,
									"src": "2578:379:9",
									"stateMutability": "nonpayable",
									"superFunction": 1416,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "3044:278:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1047,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "3063:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3072:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3063:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3075:19:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 1046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "3055:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3055:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "3055:40:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1053,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "3106:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1056,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "3138:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1054,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "3121:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 642,
															"src": "3121:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3121:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3106:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "3106:39:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1060,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "3156:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1063,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1061,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "3166:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3166:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3156:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1069,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "3206:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1064,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "3180:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1067,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1065,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1437,
																		"src": "3190:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3190:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3180:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 642,
															"src": "3180:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3180:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3156:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "3156:57:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1076,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "3250:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3250:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1078,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "3262:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1073,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "3224:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 417,
														"src": "3224:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$145_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3224:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "3224:45:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1082,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "3295:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3295:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1084,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "3307:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1081,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "3285:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "EmitStatement",
												"src": "3280:34:9"
											}
										]
									},
									"documentation": null,
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1040,
											"modifierName": {
												"argumentTypes": null,
												"id": 1039,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 346,
												"src": "3006:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3006:12:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1042,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "3032:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3032:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1044,
											"modifierName": {
												"argumentTypes": null,
												"id": 1041,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1326,
												"src": "3019:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3019:24:9"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2983:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2983:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2982:16:9"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3044:0:9"
									},
									"scope": 1359,
									"src": "2965:357:9",
									"stateMutability": "nonpayable",
									"superFunction": 1421,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "3396:241:9",
										"statements": [
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"scope": 1130,
														"src": "3407:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1097,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3407:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1103,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1099,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "3424:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1102,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1100,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "3432:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3432:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3424:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3407:36:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1104,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "3458:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3467:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3458:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1129,
												"nodeType": "IfStatement",
												"src": "3454:176:9",
												"trueBody": {
													"id": 1128,
													"nodeType": "Block",
													"src": "3470:160:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1107,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "3485:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1110,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1108,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1437,
																			"src": "3493:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3493:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3485:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3507:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3485:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1113,
															"nodeType": "ExpressionStatement",
															"src": "3485:23:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1117,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1437,
																			"src": "3549:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3549:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1119,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "3561:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1114,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "3523:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$145",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 417,
																	"src": "3523:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$145_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3523:45:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1121,
															"nodeType": "ExpressionStatement",
															"src": "3523:45:9"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1123,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1437,
																			"src": "3599:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3599:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1125,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "3611:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1122,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "3588:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3588:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1127,
															"nodeType": "EmitStatement",
															"src": "3583:35:9"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1091,
											"modifierName": {
												"argumentTypes": null,
												"id": 1090,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 346,
												"src": "3358:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3358:12:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1093,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "3384:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3384:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1095,
											"modifierName": {
												"argumentTypes": null,
												"id": 1092,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1326,
												"src": "3371:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3371:24:9"
										}
									],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3348:2:9"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3396:0:9"
									},
									"scope": 1359,
									"src": "3330:307:9",
									"stateMutability": "nonpayable",
									"superFunction": 1411,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "3670:72:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1135,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "3690:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1138,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1136,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "3700:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3700:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3690:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1134,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "3681:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3681:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "3681:31:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1141,
														"name": "getReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "3723:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3723:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "3723:11:9"
											}
										]
									},
									"documentation": null,
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3658:2:9"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3670:0:9"
									},
									"scope": 1359,
									"src": "3645:97:9",
									"stateMutability": "nonpayable",
									"superFunction": 1408,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "3908:981:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1157,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "3923:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3923:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1159,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "3942:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3923:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1194,
													"nodeType": "Block",
													"src": "4029:208:9",
													"statements": [
														{
															"assignments": [
																1170
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1170,
																	"name": "remaining",
																	"nodeType": "VariableDeclaration",
																	"scope": 1194,
																	"src": "4044:17:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1169,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4044:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1176,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1173,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1427,
																			"src": "4081:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4081:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1171,
																		"name": "periodFinish",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "4064:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 642,
																	"src": "4064:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4064:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4044:53:9"
														},
														{
															"assignments": [
																1178
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1178,
																	"name": "leftover",
																	"nodeType": "VariableDeclaration",
																	"scope": 1194,
																	"src": "4112:16:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1177,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4112:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1183,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1181,
																		"name": "rewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "4145:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1179,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1170,
																		"src": "4131:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 703,
																	"src": "4131:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4131:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4112:44:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1184,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "4171:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1190,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "4209:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1187,
																					"name": "leftover",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1178,
																					"src": "4195:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1185,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "4184:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 626,
																				"src": "4184:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4184:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 719,
																		"src": "4184:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4184:41:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4171:54:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1193,
															"nodeType": "ExpressionStatement",
															"src": "4171:54:9"
														}
													]
												},
												"id": 1195,
												"nodeType": "IfStatement",
												"src": "3919:318:9",
												"trueBody": {
													"id": 1168,
													"nodeType": "Block",
													"src": "3956:67:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1161,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "3971:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1164,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "3995:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1162,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "3984:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 719,
																		"src": "3984:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3984:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3971:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1167,
															"nodeType": "ExpressionStatement",
															"src": "3971:40:9"
														}
													]
												}
											},
											{
												"assignments": [
													1197
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 1232,
														"src": "4597:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1196,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4597:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1204,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1201,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "4643:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1359",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1359",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4635:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4635:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1198,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "4612:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "4612:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4612:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4597:52:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1206,
																"name": "rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "4668:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1209,
																		"name": "rewardsDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "4694:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1207,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "4682:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 719,
																	"src": "4682:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4682:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4668:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50726f76696465642072657761726420746f6f2068696768",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4712:26:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															},
															"value": "Provided reward too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															}
														],
														"id": 1205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "4660:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4660:79:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "4660:79:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1215,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "4752:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1216,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "4769:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4769:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4752:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "4752:32:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1220,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "4795:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1224,
																"name": "rewardsDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "4830:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1221,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "4810:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4810:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "4810:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4810:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4795:51:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "4795:51:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1229,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "4874:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1228,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "4862:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4862:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "EmitStatement",
												"src": "4857:24:9"
											}
										]
									},
									"documentation": null,
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1150,
											"modifierName": {
												"argumentTypes": null,
												"id": 1149,
												"name": "onlyRewardsDistribution",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 371,
												"src": "3859:23:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3859:23:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3904:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3896:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1155,
											"modifierName": {
												"argumentTypes": null,
												"id": 1151,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1326,
												"src": "3883:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3883:24:9"
										}
									],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "3834:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3834:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3833:16:9"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3908:0:9"
									},
									"scope": 1359,
									"src": "3806:1083:9",
									"stateMutability": "nonpayable",
									"superFunction": 359,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "5088:218:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1243,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "5107:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1245,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 813,
																		"src": "5131:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$145",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$145",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5123:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5123:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5107:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656e",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5146:35:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9",
																"typeString": "literal_string \"Cannot withdraw the staking token\""
															},
															"value": "Cannot withdraw the staking token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9",
																"typeString": "literal_string \"Cannot withdraw the staking token\""
															}
														],
														"id": 1242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "5099:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5099:83:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "5099:83:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1255,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5227:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1256,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "5234:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1252,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "5200:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1251,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "5193:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$145_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5193:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 417,
														"src": "5193:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$145_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5193:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "5193:53:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1260,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "5272:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1261,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "5286:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1259,
														"name": "Recovered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "5262:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5262:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "EmitStatement",
												"src": "5257:41:9"
											}
										]
									},
									"documentation": null,
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1240,
											"modifierName": {
												"argumentTypes": null,
												"id": 1239,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 227,
												"src": "5078:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5078:9:9"
										}
									],
									"name": "recoverERC20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "5026:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5026:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"name": "tokenAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "5048:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5048:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5025:43:9"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:9"
									},
									"scope": 1359,
									"src": "5004:302:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "5387:287:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1273,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "5420:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5420:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1275,
																"name": "periodFinish",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "5438:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5420:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5465:90:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56",
																"typeString": "literal_string \"Previous rewards period must be complete before changing the duration for the new period\""
															},
															"value": "Previous rewards period must be complete before changing the duration for the new period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56",
																"typeString": "literal_string \"Previous rewards period must be complete before changing the duration for the new period\""
															}
														],
														"id": 1272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "5398:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5398:168:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "5398:168:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1280,
														"name": "rewardsDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "5577:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1281,
														"name": "_rewardsDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "5595:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5577:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "5577:34:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1285,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "5650:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1284,
														"name": "RewardsDurationUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "5627:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5627:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1287,
												"nodeType": "EmitStatement",
												"src": "5622:44:9"
											}
										]
									},
									"documentation": null,
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1270,
											"modifierName": {
												"argumentTypes": null,
												"id": 1269,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 227,
												"src": "5377:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5377:9:9"
										}
									],
									"name": "setRewardsDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"name": "_rewardsDuration",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "5342:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5341:26:9"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5387:0:9"
									},
									"scope": 1359,
									"src": "5314:360:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "5766:291:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1293,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "5777:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1294,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "5800:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5800:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5777:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "5777:39:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1298,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "5827:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1299,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "5844:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5844:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5827:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "5827:43:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1303,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "5885:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5904:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5896:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5896:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "5885:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1323,
												"nodeType": "IfStatement",
												"src": "5881:157:9",
												"trueBody": {
													"id": 1322,
													"nodeType": "Block",
													"src": "5908:130:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1308,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "5923:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1310,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1309,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "5931:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5923:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1312,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "5949:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1311,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "5942:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5942:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5923:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1315,
															"nodeType": "ExpressionStatement",
															"src": "5923:34:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1316,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "5972:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1318,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1317,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "5995:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5972:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1319,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "6006:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5972:54:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1321,
															"nodeType": "ExpressionStatement",
															"src": "5972:54:9"
														}
													]
												}
											},
											{
												"id": 1324,
												"nodeType": "PlaceholderStatement",
												"src": "6048:1:9"
											}
										]
									},
									"documentation": null,
									"id": 1326,
									"name": "updateReward",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "5749:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5748:17:9"
									},
									"src": "5727:330:9",
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1330,
									"name": "RewardAdded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"indexed": false,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "6125:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6125:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6124:16:9"
									},
									"src": "6107:34:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1336,
									"name": "Staked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"indexed": true,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "6160:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6160:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "6182:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6182:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6159:38:9"
									},
									"src": "6147:51:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1342,
									"name": "Withdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"indexed": true,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "6220:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6220:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "6242:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6242:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6219:38:9"
									},
									"src": "6204:54:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1348,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "6281:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": false,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "6303:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6303:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6280:38:9"
									},
									"src": "6264:55:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1352,
									"name": "RewardsDurationUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"indexed": false,
												"name": "newDuration",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "6354:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6354:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6353:21:9"
									},
									"src": "6325:50:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1358,
									"name": "Recovered",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"indexed": false,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "6397:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6397:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "6412:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6412:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6396:31:9"
									},
									"src": "6381:47:9"
								}
							],
							"scope": 1360,
							"src": "352:6079:9"
						}
					],
					"src": "0:6433:9"
				},
				"id": 9
			},
			"contracts/interfaces/IStakingRewards.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IStakingRewards.sol",
					"exportedSymbols": {
						"IStakingRewards": [
							1422
						]
					},
					"id": 1423,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1361,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:10"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1422,
							"linearizedBaseContracts": [
								1422
							],
							"name": "IStakingRewards",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "165:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "164:17:10"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "205:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "204:9:10"
									},
									"scope": 1422,
									"src": "146:68:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "236:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "235:17:10"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "276:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "275:9:10"
									},
									"scope": 1422,
									"src": "220:65:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "320:2:10"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "346:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "345:9:10"
									},
									"scope": 1422,
									"src": "291:64:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:2:10"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "420:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "419:9:10"
									},
									"scope": 1422,
									"src": "361:68:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:10"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "484:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "483:9:10"
									},
									"scope": 1422,
									"src": "435:58:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardsDistribution",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "527:2:10"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "553:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "552:9:10"
									},
									"scope": 1422,
									"src": "499:63:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardsToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:10"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "614:9:10"
									},
									"scope": 1422,
									"src": "568:56:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "650:2:10"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "676:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "675:9:10"
									},
									"scope": 1422,
									"src": "630:55:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "721:2:10"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "732:0:10"
									},
									"scope": 1422,
									"src": "708:25:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "757:2:10"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "768:0:10"
									},
									"scope": 1422,
									"src": "739:30:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "790:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "789:16:10"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "814:0:10"
									},
									"scope": 1422,
									"src": "775:40:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "839:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "838:16:10"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "863:0:10"
									},
									"scope": 1422,
									"src": "821:43:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1423,
							"src": "100:766:10"
						}
					],
					"src": "0:867:10"
				},
				"id": 10
			}
		}
	}
}