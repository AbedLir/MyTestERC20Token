{
	"compiler": {
		"version": "0.5.17+commit.d19bba13"
	},
	"language": "Solidity",
	"output": {
		"abi": [],
		"devdoc": {
			"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
			"methods": {}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/SafeMath.sol": "SafeMath"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/SafeMath.sol": {
			"keccak256": "0xbd3766507e47157b50f655d7002fde93b02ddd79a1582e0cd289bfcab255b70e",
			"urls": [
				"bzz-raw://8ab0be9d810fb055a554c4cc16ca40eee565bd18fdb3a92d7b323a83037cc3c0",
				"dweb:/ipfs/QmPHHb6KHZRuKBvbAGRjEobfMngobNkMYGEzMzqNBwGNhZ"
			]
		}
	},
	"version": 1
}